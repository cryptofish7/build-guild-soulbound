{
	"id": "d7515f3b99171d1fecb896d10ec55c63",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"BuildGuildSoulbound.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.2\n// Creators: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './ERC721ASoulbound.sol';\n\ncontract ERC721ASoulboundMock is ERC721ASoulbound {\n    constructor(string memory name_, string memory symbol_) ERC721A(name_, symbol_) {}\n\n    function safeMint(address to, uint256 quantity) public {\n        _safeMint(to, quantity);\n    }\n}\n"
			},
			"ERC721ASoulbound.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.2\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ASoulbound.sol';\nimport './ERC721ABurnable.sol';\n\n/**\n * @title ERC721ASoulbound.\n *\n * @dev ERC721A token that is non-transferable.\n */\nabstract contract ERC721ASoulbound is ERC721ABurnable, IERC721ASoulbound {\n    /**\n     * @dev Overrides _beforeTokenTransfers to make token non-transferable. The token is till mintable, and burnable.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual override {\n        if (from != address(0)) \n            if (to != address(0)) \n            revert SoulboundTokenCannotBeTransferred();\n    }\n}\n"
			},
			"ERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport './ERC721A.sol';\n\n/**\n * @title ERC721ABurnable.\n *\n * @dev ERC721A token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"IERC721ASoulbound.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.2\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\n\n/**\n * @dev Interface of ERC721ASoulbound.\n */\ninterface IERC721ASoulbound is IERC721ABurnable {\n    /**\n     * A Soulbound token cannot be transferred.\n     */\n    error SoulboundTokenCannotBeTransferred();\n}\n"
			},
			"IERC721ABurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721ABurnable.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"
			},
			"IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BuildGuildSoulbound.sol": {
				"ERC721ASoulboundMock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoulboundTokenCannotBeTransferred",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BuildGuildSoulbound.sol\":144:385  contract ERC721ASoulboundMock is ERC721ASoulbound {... */\n  mstore(0x40, 0x80)\n    /* \"BuildGuildSoulbound.sol\":200:282  constructor(string memory name_, string memory symbol_) ERC721A(name_, symbol_) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BuildGuildSoulbound.sol\":264:269  name_ */\n  dup2\n    /* \"BuildGuildSoulbound.sol\":271:278  symbol_ */\n  dup2\n    /* \"ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_10\n    /* \"ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_11)\n    /* \"ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"BuildGuildSoulbound.sol\":200:282  constructor(string memory name_, string memory symbol_) ERC721A(name_, symbol_) {} */\n  pop\n  pop\n    /* \"BuildGuildSoulbound.sol\":144:385  contract ERC721ASoulboundMock is ERC721ASoulbound {... */\n  jump(tag_13)\n    /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_11:\n    /* \"ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"BuildGuildSoulbound.sol\":144:385  contract ERC721ASoulboundMock is ERC721ASoulbound {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_18\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_17)\ntag_18:\n  dup3\n  0x1f\n  lt\n  tag_19\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_19:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_20:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_20)\ntag_21:\ntag_17:\n  pop\n  swap1\n  pop\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  pop\n  swap1\n  jump\t// out\ntag_23:\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_24)\ntag_25:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_27:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_29\n    /* \"#utility.yul\":137:186   */\n  tag_30\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":121:187   */\n  tag_32\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":262:374   */\ntag_33:\n    /* \"#utility.yul\":383:422   */\n  tag_36\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_38:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":531:653   */\ntag_40:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_43\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_27\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":933:1052   */\ntag_45:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1128:1245   */\ntag_48:\n    /* \"#utility.yul\":1269:1343   */\n  tag_51\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_38\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_53\n  tag_50\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1430:1547   */\ntag_52:\n    /* \"#utility.yul\":1571:1645   */\n  tag_54\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_38\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_32:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_56\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_58\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_57:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_31:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2022:2078   */\ntag_62:\n    /* \"#utility.yul\":2096:2125   */\n  tag_65\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_37:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_68:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_71:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_16:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_73:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_75\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2741:2825   */\ntag_74:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_59:\n    /* \"#utility.yul\":2920:2947   */\n  tag_78\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_66\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_80\n  tag_64\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2993:3081   */\ntag_79:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_76:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_64:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_42:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_35:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_50:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_47:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_66:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"BuildGuildSoulbound.sol\":144:385  contract ERC721ASoulboundMock is ERC721ASoulbound {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BuildGuildSoulbound.sol\":144:385  contract ERC721ASoulboundMock is ERC721ASoulbound {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa1448194\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"ERC721ABurnable.sol\":509:601  function burn(uint256 tokenId) public virtual override {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuildGuildSoulbound.sol\":288:383  function safeMint(address to, uint256 quantity) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_15:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"ERC721A.sol\":9240:9244  bool */\n      0x00\n        /* \"ERC721A.sol\":9573:9583  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9558:9569  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"ERC721A.sol\":9649:9659  0x80ac58cd */\n      0x80ac58cd\n        /* \"ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9634:9645  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_100:\n        /* \"ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_101\n      jumpi\n      pop\n        /* \"ERC721A.sol\":9725:9735  0x5b5e139f */\n      0x5b5e139f\n        /* \"ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9710:9721  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_101:\n        /* \"ERC721A.sol\":9539:9735  return... */\n      swap1\n      pop\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"ERC721A.sol\":10093:10106  string memory */\n      0x60\n        /* \"ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \"ERC721A.sol\":10118:10130  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_37:\n        /* \"ERC721A.sol\":16436:16443  address */\n      0x00\n        /* \"ERC721A.sol\":16460:16476  _exists(tokenId) */\n      tag_110\n        /* \"ERC721A.sol\":16468:16475  tokenId */\n      dup3\n        /* \"ERC721A.sol\":16460:16467  _exists */\n      tag_111\n        /* \"ERC721A.sol\":16460:16476  _exists(tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_112\n      jumpi\n        /* \"ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_112:\n        /* \"ERC721A.sol\":16537:16552  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":16553:16560  tokenId */\n      dup4\n        /* \"ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16537:16567  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":16530:16567  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_43:\n        /* \"ERC721A.sol\":15900:15913  address owner */\n      0x00\n        /* \"ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      tag_114\n        /* \"ERC721A.sol\":15924:15931  tokenId */\n      dup3\n        /* \"ERC721A.sol\":15916:15923  ownerOf */\n      tag_63\n        /* \"ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      jump\t// in\n    tag_114:\n        /* \"ERC721A.sol\":15900:15932  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":15970:15975  owner */\n      dup1\n        /* \"ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":15947:15966  _msgSenderERC721A() */\n      tag_115\n        /* \"ERC721A.sol\":15947:15964  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":15947:15966  _msgSenderERC721A() */\n      jump\t// in\n    tag_115:\n        /* \"ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_117\n      jumpi\n        /* \"ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_118\n        /* \"ERC721A.sol\":16011:16016  owner */\n      dup2\n        /* \"ERC721A.sol\":16018:16037  _msgSenderERC721A() */\n      tag_119\n        /* \"ERC721A.sol\":16018:16035  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":16018:16037  _msgSenderERC721A() */\n      jump\t// in\n    tag_119:\n        /* \"ERC721A.sol\":15994:16010  isApprovedForAll */\n      tag_97\n        /* \"ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_118:\n        /* \"ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_120\n      jumpi\n        /* \"ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_120:\n        /* \"ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n    tag_117:\n        /* \"ERC721A.sol\":16158:16160  to */\n      dup3\n        /* \"ERC721A.sol\":16125:16140  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":16141:16148  tokenId */\n      dup5\n        /* \"ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16125:16155  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"ERC721A.sol\":16125:16160  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":16195:16202  tokenId */\n      dup2\n        /* \"ERC721A.sol\":16191:16193  to */\n      dup4\n        /* \"ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":16184:16189  owner */\n      dup3\n        /* \"ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721A.sol\":15890:16210  {... */\n      pop\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_46:\n        /* \"ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_122\n        /* \"ERC721A.sol\":6179:6192  _startTokenId */\n      tag_123\n        /* \"ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_122:\n        /* \"ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_52:\n        /* \"ERC721A.sol\":20040:20067  uint256 prevOwnershipPacked */\n      0x00\n        /* \"ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      tag_125\n        /* \"ERC721A.sol\":20089:20096  tokenId */\n      dup3\n        /* \"ERC721A.sol\":20070:20088  _packedOwnershipOf */\n      tag_126\n        /* \"ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"ERC721A.sol\":20040:20097  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":20153:20157  from */\n      dup4\n        /* \"ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":20128:20147  prevOwnershipPacked */\n      dup2\n        /* \"ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_127\n      jumpi\n        /* \"ERC721A.sol\":20166:20194  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_127:\n        /* \"ERC721A.sol\":20206:20233  uint256 approvedAddressSlot */\n      0x00\n        /* \"ERC721A.sol\":20235:20258  address approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":20262:20297  _getApprovedSlotAndAddress(tokenId) */\n      tag_128\n        /* \"ERC721A.sol\":20289:20296  tokenId */\n      dup5\n        /* \"ERC721A.sol\":20262:20288  _getApprovedSlotAndAddress */\n      tag_129\n        /* \"ERC721A.sol\":20262:20297  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"ERC721A.sol\":20205:20297  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_130\n        /* \"ERC721A.sol\":20419:20434  approvedAddress */\n      dup2\n        /* \"ERC721A.sol\":20436:20440  from */\n      dup8\n        /* \"ERC721A.sol\":20442:20461  _msgSenderERC721A() */\n      tag_131\n        /* \"ERC721A.sol\":20442:20459  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":20442:20461  _msgSenderERC721A() */\n      jump\t// in\n    tag_131:\n        /* \"ERC721A.sol\":20394:20418  _isSenderApprovedOrOwner */\n      tag_132\n        /* \"ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_130:\n        /* \"ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_133\n      jumpi\n        /* \"ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_134\n        /* \"ERC721A.sol\":20498:20502  from */\n      dup7\n        /* \"ERC721A.sol\":20504:20523  _msgSenderERC721A() */\n      tag_135\n        /* \"ERC721A.sol\":20504:20521  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":20504:20523  _msgSenderERC721A() */\n      jump\t// in\n    tag_135:\n        /* \"ERC721A.sol\":20481:20497  isApprovedForAll */\n      tag_97\n        /* \"ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_134:\n        /* \"ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_136\n      jumpi\n        /* \"ERC721A.sol\":20533:20568  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_136:\n        /* \"ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_133:\n        /* \"ERC721A.sol\":20597:20598  0 */\n      0x00\n        /* \"ERC721A.sol\":20583:20599  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":20583:20585  to */\n      dup6\n        /* \"ERC721A.sol\":20583:20599  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n      iszero\n      tag_137\n      jumpi\n        /* \"ERC721A.sol\":20608:20631  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_137:\n        /* \"ERC721A.sol\":20642:20685  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_138\n        /* \"ERC721A.sol\":20664:20668  from */\n      dup7\n        /* \"ERC721A.sol\":20670:20672  to */\n      dup7\n        /* \"ERC721A.sol\":20674:20681  tokenId */\n      dup7\n        /* \"ERC721A.sol\":20683:20684  1 */\n      0x01\n        /* \"ERC721A.sol\":20642:20663  _beforeTokenTransfers */\n      tag_139\n        /* \"ERC721A.sol\":20642:20685  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_138:\n        /* \"ERC721A.sol\":20774:20789  approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":20771:20928  if approvedAddress {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"ERC721A.sol\":20912:20913  0 */\n      0x00\n        /* \"ERC721A.sol\":20891:20910  approvedAddressSlot */\n      dup3\n        /* \"ERC721A.sol\":20884:20914  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"ERC721A.sol\":20771:20928  if approvedAddress {... */\n    tag_140:\n        /* \"ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0x00\n        /* \"ERC721A.sol\":21319:21323  from */\n      dup8\n        /* \"ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":21298:21324  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21368:21386  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      0x00\n        /* \"ERC721A.sol\":21387:21389  to */\n      dup7\n        /* \"ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":21366:21390  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21683:21826  _packOwnershipData(... */\n      tag_141\n        /* \"ERC721A.sol\":21719:21721  to */\n      dup6\n        /* \"ERC721A.sol\":21767:21812  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_142\n        /* \"ERC721A.sol\":21782:21786  from */\n      dup9\n        /* \"ERC721A.sol\":21788:21790  to */\n      dup9\n        /* \"ERC721A.sol\":21792:21811  prevOwnershipPacked */\n      dup8\n        /* \"ERC721A.sol\":21767:21781  _nextExtraData */\n      tag_143\n        /* \"ERC721A.sol\":21767:21812  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_142:\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":21739:21812  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"ERC721A.sol\":21683:21701  _packOwnershipData */\n      tag_144\n        /* \"ERC721A.sol\":21683:21826  _packOwnershipData(... */\n      jump\t// in\n    tag_141:\n        /* \"ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":21672:21679  tokenId */\n      dup7\n        /* \"ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":21654:21826  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21994:21995  0 */\n      0x00\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":21943:21962  prevOwnershipPacked */\n      dup5\n        /* \"ERC721A.sol\":21943:21990  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"ERC721A.sol\":21943:21995  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"ERC721A.sol\":22015:22034  uint256 nextTokenId */\n      0x00\n        /* \"ERC721A.sol\":22047:22048  1 */\n      0x01\n        /* \"ERC721A.sol\":22037:22044  tokenId */\n      dup6\n        /* \"ERC721A.sol\":22037:22048  tokenId + 1 */\n      add\n        /* \"ERC721A.sol\":22015:22048  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"ERC721A.sol\":22202:22203  0 */\n      0x00\n        /* \"ERC721A.sol\":22168:22185  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":22186:22197  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":22168:22203  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"ERC721A.sol\":22304:22317  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":22289:22300  nextTokenId */\n      dup2\n        /* \"ERC721A.sol\":22289:22317  nextTokenId != _currentIndex */\n      eq\n        /* \"ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      tag_147\n      jumpi\n        /* \"ERC721A.sol\":22482:22501  prevOwnershipPacked */\n      dup4\n        /* \"ERC721A.sol\":22449:22466  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":22467:22478  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":22449:22501  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n    tag_147:\n        /* \"ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_146:\n        /* \"ERC721A.sol\":21997:22556  {... */\n      pop\n        /* \"ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_145:\n        /* \"ERC721A.sol\":22600:22607  tokenId */\n      dup4\n        /* \"ERC721A.sol\":22596:22598  to */\n      dup6\n        /* \"ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":22590:22594  from */\n      dup8\n        /* \"ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721A.sol\":22618:22660  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_148\n        /* \"ERC721A.sol\":22639:22643  from */\n      dup7\n        /* \"ERC721A.sol\":22645:22647  to */\n      dup7\n        /* \"ERC721A.sol\":22649:22656  tokenId */\n      dup7\n        /* \"ERC721A.sol\":22658:22659  1 */\n      0x01\n        /* \"ERC721A.sol\":22618:22638  _afterTokenTransfers */\n      tag_149\n        /* \"ERC721A.sol\":22618:22660  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_148:\n        /* \"ERC721A.sol\":20030:22667  {... */\n      pop\n      pop\n      pop\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_55:\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_151\n        /* \"ERC721A.sol\":22916:22920  from */\n      dup4\n        /* \"ERC721A.sol\":22922:22924  to */\n      dup4\n        /* \"ERC721A.sol\":22926:22933  tokenId */\n      dup4\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC721A.sol\":22899:22915  safeTransferFrom */\n      tag_87\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_151:\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721ABurnable.sol\":509:601  function burn(uint256 tokenId) public virtual override {... */\n    tag_59:\n        /* \"ERC721ABurnable.sol\":574:594  _burn(tokenId, true) */\n      tag_153\n        /* \"ERC721ABurnable.sol\":580:587  tokenId */\n      dup2\n        /* \"ERC721ABurnable.sol\":589:593  true */\n      0x01\n        /* \"ERC721ABurnable.sol\":574:579  _burn */\n      tag_154\n        /* \"ERC721ABurnable.sol\":574:594  _burn(tokenId, true) */\n      jump\t// in\n    tag_153:\n        /* \"ERC721ABurnable.sol\":509:601  function burn(uint256 tokenId) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_63:\n        /* \"ERC721A.sol\":11463:11470  address */\n      0x00\n        /* \"ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_156\n        /* \"ERC721A.sol\":11524:11531  tokenId */\n      dup3\n        /* \"ERC721A.sol\":11505:11523  _packedOwnershipOf */\n      tag_126\n        /* \"ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"ERC721A.sol\":11482:11534  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_69:\n        /* \"ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      iszero\n      tag_158\n      jumpi\n        /* \"ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_158:\n        /* \"ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"ERC721A.sol\":7213:7231  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0x00\n        /* \"ERC721A.sol\":7232:7237  owner */\n      dup5\n        /* \"ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":7213:7268  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"ERC721A.sol\":7206:7268  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"ERC721A.sol\":10264:10277  string memory */\n      0x60\n        /* \"ERC721A.sol\":10296:10303  _symbol */\n      0x03\n        /* \"ERC721A.sol\":10289:10303  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_104\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_104\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"BuildGuildSoulbound.sol\":288:383  function safeMint(address to, uint256 quantity) public {... */\n    tag_78:\n        /* \"BuildGuildSoulbound.sol\":353:376  _safeMint(to, quantity) */\n      tag_166\n        /* \"BuildGuildSoulbound.sol\":363:365  to */\n      dup3\n        /* \"BuildGuildSoulbound.sol\":367:375  quantity */\n      dup3\n        /* \"BuildGuildSoulbound.sol\":353:362  _safeMint */\n      tag_167\n        /* \"BuildGuildSoulbound.sol\":353:376  _safeMint(to, quantity) */\n      jump\t// in\n    tag_166:\n        /* \"BuildGuildSoulbound.sol\":288:383  function safeMint(address to, uint256 quantity) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_83:\n        /* \"ERC721A.sol\":17047:17055  approved */\n      dup1\n        /* \"ERC721A.sol\":16995:17013  _operatorApprovals */\n      0x07\n        /* \"ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"ERC721A.sol\":17014:17033  _msgSenderERC721A() */\n      tag_169\n        /* \"ERC721A.sol\":17014:17031  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":17014:17033  _msgSenderERC721A() */\n      jump\t// in\n    tag_169:\n        /* \"ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"ERC721A.sol\":17035:17043  operator */\n      dup5\n        /* \"ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":16995:17055  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":17106:17114  operator */\n      dup2\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":17085:17104  _msgSenderERC721A() */\n      tag_170\n        /* \"ERC721A.sol\":17085:17102  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":17085:17104  _msgSenderERC721A() */\n      jump\t// in\n    tag_170:\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC721A.sol\":17116:17124  approved */\n      dup4\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_87:\n        /* \"ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      tag_173\n        /* \"ERC721A.sol\":23708:23712  from */\n      dup5\n        /* \"ERC721A.sol\":23714:23716  to */\n      dup5\n        /* \"ERC721A.sol\":23718:23725  tokenId */\n      dup5\n        /* \"ERC721A.sol\":23695:23707  transferFrom */\n      tag_52\n        /* \"ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"ERC721A.sol\":23758:23759  0 */\n      0x00\n        /* \"ERC721A.sol\":23740:23742  to */\n      dup4\n        /* \"ERC721A.sol\":23740:23754  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC721A.sol\":23740:23759  to.code.length != 0 */\n      eq\n        /* \"ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      tag_174\n      jumpi\n        /* \"ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_175\n        /* \"ERC721A.sol\":23809:23813  from */\n      dup5\n        /* \"ERC721A.sol\":23815:23817  to */\n      dup5\n        /* \"ERC721A.sol\":23819:23826  tokenId */\n      dup5\n        /* \"ERC721A.sol\":23828:23833  _data */\n      dup5\n        /* \"ERC721A.sol\":23778:23808  _checkContractOnERC721Received */\n      tag_176\n        /* \"ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_175:\n        /* \"ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_177\n      jumpi\n        /* \"ERC721A.sol\":23861:23901  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_177:\n        /* \"ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n    tag_174:\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_91:\n        /* \"ERC721A.sol\":10484:10497  string memory */\n      0x60\n        /* \"ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_179\n        /* \"ERC721A.sol\":10522:10529  tokenId */\n      dup3\n        /* \"ERC721A.sol\":10514:10521  _exists */\n      tag_111\n        /* \"ERC721A.sol\":10514:10530  _exists(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_180\n      jumpi\n        /* \"ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_180:\n        /* \"ERC721A.sol\":10579:10600  string memory baseURI */\n      0x00\n        /* \"ERC721A.sol\":10603:10613  _baseURI() */\n      tag_181\n        /* \"ERC721A.sol\":10603:10611  _baseURI */\n      tag_182\n        /* \"ERC721A.sol\":10603:10613  _baseURI() */\n      jump\t// in\n    tag_181:\n        /* \"ERC721A.sol\":10579:10613  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"ERC721A.sol\":10655:10656  0 */\n      0x00\n        /* \"ERC721A.sol\":10636:10643  baseURI */\n      dup2\n        /* \"ERC721A.sol\":10630:10651  bytes(baseURI).length */\n      mload\n        /* \"ERC721A.sol\":10630:10656  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_183\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_184)\n    tag_183:\n        /* \"ERC721A.sol\":10683:10690  baseURI */\n      dup1\n        /* \"ERC721A.sol\":10692:10710  _toString(tokenId) */\n      tag_185\n        /* \"ERC721A.sol\":10702:10709  tokenId */\n      dup5\n        /* \"ERC721A.sol\":10692:10701  _toString */\n      tag_186\n        /* \"ERC721A.sol\":10692:10710  _toString(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"ERC721A.sol\":10666:10711  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_184:\n        /* \"ERC721A.sol\":10623:10717  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_97:\n        /* \"ERC721A.sol\":17379:17383  bool */\n      0x00\n        /* \"ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \"ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC721A.sol\":17421:17426  owner */\n      dup5\n        /* \"ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC721A.sol\":17428:17436  operator */\n      dup4\n        /* \"ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC721A.sol\":17395:17437  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"ERC721A.sol\":17758:17762  bool */\n      0x00\n        /* \"ERC721A.sol\":17812:17819  tokenId */\n      dup2\n        /* \"ERC721A.sol\":17793:17808  _startTokenId() */\n      tag_191\n        /* \"ERC721A.sol\":17793:17806  _startTokenId */\n      tag_123\n        /* \"ERC721A.sol\":17793:17808  _startTokenId() */\n      jump\t// in\n    tag_191:\n        /* \"ERC721A.sol\":17793:17819  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"ERC721A.sol\":17793:17858  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"ERC721A.sol\":17845:17858  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":17835:17842  tokenId */\n      dup3\n        /* \"ERC721A.sol\":17835:17858  tokenId < _currentIndex */\n      lt\n        /* \"ERC721A.sol\":17793:17858  _startTokenId() <= tokenId &&... */\n    tag_192:\n        /* \"ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n        /* \"ERC721A.sol\":17943:17944  0 */\n      0x00\n        /* \"ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":17895:17912  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":17913:17920  tokenId */\n      dup6\n        /* \"ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":17895:17939  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"ERC721A.sol\":17895:17944  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n    tag_193:\n        /* \"ERC721A.sol\":17774:17944  return... */\n      swap1\n      pop\n        /* \"ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":39437:39540  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_116:\n        /* \"ERC721A.sol\":39497:39504  address */\n      0x00\n        /* \"ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"ERC721A.sol\":39516:39533  return msg.sender */\n      swap1\n      pop\n        /* \"ERC721A.sol\":39437:39540  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_123:\n        /* \"ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_126:\n        /* \"ERC721A.sol\":12582:12589  uint256 */\n      0x00\n        /* \"ERC721A.sol\":12601:12613  uint256 curr */\n      dup1\n        /* \"ERC721A.sol\":12616:12623  tokenId */\n      dup3\n        /* \"ERC721A.sol\":12601:12623  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"ERC721A.sol\":12681:12685  curr */\n      dup1\n        /* \"ERC721A.sol\":12662:12677  _startTokenId() */\n      tag_197\n        /* \"ERC721A.sol\":12662:12675  _startTokenId */\n      tag_123\n        /* \"ERC721A.sol\":12662:12677  _startTokenId() */\n      jump\t// in\n    tag_197:\n        /* \"ERC721A.sol\":12662:12685  _startTokenId() <= curr */\n      gt\n        /* \"ERC721A.sol\":12658:13700  if (_startTokenId() <= curr)... */\n      tag_198\n      jumpi\n        /* \"ERC721A.sol\":12714:12727  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":12707:12711  curr */\n      dup2\n        /* \"ERC721A.sol\":12707:12727  curr < _currentIndex */\n      lt\n        /* \"ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"ERC721A.sol\":12751:12765  uint256 packed */\n      0x00\n        /* \"ERC721A.sol\":12768:12785  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      0x00\n        /* \"ERC721A.sol\":12786:12790  curr */\n      dup4\n        /* \"ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":12751:12791  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":12883:12884  0 */\n      0x00\n        /* \"ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":12855:12861  packed */\n      dup3\n        /* \"ERC721A.sol\":12855:12879  packed & _BITMASK_BURNED */\n      and\n        /* \"ERC721A.sol\":12855:12884  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n    tag_201:\n        /* \"ERC721A.sol\":13527:13528  0 */\n      0x00\n        /* \"ERC721A.sol\":13517:13523  packed */\n      dup2\n        /* \"ERC721A.sol\":13517:13528  packed == 0 */\n      eq\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"ERC721A.sol\":13569:13586  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x00\n        /* \"ERC721A.sol\":13587:13593  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":13560:13594  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      jump(tag_201)\n    tag_202:\n        /* \"ERC721A.sol\":13653:13659  packed */\n      dup1\n        /* \"ERC721A.sol\":13646:13659  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_196)\n        /* \"ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_200:\n        /* \"ERC721A.sol\":12729:13700  {... */\n      pop\n        /* \"ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n    tag_199:\n        /* \"ERC721A.sol\":12658:13700  if (_startTokenId() <= curr)... */\n    tag_198:\n        /* \"ERC721A.sol\":13726:13757  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_196:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":18828:19302  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_129:\n        /* \"ERC721A.sol\":18927:18954  uint256 approvedAddressSlot */\n      0x00\n        /* \"ERC721A.sol\":18956:18979  address approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":18995:19033  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":19052:19059  tokenId */\n      dup6\n        /* \"ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":18995:19060  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":19210:19228  tokenApproval.slot */\n      dup1\n        /* \"ERC721A.sol\":19187:19228  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"ERC721A.sol\":19266:19285  approvedAddressSlot */\n      dup3\n        /* \"ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      sload\n        /* \"ERC721A.sol\":19241:19286  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":19173:19296  {... */\n      pop\n        /* \"ERC721A.sol\":18828:19302  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"ERC721A.sol\":18074:18720  function _isSenderApprovedOrOwner(... */\n    tag_132:\n        /* \"ERC721A.sol\":18219:18230  bool result */\n      0x00\n        /* \"ERC721A.sol\":18381:18397  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":18374:18379  owner */\n      dup4\n        /* \"ERC721A.sol\":18370:18398  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":18361:18398  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"ERC721A.sol\":18539:18555  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":18528:18537  msgSender */\n      dup3\n        /* \"ERC721A.sol\":18524:18556  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":18511:18556  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":18687:18702  approvedAddress */\n      dup4\n        /* \"ERC721A.sol\":18676:18685  msgSender */\n      dup3\n        /* \"ERC721A.sol\":18673:18703  eq(msgSender, approvedAddress) */\n      eq\n        /* \"ERC721A.sol\":18665:18670  owner */\n      dup4\n        /* \"ERC721A.sol\":18654:18663  msgSender */\n      dup4\n        /* \"ERC721A.sol\":18651:18671  eq(msgSender, owner) */\n      eq\n        /* \"ERC721A.sol\":18648:18704  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"ERC721A.sol\":18638:18704  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":18074:18720  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721ASoulbound.sol\":578:870  function _beforeTokenTransfers(... */\n    tag_139:\n        /* \"ERC721ASoulbound.sol\":769:770  0 */\n      0x00\n        /* \"ERC721ASoulbound.sol\":753:771  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721ASoulbound.sol\":753:757  from */\n      dup5\n        /* \"ERC721ASoulbound.sol\":753:771  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721ASoulbound.sol\":749:863  if (from != address(0)) ... */\n      tag_206\n      jumpi\n        /* \"ERC721ASoulbound.sol\":804:805  0 */\n      0x00\n        /* \"ERC721ASoulbound.sol\":790:806  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721ASoulbound.sol\":790:792  to */\n      dup4\n        /* \"ERC721ASoulbound.sol\":790:806  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721ASoulbound.sol\":786:863  if (to != address(0)) ... */\n      tag_207\n      jumpi\n        /* \"ERC721ASoulbound.sol\":828:863  SoulboundTokenCannotBeTransferred() */\n      mload(0x40)\n      0x0701eeb900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721ASoulbound.sol\":786:863  if (to != address(0)) ... */\n    tag_207:\n        /* \"ERC721ASoulbound.sol\":749:863  if (from != address(0)) ... */\n    tag_206:\n        /* \"ERC721ASoulbound.sol\":578:870  function _beforeTokenTransfers(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":38764:39068  function _nextExtraData(... */\n    tag_143:\n        /* \"ERC721A.sol\":38895:38902  uint256 */\n      0x00\n        /* \"ERC721A.sol\":38914:38930  uint24 extraData */\n      dup1\n        /* \"ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"ERC721A.sol\":38940:38959  prevOwnershipPacked */\n      dup4\n        /* \"ERC721A.sol\":38940:38981  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"ERC721A.sol\":38914:38982  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"ERC721A.sol\":39007:39038  _extraData(from, to, extraData) */\n      tag_209\n        /* \"ERC721A.sol\":39018:39022  from */\n      dup7\n        /* \"ERC721A.sol\":39024:39026  to */\n      dup7\n        /* \"ERC721A.sol\":39028:39037  extraData */\n      dup5\n        /* \"ERC721A.sol\":39007:39017  _extraData */\n      tag_210\n        /* \"ERC721A.sol\":39007:39038  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_209:\n        /* \"ERC721A.sol\":38999:39039  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"ERC721A.sol\":38999:39061  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"ERC721A.sol\":38992:39061  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":38764:39068  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":14297:14740  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_144:\n        /* \"ERC721A.sol\":14377:14391  uint256 result */\n      0x00\n        /* \"ERC721A.sol\":14542:14558  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":14535:14540  owner */\n      dup4\n        /* \"ERC721A.sol\":14531:14559  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":14522:14559  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"ERC721A.sol\":14717:14722  flags */\n      dup2\n        /* \"ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"ERC721A.sol\":14671:14723  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"ERC721A.sol\":14664:14669  owner */\n      dup4\n        /* \"ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"ERC721A.sol\":14651:14724  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":14297:14740  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":25367:25520  function _afterTokenTransfers(... */\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":34095:37110  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_154:\n        /* \"ERC721A.sol\":34174:34201  uint256 prevOwnershipPacked */\n      0x00\n        /* \"ERC721A.sol\":34204:34231  _packedOwnershipOf(tokenId) */\n      tag_214\n        /* \"ERC721A.sol\":34223:34230  tokenId */\n      dup4\n        /* \"ERC721A.sol\":34204:34222  _packedOwnershipOf */\n      tag_126\n        /* \"ERC721A.sol\":34204:34231  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_214:\n        /* \"ERC721A.sol\":34174:34231  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":34242:34254  address from */\n      0x00\n        /* \"ERC721A.sol\":34273:34292  prevOwnershipPacked */\n      dup2\n        /* \"ERC721A.sol\":34242:34294  address from = address(uint160(prevOwnershipPacked)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":34306:34333  uint256 approvedAddressSlot */\n      0x00\n        /* \"ERC721A.sol\":34335:34358  address approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":34362:34397  _getApprovedSlotAndAddress(tokenId) */\n      tag_215\n        /* \"ERC721A.sol\":34389:34396  tokenId */\n      dup7\n        /* \"ERC721A.sol\":34362:34388  _getApprovedSlotAndAddress */\n      tag_129\n        /* \"ERC721A.sol\":34362:34397  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"ERC721A.sol\":34305:34397  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ERC721A.sol\":34412:34425  approvalCheck */\n      dup5\n        /* \"ERC721A.sol\":34408:34720  if (approvalCheck) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"ERC721A.sol\":34531:34599  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_217\n        /* \"ERC721A.sol\":34556:34571  approvedAddress */\n      dup2\n        /* \"ERC721A.sol\":34573:34577  from */\n      dup5\n        /* \"ERC721A.sol\":34579:34598  _msgSenderERC721A() */\n      tag_218\n        /* \"ERC721A.sol\":34579:34596  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":34579:34598  _msgSenderERC721A() */\n      jump\t// in\n    tag_218:\n        /* \"ERC721A.sol\":34531:34555  _isSenderApprovedOrOwner */\n      tag_132\n        /* \"ERC721A.sol\":34531:34599  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_217:\n        /* \"ERC721A.sol\":34526:34709  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_219\n      jumpi\n        /* \"ERC721A.sol\":34622:34665  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_220\n        /* \"ERC721A.sol\":34639:34643  from */\n      dup4\n        /* \"ERC721A.sol\":34645:34664  _msgSenderERC721A() */\n      tag_221\n        /* \"ERC721A.sol\":34645:34662  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":34645:34664  _msgSenderERC721A() */\n      jump\t// in\n    tag_221:\n        /* \"ERC721A.sol\":34622:34638  isApprovedForAll */\n      tag_97\n        /* \"ERC721A.sol\":34622:34665  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_220:\n        /* \"ERC721A.sol\":34617:34709  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_222\n      jumpi\n        /* \"ERC721A.sol\":34674:34709  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":34617:34709  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_222:\n        /* \"ERC721A.sol\":34526:34709  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_219:\n        /* \"ERC721A.sol\":34408:34720  if (approvalCheck) {... */\n    tag_216:\n        /* \"ERC721A.sol\":34730:34781  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      tag_223\n        /* \"ERC721A.sol\":34752:34756  from */\n      dup4\n        /* \"ERC721A.sol\":34766:34767  0 */\n      0x00\n        /* \"ERC721A.sol\":34770:34777  tokenId */\n      dup9\n        /* \"ERC721A.sol\":34779:34780  1 */\n      0x01\n        /* \"ERC721A.sol\":34730:34751  _beforeTokenTransfers */\n      tag_139\n        /* \"ERC721A.sol\":34730:34781  _beforeTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_223:\n        /* \"ERC721A.sol\":34870:34885  approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":34867:35024  if approvedAddress {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"ERC721A.sol\":35008:35009  0 */\n      0x00\n        /* \"ERC721A.sol\":34987:35006  approvedAddressSlot */\n      dup3\n        /* \"ERC721A.sol\":34980:35010  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"ERC721A.sol\":34867:35024  if approvedAddress {... */\n    tag_224:\n        /* \"ERC721A.sol\":35672:35673  1 */\n      0x01\n        /* \"ERC721A.sol\":1619:1622  128 */\n      0x80\n        /* \"ERC721A.sol\":35642:35643  1 */\n      0x01\n        /* \"ERC721A.sol\":35642:35668  1 << _BITPOS_NUMBER_BURNED */\n      swap1\n      shl\n        /* \"ERC721A.sol\":35641:35673  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      sub\n        /* \"ERC721A.sol\":35613:35631  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":35613:35637  _packedAddressData[from] */\n      0x00\n        /* \"ERC721A.sol\":35632:35636  from */\n      dup6\n        /* \"ERC721A.sol\":35613:35637  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":35613:35673  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":35933:36106  _packOwnershipData(... */\n      tag_225\n        /* \"ERC721A.sol\":35969:35973  from */\n      dup4\n        /* \"ERC721A.sol\":36039:36092  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      tag_226\n        /* \"ERC721A.sol\":36054:36058  from */\n      dup6\n        /* \"ERC721A.sol\":36068:36069  0 */\n      0x00\n        /* \"ERC721A.sol\":36072:36091  prevOwnershipPacked */\n      dup9\n        /* \"ERC721A.sol\":36039:36053  _nextExtraData */\n      tag_143\n        /* \"ERC721A.sol\":36039:36092  _nextExtraData(from, address(0), prevOwnershipPacked) */\n      jump\t// in\n    tag_226:\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":35992:36035  _BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED */\n      or\n        /* \"ERC721A.sol\":35991:36092  (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked) */\n      or\n        /* \"ERC721A.sol\":35933:35951  _packOwnershipData */\n      tag_144\n        /* \"ERC721A.sol\":35933:36106  _packOwnershipData(... */\n      jump\t// in\n    tag_225:\n        /* \"ERC721A.sol\":35904:35921  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":35904:35930  _packedOwnerships[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":35922:35929  tokenId */\n      dup9\n        /* \"ERC721A.sol\":35904:35930  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":35904:36106  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":36274:36275  0 */\n      0x00\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":36223:36242  prevOwnershipPacked */\n      dup6\n        /* \"ERC721A.sol\":36223:36270  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"ERC721A.sol\":36223:36275  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"ERC721A.sol\":36219:36836  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"ERC721A.sol\":36295:36314  uint256 nextTokenId */\n      0x00\n        /* \"ERC721A.sol\":36327:36328  1 */\n      0x01\n        /* \"ERC721A.sol\":36317:36324  tokenId */\n      dup8\n        /* \"ERC721A.sol\":36317:36328  tokenId + 1 */\n      add\n        /* \"ERC721A.sol\":36295:36328  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"ERC721A.sol\":36482:36483  0 */\n      0x00\n        /* \"ERC721A.sol\":36448:36465  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":36448:36478  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":36466:36477  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":36448:36478  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":36448:36483  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"ERC721A.sol\":36444:36822  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"ERC721A.sol\":36584:36597  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":36569:36580  nextTokenId */\n      dup2\n        /* \"ERC721A.sol\":36569:36597  nextTokenId != _currentIndex */\n      eq\n        /* \"ERC721A.sol\":36565:36804  if (nextTokenId != _currentIndex) {... */\n      tag_229\n      jumpi\n        /* \"ERC721A.sol\":36762:36781  prevOwnershipPacked */\n      dup5\n        /* \"ERC721A.sol\":36729:36746  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":36729:36759  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":36747:36758  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":36729:36759  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":36729:36781  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":36565:36804  if (nextTokenId != _currentIndex) {... */\n    tag_229:\n        /* \"ERC721A.sol\":36444:36822  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_228:\n        /* \"ERC721A.sol\":36277:36836  {... */\n      pop\n        /* \"ERC721A.sol\":36219:36836  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_227:\n        /* \"ERC721A.sol\":36888:36895  tokenId */\n      dup6\n        /* \"ERC721A.sol\":36884:36885  0 */\n      0x00\n        /* \"ERC721A.sol\":36861:36896  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":36870:36874  from */\n      dup5\n        /* \"ERC721A.sol\":36861:36896  Transfer(from, address(0), tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721A.sol\":36906:36956  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      tag_230\n        /* \"ERC721A.sol\":36927:36931  from */\n      dup4\n        /* \"ERC721A.sol\":36941:36942  0 */\n      0x00\n        /* \"ERC721A.sol\":36945:36952  tokenId */\n      dup9\n        /* \"ERC721A.sol\":36954:36955  1 */\n      0x01\n        /* \"ERC721A.sol\":36906:36926  _afterTokenTransfers */\n      tag_149\n        /* \"ERC721A.sol\":36906:36956  _afterTokenTransfers(from, address(0), tokenId, 1) */\n      jump\t// in\n    tag_230:\n        /* \"ERC721A.sol\":37079:37091  _burnCounter */\n      0x01\n      0x00\n        /* \"ERC721A.sol\":37079:37093  _burnCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC721A.sol\":34164:37110  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC721A.sol\":34095:37110  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":33423:33533  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_167:\n        /* \"ERC721A.sol\":33499:33526  _safeMint(to, quantity, '') */\n      tag_232\n        /* \"ERC721A.sol\":33509:33511  to */\n      dup3\n        /* \"ERC721A.sol\":33513:33521  quantity */\n      dup3\n        /* \"ERC721A.sol\":33499:33526  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC721A.sol\":33499:33508  _safeMint */\n      tag_233\n        /* \"ERC721A.sol\":33499:33526  _safeMint(to, quantity, '') */\n      jump\t// in\n    tag_232:\n        /* \"ERC721A.sol\":33423:33533  function _safeMint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_176:\n        /* \"ERC721A.sol\":26106:26110  bool */\n      0x00\n        /* \"ERC721A.sol\":26151:26153  to */\n      dup4\n        /* \"ERC721A.sol\":26126:26171  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"ERC721A.sol\":26172:26191  _msgSenderERC721A() */\n      tag_235\n        /* \"ERC721A.sol\":26172:26189  _msgSenderERC721A */\n      tag_116\n        /* \"ERC721A.sol\":26172:26191  _msgSenderERC721A() */\n      jump\t// in\n    tag_235:\n        /* \"ERC721A.sol\":26193:26197  from */\n      dup8\n        /* \"ERC721A.sol\":26199:26206  tokenId */\n      dup7\n        /* \"ERC721A.sol\":26208:26213  _data */\n      dup7\n        /* \"ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_242\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_247\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_246)\n    tag_247:\n      0x60\n      swap2\n      pop\n    tag_246:\n      pop\n        /* \"ERC721A.sol\":26421:26422  0 */\n      0x00\n        /* \"ERC721A.sol\":26404:26410  reason */\n      dup2\n        /* \"ERC721A.sol\":26404:26417  reason.length */\n      mload\n        /* \"ERC721A.sol\":26404:26422  reason.length == 0 */\n      eq\n        /* \"ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n    tag_248:\n        /* \"ERC721A.sol\":26589:26595  reason */\n      dup1\n        /* \"ERC721A.sol\":26583:26596  mload(reason) */\n      mload\n        /* \"ERC721A.sol\":26574:26580  reason */\n      dup2\n        /* \"ERC721A.sol\":26570:26572  32 */\n      0x20\n        /* \"ERC721A.sol\":26566:26581  add(32, reason) */\n      add\n        /* \"ERC721A.sol\":26559:26597  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_242:\n        /* \"ERC721A.sol\":26292:26346  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC721A.sol\":26282:26288  retval */\n      dup2\n        /* \"ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":26275:26346  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10969:11061  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_182:\n        /* \"ERC721A.sol\":11020:11033  string memory */\n      0x60\n        /* \"ERC721A.sol\":11045:11054  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10969:11061  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_186:\n        /* \"ERC721A.sol\":39702:39719  string memory str */\n      0x60\n        /* \"ERC721A.sol\":40130:40134  0xa0 */\n      0xa0\n        /* \"ERC721A.sol\":40123:40127  0x40 */\n      0x40\n        /* \"ERC721A.sol\":40117:40128  mload(0x40) */\n      mload\n        /* \"ERC721A.sol\":40113:40135  add(mload(0x40), 0xa0) */\n      add\n        /* \"ERC721A.sol\":40220:40221  m */\n      dup1\n        /* \"ERC721A.sol\":40214:40218  0x40 */\n      0x40\n        /* \"ERC721A.sol\":40207:40222  mstore(0x40, m) */\n      mstore\n        /* \"ERC721A.sol\":40293:40297  0x20 */\n      0x20\n        /* \"ERC721A.sol\":40290:40291  m */\n      dup2\n        /* \"ERC721A.sol\":40286:40298  sub(m, 0x20) */\n      sub\n        /* \"ERC721A.sol\":40279:40298  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":40373:40374  0 */\n      0x00\n        /* \"ERC721A.sol\":40368:40371  str */\n      dup3\n        /* \"ERC721A.sol\":40361:40375  mstore(str, 0) */\n      mstore\n        /* \"ERC721A.sol\":40474:40477  str */\n      dup2\n        /* \"ERC721A.sol\":40708:40713  value */\n      dup4\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n    tag_253:\n        /* \"ERC721A.sol\":40716:40717  1 */\n      0x01\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"ERC721A.sol\":40755:40756  1 */\n      0x01\n        /* \"ERC721A.sol\":40750:40753  str */\n      dup5\n        /* \"ERC721A.sol\":40746:40757  sub(str, 1) */\n      sub\n        /* \"ERC721A.sol\":40739:40757  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"ERC721A.sol\":40923:40925  10 */\n      0x0a\n        /* \"ERC721A.sol\":40917:40921  temp */\n      dup2\n        /* \"ERC721A.sol\":40913:40926  mod(temp, 10) */\n      mod\n        /* \"ERC721A.sol\":40909:40911  48 */\n      0x30\n        /* \"ERC721A.sol\":40905:40927  add(48, mod(temp, 10)) */\n      add\n        /* \"ERC721A.sol\":40900:40903  str */\n      dup5\n        /* \"ERC721A.sol\":40892:40928  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"ERC721A.sol\":41015:41017  10 */\n      0x0a\n        /* \"ERC721A.sol\":41009:41013  temp */\n      dup2\n        /* \"ERC721A.sol\":41005:41018  div(temp, 10) */\n      div\n        /* \"ERC721A.sol\":40997:41018  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":41080:41084  temp */\n      dup1\n        /* \"ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      tag_256\n      jumpi\n        /* \"ERC721A.sol\":41088:41093  break */\n      jump(tag_255)\n        /* \"ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n    tag_256:\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      jump(tag_253)\n    tag_255:\n        /* \"ERC721A.sol\":40694:40715  { let temp := value } */\n      pop\n        /* \"ERC721A.sol\":41146:41149  str */\n      dup3\n        /* \"ERC721A.sol\":41141:41144  end */\n      dup2\n        /* \"ERC721A.sol\":41137:41150  sub(end, str) */\n      sub\n        /* \"ERC721A.sol\":41259:41263  0x20 */\n      0x20\n        /* \"ERC721A.sol\":41254:41257  str */\n      dup5\n        /* \"ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      sub\n        /* \"ERC721A.sol\":41243:41264  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"ERC721A.sol\":41322:41328  length */\n      dup1\n        /* \"ERC721A.sol\":41317:41320  str */\n      dup5\n        /* \"ERC721A.sol\":41310:41329  mstore(str, length) */\n      mstore\n        /* \"ERC721A.sol\":39740:41339  {... */\n      pop\n      pop\n      pop\n        /* \"ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":38475:38618  function _extraData(... */\n    tag_210:\n        /* \"ERC721A.sol\":38608:38614  uint24 */\n      0x00\n        /* \"ERC721A.sol\":38475:38618  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":32675:33344  function _safeMint(... */\n    tag_233:\n        /* \"ERC721A.sol\":32801:32820  _mint(to, quantity) */\n      tag_259\n        /* \"ERC721A.sol\":32807:32809  to */\n      dup4\n        /* \"ERC721A.sol\":32811:32819  quantity */\n      dup4\n        /* \"ERC721A.sol\":32801:32806  _mint */\n      tag_260\n        /* \"ERC721A.sol\":32801:32820  _mint(to, quantity) */\n      jump\t// in\n    tag_259:\n        /* \"ERC721A.sol\":32877:32878  0 */\n      0x00\n        /* \"ERC721A.sol\":32859:32861  to */\n      dup4\n        /* \"ERC721A.sol\":32859:32873  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC721A.sol\":32859:32878  to.code.length != 0 */\n      eq\n        /* \"ERC721A.sol\":32855:33328  if (to.code.length != 0) {... */\n      tag_261\n      jumpi\n        /* \"ERC721A.sol\":32898:32909  uint256 end */\n      0x00\n        /* \"ERC721A.sol\":32912:32925  _currentIndex */\n      dup1\n      sload\n        /* \"ERC721A.sol\":32898:32925  uint256 end = _currentIndex */\n      swap1\n      pop\n        /* \"ERC721A.sol\":32943:32956  uint256 index */\n      0x00\n        /* \"ERC721A.sol\":32965:32973  quantity */\n      dup4\n        /* \"ERC721A.sol\":32959:32962  end */\n      dup3\n        /* \"ERC721A.sol\":32959:32973  end - quantity */\n      sub\n        /* \"ERC721A.sol\":32943:32973  uint256 index = end - quantity */\n      swap1\n      pop\n        /* \"ERC721A.sol\":32991:33220  do {... */\n    tag_262:\n        /* \"ERC721A.sol\":33021:33083  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_265\n        /* \"ERC721A.sol\":33060:33061  0 */\n      0x00\n        /* \"ERC721A.sol\":33064:33066  to */\n      dup7\n        /* \"ERC721A.sol\":33068:33075  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"ERC721A.sol\":33077:33082  _data */\n      dup7\n        /* \"ERC721A.sol\":33021:33051  _checkContractOnERC721Received */\n      tag_176\n        /* \"ERC721A.sol\":33021:33083  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_265:\n        /* \"ERC721A.sol\":33016:33181  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_266\n      jumpi\n        /* \"ERC721A.sol\":33118:33158  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":33016:33181  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n    tag_266:\n        /* \"ERC721A.sol\":33215:33218  end */\n      dup2\n        /* \"ERC721A.sol\":33207:33212  index */\n      dup2\n        /* \"ERC721A.sol\":33207:33218  index < end */\n      lt\n        /* \"ERC721A.sol\":32991:33220  do {... */\n      tag_262\n      jumpi\n        /* \"ERC721A.sol\":33300:33303  end */\n      dup2\n        /* \"ERC721A.sol\":33283:33296  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":33283:33303  _currentIndex != end */\n      eq\n        /* \"ERC721A.sol\":33279:33313  if (_currentIndex != end) revert() */\n      tag_267\n      jumpi\n        /* \"ERC721A.sol\":33305:33313  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ERC721A.sol\":33279:33313  if (_currentIndex != end) revert() */\n    tag_267:\n        /* \"ERC721A.sol\":32880:33328  {... */\n      pop\n      pop\n        /* \"ERC721A.sol\":32855:33328  if (to.code.length != 0) {... */\n    tag_261:\n        /* \"ERC721A.sol\":32675:33344  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":27091:29993  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_260:\n        /* \"ERC721A.sol\":27163:27183  uint256 startTokenId */\n      0x00\n        /* \"ERC721A.sol\":27186:27199  _currentIndex */\n      dup1\n      sload\n        /* \"ERC721A.sol\":27163:27199  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"ERC721A.sol\":27225:27226  0 */\n      0x00\n        /* \"ERC721A.sol\":27213:27221  quantity */\n      dup3\n        /* \"ERC721A.sol\":27213:27226  quantity == 0 */\n      eq\n        /* \"ERC721A.sol\":27209:27253  if (quantity == 0) revert MintZeroQuantity() */\n      iszero\n      tag_269\n      jumpi\n        /* \"ERC721A.sol\":27235:27253  MintZeroQuantity() */\n      mload(0x40)\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":27209:27253  if (quantity == 0) revert MintZeroQuantity() */\n    tag_269:\n        /* \"ERC721A.sol\":27264:27325  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_270\n        /* \"ERC721A.sol\":27294:27295  0 */\n      0x00\n        /* \"ERC721A.sol\":27298:27300  to */\n      dup5\n        /* \"ERC721A.sol\":27302:27314  startTokenId */\n      dup4\n        /* \"ERC721A.sol\":27316:27324  quantity */\n      dup6\n        /* \"ERC721A.sol\":27264:27285  _beforeTokenTransfers */\n      tag_139\n        /* \"ERC721A.sol\":27264:27325  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_270:\n        /* \"ERC721A.sol\":27797:27798  1 */\n      0x01\n        /* \"ERC721A.sol\":1495:1497  64 */\n      0x40\n        /* \"ERC721A.sol\":27767:27768  1 */\n      0x01\n        /* \"ERC721A.sol\":27767:27793  1 << _BITPOS_NUMBER_MINTED */\n      swap1\n      shl\n        /* \"ERC721A.sol\":27766:27798  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      or\n        /* \"ERC721A.sol\":27754:27762  quantity */\n      dup3\n        /* \"ERC721A.sol\":27754:27799  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      mul\n        /* \"ERC721A.sol\":27728:27746  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      0x00\n        /* \"ERC721A.sol\":27747:27749  to */\n      dup6\n        /* \"ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":27728:27799  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":28069:28205  _packOwnershipData(... */\n      tag_271\n        /* \"ERC721A.sol\":28105:28107  to */\n      dup4\n        /* \"ERC721A.sol\":28158:28191  _nextExtraData(address(0), to, 0) */\n      tag_272\n        /* \"ERC721A.sol\":28181:28182  0 */\n      0x00\n        /* \"ERC721A.sol\":28185:28187  to */\n      dup7\n        /* \"ERC721A.sol\":28189:28190  0 */\n      0x00\n        /* \"ERC721A.sol\":28158:28172  _nextExtraData */\n      tag_143\n        /* \"ERC721A.sol\":28158:28191  _nextExtraData(address(0), to, 0) */\n      jump\t// in\n    tag_272:\n        /* \"ERC721A.sol\":28125:28155  _nextInitializedFlag(quantity) */\n      tag_273\n        /* \"ERC721A.sol\":28146:28154  quantity */\n      dup6\n        /* \"ERC721A.sol\":28125:28145  _nextInitializedFlag */\n      tag_274\n        /* \"ERC721A.sol\":28125:28155  _nextInitializedFlag(quantity) */\n      jump\t// in\n    tag_273:\n        /* \"ERC721A.sol\":28125:28191  _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0) */\n      or\n        /* \"ERC721A.sol\":28069:28087  _packOwnershipData */\n      tag_144\n        /* \"ERC721A.sol\":28069:28205  _packOwnershipData(... */\n      jump\t// in\n    tag_271:\n        /* \"ERC721A.sol\":28035:28052  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":28035:28066  _packedOwnerships[startTokenId] */\n      0x00\n        /* \"ERC721A.sol\":28053:28065  startTokenId */\n      dup4\n        /* \"ERC721A.sol\":28035:28066  _packedOwnerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":28035:28205  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":28220:28236  uint256 toMasked */\n      0x00\n        /* \"ERC721A.sol\":28250:28261  uint256 end */\n      dup1\n        /* \"ERC721A.sol\":28279:28287  quantity */\n      dup4\n        /* \"ERC721A.sol\":28264:28276  startTokenId */\n      dup4\n        /* \"ERC721A.sol\":28264:28287  startTokenId + quantity */\n      add\n        /* \"ERC721A.sol\":28250:28287  uint256 end = startTokenId + quantity */\n      swap1\n      pop\n        /* \"ERC721A.sol\":28792:28808  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":28788:28790  to */\n      dup6\n        /* \"ERC721A.sol\":28784:28809  and(to, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":28772:28809  toMasked := and(to, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":29156:29168  startTokenId */\n      dup3\n        /* \"ERC721A.sol\":29117:29125  toMasked */\n      dup3\n        /* \"ERC721A.sol\":29077:29078  0 */\n      0x00\n        /* \"ERC721A.sol\":29016:29041  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC721A.sol\":28958:28959  0 */\n      0x00\n        /* \"ERC721A.sol\":28898:28899  0 */\n      dup1\n        /* \"ERC721A.sol\":28872:29200  log4(... */\n      log4\n        /* \"ERC721A.sol\":29520:29521  1 */\n      0x01\n        /* \"ERC721A.sol\":29506:29518  startTokenId */\n      dup4\n        /* \"ERC721A.sol\":29502:29522  add(startTokenId, 1) */\n      add\n        /* \"ERC721A.sol\":29461:29800  for {... */\n    tag_275:\n        /* \"ERC721A.sol\":29560:29563  end */\n      dup2\n        /* \"ERC721A.sol\":29551:29558  tokenId */\n      dup2\n        /* \"ERC721A.sol\":29548:29564  eq(tokenId, end) */\n      eq\n        /* \"ERC721A.sol\":29461:29800  for {... */\n      tag_277\n      jumpi\n        /* \"ERC721A.sol\":29774:29781  tokenId */\n      dup1\n        /* \"ERC721A.sol\":29764:29772  toMasked */\n      dup4\n        /* \"ERC721A.sol\":29761:29762  0 */\n      0x00\n        /* \"ERC721A.sol\":29734:29759  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC721A.sol\":29731:29732  0 */\n      0x00\n        /* \"ERC721A.sol\":29728:29729  0 */\n      dup1\n        /* \"ERC721A.sol\":29723:29782  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"ERC721A.sol\":29612:29613  1 */\n      0x01\n        /* \"ERC721A.sol\":29603:29610  tokenId */\n      dup2\n        /* \"ERC721A.sol\":29599:29614  add(tokenId, 1) */\n      add\n        /* \"ERC721A.sol\":29588:29614  tokenId := add(tokenId, 1) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":29461:29800  for {... */\n      jump(tag_275)\n    tag_277:\n        /* \"ERC721A.sol\":29465:29540  {... */\n      pop\n        /* \"ERC721A.sol\":29843:29844  0 */\n      0x00\n        /* \"ERC721A.sol\":29831:29839  toMasked */\n      dup3\n        /* \"ERC721A.sol\":29831:29844  toMasked == 0 */\n      eq\n        /* \"ERC721A.sol\":29827:29872  if (toMasked == 0) revert MintToZeroAddress() */\n      iszero\n      tag_278\n      jumpi\n        /* \"ERC721A.sol\":29853:29872  MintToZeroAddress() */\n      mload(0x40)\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":29827:29872  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_278:\n        /* \"ERC721A.sol\":29903:29906  end */\n      dup1\n        /* \"ERC721A.sol\":29887:29900  _currentIndex */\n      0x00\n        /* \"ERC721A.sol\":29887:29906  _currentIndex = end */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":27508:29917  unchecked {... */\n      pop\n      pop\n        /* \"ERC721A.sol\":29926:29986  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_279\n        /* \"ERC721A.sol\":29955:29956  0 */\n      0x00\n        /* \"ERC721A.sol\":29959:29961  to */\n      dup5\n        /* \"ERC721A.sol\":29963:29975  startTokenId */\n      dup4\n        /* \"ERC721A.sol\":29977:29985  quantity */\n      dup6\n        /* \"ERC721A.sol\":29926:29946  _afterTokenTransfers */\n      tag_149\n        /* \"ERC721A.sol\":29926:29986  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_279:\n        /* \"ERC721A.sol\":27153:29993  {... */\n      pop\n        /* \"ERC721A.sol\":27091:29993  function _mint(address to, uint256 quantity) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":14837:15155  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n    tag_274:\n        /* \"ERC721A.sol\":14907:14921  uint256 result */\n      0x00\n        /* \"ERC721A.sol\":15136:15137  1 */\n      0x01\n        /* \"ERC721A.sol\":15126:15134  quantity */\n      dup3\n        /* \"ERC721A.sol\":15123:15138  eq(quantity, 1) */\n      eq\n        /* \"ERC721A.sol\":15097:15121  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"ERC721A.sol\":15093:15139  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"ERC721A.sol\":15083:15139  result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":14837:15155  function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_282:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_284\n        /* \"#utility.yul\":125:173   */\n      tag_285\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":109:174   */\n      tag_287\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_289\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":249:361   */\n    tag_288:\n        /* \"#utility.yul\":370:411   */\n      tag_291\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_293:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_295\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_297:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_299\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_301:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_303\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_305:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_307\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_304\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_308:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_311\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1081:1203   */\n    tag_310:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_313\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_282\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_314:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_316\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_68:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1575:1694   */\n    tag_319:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_322\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_293\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_96:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_325\n      tag_321\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1927:2046   */\n    tag_324:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_326\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_293\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_327\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_293\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_51:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_330\n      tag_321\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2424:2543   */\n    tag_329:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_331\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_293\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_332\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_293\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_333\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_314\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_86:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_336\n      tag_321\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3075:3195   */\n    tag_335:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_337\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_293\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_338\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_293\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_339\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_314\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_341\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3662:3779   */\n    tag_340:\n        /* \"#utility.yul\":3803:3865   */\n      tag_343\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_308\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_82:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_346\n      tag_321\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3978:4097   */\n    tag_345:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_347\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_293\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_348\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_297\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_42:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_351\n      tag_321\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4455:4574   */\n    tag_350:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_352\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_293\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_353\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_314\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_24:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_356\n      tag_321\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4917:5036   */\n    tag_355:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_357\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_301\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_241:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_360\n      tag_321\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5261:5380   */\n    tag_359:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_361\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_305\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_36:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_364\n      tag_321\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5606:5725   */\n    tag_363:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_365\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_314\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_366:\n        /* \"#utility.yul\":5952:5976   */\n      tag_368\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_370:\n        /* \"#utility.yul\":6070:6091   */\n      tag_372\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_374:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_376\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6272:6342   */\n      tag_378\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_380\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6428:6457   */\n      tag_382\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_384:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_386\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6641:6712   */\n      tag_388\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_389\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_390\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_381\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6798:6827   */\n      tag_391\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_383\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_392:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_394\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_387\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7029:7118   */\n      tag_395\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_397\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_381\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_398:\n        /* \"#utility.yul\":7310:7334   */\n      tag_400\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_188:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_403\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_392\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_404\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_392\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_39:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_406\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_366\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_237:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_408\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_366\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8344:8416   */\n      tag_409\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_366\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8426:8498   */\n      tag_410\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_398\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_411\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_374\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_27:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_413\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_370\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_32:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_415\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_384\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_48:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_417\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_398\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_287:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_419\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_421\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_422\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_420:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_286:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_426\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9778:9834   */\n    tag_425:\n        /* \"#utility.yul\":9852:9881   */\n      tag_428\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_383\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_377:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_387:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_379:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_389:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_396:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10762   */\n    tag_369:\n        /* \"#utility.yul\":10703:10710   */\n      0x00\n        /* \"#utility.yul\":10732:10756   */\n      tag_435\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10732:10756   */\n      tag_436\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10721:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10768:10858   */\n    tag_373:\n        /* \"#utility.yul\":10802:10809   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10838:10851   */\n      iszero\n        /* \"#utility.yul\":10831:10852   */\n      iszero\n        /* \"#utility.yul\":10820:10852   */\n      swap1\n      pop\n        /* \"#utility.yul\":10768:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11013   */\n    tag_438:\n        /* \"#utility.yul\":10900:10907   */\n      0x00\n        /* \"#utility.yul\":10940:11006   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10929:11007   */\n      and\n        /* \"#utility.yul\":10918:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11019:11145   */\n    tag_436:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11138   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11139   */\n      and\n        /* \"#utility.yul\":11074:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11019:11145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11151:11228   */\n    tag_401:\n        /* \"#utility.yul\":11188:11195   */\n      0x00\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11206:11222   */\n      swap1\n      pop\n        /* \"#utility.yul\":11151:11228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11234:11388   */\n    tag_292:\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11313:11316   */\n      dup2\n        /* \"#utility.yul\":11308:11311   */\n      dup4\n        /* \"#utility.yul\":11295:11325   */\n      calldatacopy\n        /* \"#utility.yul\":11380:11381   */\n      0x00\n        /* \"#utility.yul\":11371:11377   */\n      dup4\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11362:11378   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      mstore\n        /* \"#utility.yul\":11234:11388   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11701   */\n    tag_381:\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11472:11585   */\n    tag_444:\n        /* \"#utility.yul\":11486:11492   */\n      dup4\n        /* \"#utility.yul\":11483:11484   */\n      dup2\n        /* \"#utility.yul\":11480:11493   */\n      lt\n        /* \"#utility.yul\":11472:11585   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":11571:11572   */\n      dup1\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11573   */\n      add\n        /* \"#utility.yul\":11556:11574   */\n      mload\n        /* \"#utility.yul\":11552:11553   */\n      dup2\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11554   */\n      add\n        /* \"#utility.yul\":11536:11575   */\n      mstore\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11505:11506   */\n      dup2\n        /* \"#utility.yul\":11501:11511   */\n      add\n        /* \"#utility.yul\":11496:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11585   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11600:11601   */\n      dup2\n        /* \"#utility.yul\":11597:11610   */\n      gt\n        /* \"#utility.yul\":11594:11695   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11674:11680   */\n      dup5\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11681   */\n      add\n        /* \"#utility.yul\":11658:11685   */\n      mstore\n        /* \"#utility.yul\":11594:11695   */\n    tag_447:\n        /* \"#utility.yul\":11443:11701   */\n      pop\n        /* \"#utility.yul\":11394:11701   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:12027   */\n    tag_104:\n        /* \"#utility.yul\":11751:11757   */\n      0x00\n        /* \"#utility.yul\":11788:11789   */\n      0x02\n        /* \"#utility.yul\":11782:11786   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      div\n        /* \"#utility.yul\":11768:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11836   */\n      0x01\n        /* \"#utility.yul\":11829:11833   */\n      dup3\n        /* \"#utility.yul\":11825:11837   */\n      and\n        /* \"#utility.yul\":11856:11874   */\n      dup1\n        /* \"#utility.yul\":11846:11927   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11912:11916   */\n      0x7f\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      and\n        /* \"#utility.yul\":11890:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11846:11927   */\n    tag_449:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      lt\n        /* \"#utility.yul\":11943:11961   */\n      dup2\n        /* \"#utility.yul\":11940:11978   */\n      eq\n        /* \"#utility.yul\":11937:12021   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_451\n      tag_452\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11937:12021   */\n    tag_450:\n        /* \"#utility.yul\":11758:12027   */\n      pop\n        /* \"#utility.yul\":11707:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12314   */\n    tag_422:\n        /* \"#utility.yul\":12116:12143   */\n      tag_454\n        /* \"#utility.yul\":12138:12142   */\n      dup3\n        /* \"#utility.yul\":12116:12143   */\n      tag_383\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12108:12114   */\n      dup2\n        /* \"#utility.yul\":12104:12144   */\n      add\n        /* \"#utility.yul\":12246:12252   */\n      dup2\n        /* \"#utility.yul\":12234:12244   */\n      dup2\n        /* \"#utility.yul\":12231:12253   */\n      lt\n        /* \"#utility.yul\":12210:12228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12208   */\n      dup3\n        /* \"#utility.yul\":12195:12229   */\n      gt\n        /* \"#utility.yul\":12192:12254   */\n      or\n        /* \"#utility.yul\":12189:12277   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":12257:12275   */\n      tag_456\n      tag_427\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12189:12277   */\n    tag_455:\n        /* \"#utility.yul\":12297:12307   */\n      dup1\n        /* \"#utility.yul\":12293:12295   */\n      0x40\n        /* \"#utility.yul\":12286:12308   */\n      mstore\n        /* \"#utility.yul\":12076:12314   */\n      pop\n        /* \"#utility.yul\":12033:12314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12500   */\n    tag_452:\n        /* \"#utility.yul\":12368:12445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12446   */\n      mstore\n        /* \"#utility.yul\":12465:12469   */\n      0x22\n        /* \"#utility.yul\":12462:12463   */\n      0x04\n        /* \"#utility.yul\":12455:12470   */\n      mstore\n        /* \"#utility.yul\":12489:12493   */\n      0x24\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12494   */\n      revert\n        /* \"#utility.yul\":12506:12686   */\n    tag_427:\n        /* \"#utility.yul\":12554:12631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12544:12632   */\n      mstore\n        /* \"#utility.yul\":12651:12655   */\n      0x41\n        /* \"#utility.yul\":12648:12649   */\n      0x04\n        /* \"#utility.yul\":12641:12656   */\n      mstore\n        /* \"#utility.yul\":12675:12679   */\n      0x24\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12665:12680   */\n      revert\n        /* \"#utility.yul\":12692:12809   */\n    tag_312:\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12798:12799   */\n      dup1\n        /* \"#utility.yul\":12791:12803   */\n      revert\n        /* \"#utility.yul\":12815:12932   */\n    tag_290:\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12921:12922   */\n      dup1\n        /* \"#utility.yul\":12914:12926   */\n      revert\n        /* \"#utility.yul\":12938:13055   */\n    tag_342:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13178   */\n    tag_321:\n        /* \"#utility.yul\":13170:13171   */\n      0x00\n        /* \"#utility.yul\":13167:13168   */\n      dup1\n        /* \"#utility.yul\":13160:13172   */\n      revert\n        /* \"#utility.yul\":13184:13286   */\n    tag_383:\n        /* \"#utility.yul\":13225:13231   */\n      0x00\n        /* \"#utility.yul\":13276:13278   */\n      0x1f\n        /* \"#utility.yul\":13272:13279   */\n      not\n        /* \"#utility.yul\":13267:13269   */\n      0x1f\n        /* \"#utility.yul\":13260:13265   */\n      dup4\n        /* \"#utility.yul\":13256:13270   */\n      add\n        /* \"#utility.yul\":13252:13280   */\n      and\n        /* \"#utility.yul\":13242:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13414   */\n    tag_296:\n        /* \"#utility.yul\":13365:13389   */\n      tag_465\n        /* \"#utility.yul\":13383:13388   */\n      dup2\n        /* \"#utility.yul\":13365:13389   */\n      tag_369\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13390   */\n      eq\n        /* \"#utility.yul\":13345:13408   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13401:13402   */\n      dup1\n        /* \"#utility.yul\":13394:13406   */\n      revert\n        /* \"#utility.yul\":13345:13408   */\n    tag_466:\n        /* \"#utility.yul\":13292:13414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13420:13536   */\n    tag_300:\n        /* \"#utility.yul\":13490:13511   */\n      tag_468\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13490:13511   */\n      tag_373\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13483:13488   */\n      dup2\n        /* \"#utility.yul\":13480:13512   */\n      eq\n        /* \"#utility.yul\":13470:13530   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13523:13524   */\n      dup1\n        /* \"#utility.yul\":13516:13528   */\n      revert\n        /* \"#utility.yul\":13470:13530   */\n    tag_469:\n        /* \"#utility.yul\":13420:13536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13662   */\n    tag_304:\n        /* \"#utility.yul\":13614:13637   */\n      tag_471\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13614:13637   */\n      tag_438\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13607:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13638   */\n      eq\n        /* \"#utility.yul\":13594:13656   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13649:13650   */\n      dup1\n        /* \"#utility.yul\":13642:13654   */\n      revert\n        /* \"#utility.yul\":13594:13656   */\n    tag_472:\n        /* \"#utility.yul\":13542:13662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13668:13790   */\n    tag_317:\n        /* \"#utility.yul\":13741:13765   */\n      tag_474\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13741:13765   */\n      tag_401\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13734:13739   */\n      dup2\n        /* \"#utility.yul\":13731:13766   */\n      eq\n        /* \"#utility.yul\":13721:13784   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13770:13782   */\n      revert\n        /* \"#utility.yul\":13721:13784   */\n    tag_475:\n        /* \"#utility.yul\":13668:13790   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015dba09d0774ca248769b7e8b6ccb3079434ed70d5065d64fb324e3e5c5ea53964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_177": {
									"entryPoint": 139,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:7"
															},
															"nodeType": "YulIf",
															"src": "262:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:7",
														"type": ""
													}
												],
												"src": "7:421:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:7"
															},
															"nodeType": "YulIf",
															"src": "531:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:7",
														"type": ""
													}
												],
												"src": "448:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:7"
															},
															"nodeType": "YulIf",
															"src": "933:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:7",
														"type": ""
													}
												],
												"src": "809:853:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:7",
														"type": ""
													}
												],
												"src": "1668:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:7",
														"type": ""
													}
												],
												"src": "1803:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:7"
															},
															"nodeType": "YulIf",
															"src": "2022:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:7",
														"type": ""
													}
												],
												"src": "1884:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:7",
																"statements": []
															},
															"src": "2276:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:7"
															},
															"nodeType": "YulIf",
															"src": "2398:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:7",
														"type": ""
													}
												],
												"src": "2198:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:7"
															},
															"nodeType": "YulIf",
															"src": "2650:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:7"
															},
															"nodeType": "YulIf",
															"src": "2741:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:7",
														"type": ""
													}
												],
												"src": "2511:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:7"
															},
															"nodeType": "YulIf",
															"src": "2993:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:7",
														"type": ""
													}
												],
												"src": "2837:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													}
												],
												"src": "3988:102:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002307380380620023078339818101604052810190620000379190620001be565b818181600290805190602001906200005192919062000090565b5080600390805190602001906200006a92919062000090565b506200007b6200008b60201b60201c565b60008190555050505050620003c7565b600090565b8280546200009e90620002d8565b90600052602060002090601f016020900481019282620000c257600085556200010e565b82601f10620000dd57805160ff19168380011785556200010e565b828001600101855582156200010e579182015b828111156200010d578251825591602001919060010190620000f0565b5b5090506200011d919062000121565b5090565b5b808211156200013c57600081600090555060010162000122565b5090565b60006200015762000151846200026c565b62000243565b905082815260208101848484011115620001765762000175620003a7565b5b62000183848285620002a2565b509392505050565b600082601f830112620001a357620001a2620003a2565b5b8151620001b584826020860162000140565b91505092915050565b60008060408385031215620001d857620001d7620003b1565b5b600083015167ffffffffffffffff811115620001f957620001f8620003ac565b5b62000207858286016200018b565b925050602083015167ffffffffffffffff8111156200022b576200022a620003ac565b5b62000239858286016200018b565b9150509250929050565b60006200024f62000262565b90506200025d82826200030e565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028a576200028962000373565b5b6200029582620003b6565b9050602081019050919050565b60005b83811015620002c2578082015181840152602081019050620002a5565b83811115620002d2576000848401525b50505050565b60006002820490506001821680620002f157607f821691505b6020821081141562000308576200030762000344565b5b50919050565b6200031982620003b6565b810181811067ffffffffffffffff821117156200033b576200033a62000373565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611f3080620003d76000396000f3fe6080604052600436106100f35760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb46514610313578063b88d4fde1461033c578063c87b56dd14610358578063e985e9c514610395576100f3565b80636352211e1461024557806370a082311461028257806395d89b41146102bf578063a1448194146102ea576100f3565b806318160ddd116100c657806318160ddd146101b957806323b872dd146101e457806342842e0e1461020057806342966c681461021c576100f3565b806301ffc9a7146100f857806306fdde0314610135578063081812fc14610160578063095ea7b31461019d575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611a2f565b6103d2565b60405161012c9190611c11565b60405180910390f35b34801561014157600080fd5b5061014a610464565b6040516101579190611c2c565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190611a89565b6104f6565b6040516101949190611baa565b60405180910390f35b6101b760048036038101906101b291906119ef565b610575565b005b3480156101c557600080fd5b506101ce6106b9565b6040516101db9190611c4e565b60405180910390f35b6101fe60048036038101906101f991906118d9565b6106d0565b005b61021a600480360381019061021591906118d9565b6109f5565b005b34801561022857600080fd5b50610243600480360381019061023e9190611a89565b610a15565b005b34801561025157600080fd5b5061026c60048036038101906102679190611a89565b610a23565b6040516102799190611baa565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a4919061186c565b610a35565b6040516102b69190611c4e565b60405180910390f35b3480156102cb57600080fd5b506102d4610aee565b6040516102e19190611c2c565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c91906119ef565b610b80565b005b34801561031f57600080fd5b5061033a600480360381019061033591906119af565b610b8e565b005b6103566004803603810190610351919061192c565b610c99565b005b34801561036457600080fd5b5061037f600480360381019061037a9190611a89565b610d0c565b60405161038c9190611c2c565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611899565b610dab565b6040516103c99190611c11565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042d57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045d5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461047390611db8565b80601f016020809104026020016040519081016040528092919081815260200182805461049f90611db8565b80156104ec5780601f106104c1576101008083540402835291602001916104ec565b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b5050505050905090565b600061050182610e3f565b610537576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058082610a23565b90508073ffffffffffffffffffffffffffffffffffffffff166105a1610e9e565b73ffffffffffffffffffffffffffffffffffffffff1614610604576105cd816105c8610e9e565b610dab565b610603576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106c3610ea6565b6001546000540303905090565b60006106db82610eab565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610742576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061074e84610f79565b91509150610764818761075f610e9e565b610fa0565b6107b05761077986610774610e9e565b610dab565b6107af576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610817576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108248686866001610fe4565b801561082f57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108fd856108d9888887611085565b7c0200000000000000000000000000000000000000000000000000000000176110ad565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610985576000600185019050600060046000838152602001908152602001600020541415610983576000548114610982578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109ed86868660016110d8565b505050505050565b610a1083838360405180602001604052806000815250610c99565b505050565b610a208160016110de565b50565b6000610a2e82610eab565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9d576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610afd90611db8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2990611db8565b8015610b765780601f10610b4b57610100808354040283529160200191610b76565b820191906000526020600020905b815481529060010190602001808311610b5957829003601f168201915b5050505050905090565b610b8a8282611332565b5050565b8060076000610b9b610e9e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c48610e9e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c8d9190611c11565b60405180910390a35050565b610ca48484846106d0565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d0657610ccf84848484611350565b610d05576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d1782610e3f565b610d4d576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d576114b0565b9050600081511415610d785760405180602001604052806000815250610da3565b80610d82846114c7565b604051602001610d93929190611b86565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e4a610ea6565b11158015610e59575060005482105b8015610e97575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610eba610ea6565b11610f4257600054811015610f415760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f3f575b6000811415610f35576004600083600190039350838152602001908152602001600020549050610f0a565b8092505050610f74565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461107f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461107e576040517f0701eeb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60008060e883901c905060e861109c868684611520565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60006110e983610eab565b905060008190506000806110fc86610f79565b915091508415611165576111188184611113610e9e565b610fa0565b6111645761112d83611128610e9e565b610dab565b611163576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611173836000886001610fe4565b801561117e57600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611226836111e385600088611085565b7c02000000000000000000000000000000000000000000000000000000007c010000000000000000000000000000000000000000000000000000000017176110ad565b600460008881526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000851614156112ae5760006001870190506000600460008381526020019081526020016000205414156112ac5760005481146112ab578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46113188360008860016110d8565b600160008154809291906001019190505550505050505050565b61134c828260405180602001604052806000815250611529565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611376610e9e565b8786866040518563ffffffff1660e01b81526004016113989493929190611bc5565b602060405180830381600087803b1580156113b257600080fd5b505af19250505080156113e357506040513d601f19601f820116820180604052508101906113e09190611a5c565b60015b61145d573d8060008114611413576040519150601f19603f3d011682016040523d82523d6000602084013e611418565b606091505b50600081511415611455576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561150b57600184039350600a81066030018453600a81049050806115065761150b565b6114e0565b50828103602084039350808452505050919050565b60009392505050565b61153383836115c6565b60008373ffffffffffffffffffffffffffffffffffffffff163b146115c157600080549050600083820390505b6115736000868380600101945086611350565b6115a9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106115605781600054146115be57600080fd5b50505b505050565b6000805490506000821415611607576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116146000848385610fe4565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061168b8361167c6000866000611085565b61168585611783565b176110ad565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461172c57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001810190506116f1565b506000821415611768576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600081905550505061177e60008483856110d8565b505050565b60006001821460e11b9050919050565b60006117a66117a184611c8e565b611c69565b9050828152602081018484840111156117c2576117c1611e7e565b5b6117cd848285611d76565b509392505050565b6000813590506117e481611e9e565b92915050565b6000813590506117f981611eb5565b92915050565b60008135905061180e81611ecc565b92915050565b60008151905061182381611ecc565b92915050565b600082601f83011261183e5761183d611e79565b5b813561184e848260208601611793565b91505092915050565b60008135905061186681611ee3565b92915050565b60006020828403121561188257611881611e88565b5b6000611890848285016117d5565b91505092915050565b600080604083850312156118b0576118af611e88565b5b60006118be858286016117d5565b92505060206118cf858286016117d5565b9150509250929050565b6000806000606084860312156118f2576118f1611e88565b5b6000611900868287016117d5565b9350506020611911868287016117d5565b925050604061192286828701611857565b9150509250925092565b6000806000806080858703121561194657611945611e88565b5b6000611954878288016117d5565b9450506020611965878288016117d5565b935050604061197687828801611857565b925050606085013567ffffffffffffffff81111561199757611996611e83565b5b6119a387828801611829565b91505092959194509250565b600080604083850312156119c6576119c5611e88565b5b60006119d4858286016117d5565b92505060206119e5858286016117ea565b9150509250929050565b60008060408385031215611a0657611a05611e88565b5b6000611a14858286016117d5565b9250506020611a2585828601611857565b9150509250929050565b600060208284031215611a4557611a44611e88565b5b6000611a53848285016117ff565b91505092915050565b600060208284031215611a7257611a71611e88565b5b6000611a8084828501611814565b91505092915050565b600060208284031215611a9f57611a9e611e88565b5b6000611aad84828501611857565b91505092915050565b611abf81611d02565b82525050565b611ace81611d14565b82525050565b6000611adf82611cbf565b611ae98185611cd5565b9350611af9818560208601611d85565b611b0281611e8d565b840191505092915050565b6000611b1882611cca565b611b228185611ce6565b9350611b32818560208601611d85565b611b3b81611e8d565b840191505092915050565b6000611b5182611cca565b611b5b8185611cf7565b9350611b6b818560208601611d85565b80840191505092915050565b611b8081611d6c565b82525050565b6000611b928285611b46565b9150611b9e8284611b46565b91508190509392505050565b6000602082019050611bbf6000830184611ab6565b92915050565b6000608082019050611bda6000830187611ab6565b611be76020830186611ab6565b611bf46040830185611b77565b8181036060830152611c068184611ad4565b905095945050505050565b6000602082019050611c266000830184611ac5565b92915050565b60006020820190508181036000830152611c468184611b0d565b905092915050565b6000602082019050611c636000830184611b77565b92915050565b6000611c73611c84565b9050611c7f8282611dea565b919050565b6000604051905090565b600067ffffffffffffffff821115611ca957611ca8611e4a565b5b611cb282611e8d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d0d82611d4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611da3578082015181840152602081019050611d88565b83811115611db2576000848401525b50505050565b60006002820490506001821680611dd057607f821691505b60208210811415611de457611de3611e1b565b5b50919050565b611df382611e8d565b810181811067ffffffffffffffff82111715611e1257611e11611e4a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611ea781611d02565b8114611eb257600080fd5b50565b611ebe81611d14565b8114611ec957600080fd5b50565b611ed581611d20565b8114611ee057600080fd5b50565b611eec81611d6c565b8114611ef757600080fd5b5056fea264697066735822122015dba09d0774ca248769b7e8b6ccb3079434ed70d5065d64fb324e3e5c5ea53964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2307 CODESIZE SUB DUP1 PUSH3 0x2307 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1BE JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x90 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6A SWAP3 SWAP2 SWAP1 PUSH3 0x90 JUMP JUMPDEST POP PUSH3 0x7B PUSH3 0x8B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9E SWAP1 PUSH3 0x2D8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xC2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xDD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x10D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x11D SWAP2 SWAP1 PUSH3 0x121 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x122 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x157 PUSH3 0x151 DUP5 PUSH3 0x26C JUMP JUMPDEST PUSH3 0x243 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x176 JUMPI PUSH3 0x175 PUSH3 0x3A7 JUMP JUMPDEST JUMPDEST PUSH3 0x183 DUP5 DUP3 DUP6 PUSH3 0x2A2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x3A2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x140 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D8 JUMPI PUSH3 0x1D7 PUSH3 0x3B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F9 JUMPI PUSH3 0x1F8 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH3 0x207 DUP6 DUP3 DUP7 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22A PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH3 0x239 DUP6 DUP3 DUP7 ADD PUSH3 0x18B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24F PUSH3 0x262 JUMP JUMPDEST SWAP1 POP PUSH3 0x25D DUP3 DUP3 PUSH3 0x30E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x28A JUMPI PUSH3 0x289 PUSH3 0x373 JUMP JUMPDEST JUMPDEST PUSH3 0x295 DUP3 PUSH3 0x3B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2C2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2D2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x308 JUMPI PUSH3 0x307 PUSH3 0x344 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x319 DUP3 PUSH3 0x3B6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x33B JUMPI PUSH3 0x33A PUSH3 0x373 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F30 DUP1 PUSH3 0x3D7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x395 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x2EA JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21C JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x45D JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A1 PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x604 JUMPI PUSH2 0x5CD DUP2 PUSH2 0x5C8 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x74E DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x764 DUP2 DUP8 PUSH2 0x75F PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x7B0 JUMPI PUSH2 0x779 DUP7 PUSH2 0x774 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x824 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD DUP6 PUSH2 0x8D9 DUP9 DUP9 DUP8 PUSH2 0x1085 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x982 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA10 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA20 DUP2 PUSH1 0x1 PUSH2 0x10DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2E DUP3 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAFD SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB29 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8A DUP3 DUP3 PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB9B PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC48 PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCA4 DUP5 DUP5 DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD06 JUMPI PUSH2 0xCCF DUP5 DUP5 DUP5 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH2 0xD82 DUP5 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD93 SWAP3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE4A PUSH2 0xEA6 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE59 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE97 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xEBA PUSH2 0xEA6 JUMP JUMPDEST GT PUSH2 0xF42 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xF3F JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF0A JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xF74 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107F JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH32 0x701EEB900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x109C DUP7 DUP7 DUP5 PUSH2 0x1520 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x10FC DUP7 PUSH2 0xF79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1118 DUP2 DUP5 PUSH2 0x1113 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x1164 JUMPI PUSH2 0x112D DUP4 PUSH2 0x1128 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1173 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0xFE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1226 DUP4 PUSH2 0x11E3 DUP6 PUSH1 0x0 DUP9 PUSH2 0x1085 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x12AB JUMPI DUP5 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1318 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x134C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1529 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1376 PUSH2 0xE9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1398 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x145D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1413 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x150B JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1506 JUMPI PUSH2 0x150B JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1533 DUP4 DUP4 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x15C1 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x1573 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x15A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1560 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1614 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x168B DUP4 PUSH2 0x167C PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x1685 DUP6 PUSH2 0x1783 JUMP JUMPDEST OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP4 DUP4 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP3 DUP3 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x172C JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16F1 JUMP JUMPDEST POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1768 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x177E PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A6 PUSH2 0x17A1 DUP5 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17C2 JUMPI PUSH2 0x17C1 PUSH2 0x1E7E JUMP JUMPDEST JUMPDEST PUSH2 0x17CD DUP5 DUP3 DUP6 PUSH2 0x1D76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E4 DUP2 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F9 DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180E DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1823 DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x1E79 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1866 DUP2 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1882 JUMPI PUSH2 0x1881 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP5 DUP3 DUP6 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18AF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CF DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH2 0x18F1 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1900 DUP7 DUP3 DUP8 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1911 DUP7 DUP3 DUP8 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1922 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1946 JUMPI PUSH2 0x1945 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1954 DUP8 DUP3 DUP9 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1965 DUP8 DUP3 DUP9 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1976 DUP8 DUP3 DUP9 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1E83 JUMP JUMPDEST JUMPDEST PUSH2 0x19A3 DUP8 DUP3 DUP9 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D4 DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E5 DUP6 DUP3 DUP7 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A06 JUMPI PUSH2 0x1A05 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A14 DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A25 DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A80 DUP5 DUP3 DUP6 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAD DUP5 DUP3 DUP6 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ACE DUP2 PUSH2 0x1D14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP3 PUSH2 0x1CBF JUMP JUMPDEST PUSH2 0x1AE9 DUP2 DUP6 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x1B02 DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B18 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B22 DUP2 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B5B DUP2 DUP6 PUSH2 0x1CF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1D6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B77 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C06 DUP2 DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C46 DUP2 DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C63 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C73 PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7F DUP3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST PUSH2 0x1CB2 DUP3 PUSH2 0x1E8D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0D DUP3 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DE4 JUMPI PUSH2 0x1DE3 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF3 DUP3 PUSH2 0x1E8D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA7 DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1D14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EEC DUP2 PUSH2 0x1D6C JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xDB LOG0 SWAP14 SMOD PUSH21 0xCA248769B7E8B6CCB3079434ED70D5065D64FB324E RETURNDATACOPY 0x5C 0x5E 0xA5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:241:0:-:0;;;200:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;264:5;271:7;5020:5:1;5012;:13;;;;;;;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;200:82:0;;144:241;;5426:90:1;5482:7;5426:90;:::o;144:241:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:7:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;144:241:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1038": {
									"entryPoint": 4312,
									"id": 1038,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_435": {
									"entryPoint": 5296,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1716": {
									"entryPoint": 4068,
									"id": 1716,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1542": {
									"entryPoint": 4318,
									"id": 1542,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1093": {
									"entryPoint": 4944,
									"id": 1093,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_777": {
									"entryPoint": 3647,
									"id": 777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1599": {
									"entryPoint": 5408,
									"id": 1599,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_810": {
									"entryPoint": 3961,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_791": {
									"entryPoint": 4000,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1189": {
									"entryPoint": 5574,
									"id": 1189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1642": {
									"entryPoint": 3742,
									"id": 1642,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1632": {
									"entryPoint": 4229,
									"id": 1632,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_639": {
									"entryPoint": 6019,
									"id": 639,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_629": {
									"entryPoint": 4269,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_563": {
									"entryPoint": 3755,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1363": {
									"entryPoint": 5417,
									"id": 1363,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1378": {
									"entryPoint": 4914,
									"id": 1378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_177": {
									"entryPoint": 3750,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1652": {
									"entryPoint": 5319,
									"id": 1652,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_684": {
									"entryPoint": 1397,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_250": {
									"entryPoint": 2613,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1675": {
									"entryPoint": 2581,
									"id": 1675,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_707": {
									"entryPoint": 1270,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_751": {
									"entryPoint": 3499,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_373": {
									"entryPoint": 1124,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_455": {
									"entryPoint": 2595,
									"id": 455,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_29": {
									"entryPoint": 2944,
									"id": 29,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1012": {
									"entryPoint": 3225,
									"id": 1012,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_974": {
									"entryPoint": 2549,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_733": {
									"entryPoint": 2958,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_363": {
									"entryPoint": 978,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_383": {
									"entryPoint": 2798,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_426": {
									"entryPoint": 3340,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": 1721,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_955": {
									"entryPoint": 1744,
									"id": 955,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:7"
															},
															"nodeType": "YulIf",
															"src": "249:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:7",
														"type": ""
													}
												],
												"src": "7:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:7",
														"type": ""
													}
												],
												"src": "423:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"src": "568:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:7",
														"type": ""
													}
												],
												"src": "707:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:7",
														"type": ""
													}
												],
												"src": "850:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:7"
															},
															"nodeType": "YulIf",
															"src": "1081:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:7",
														"type": ""
													}
												],
												"src": "1010:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:7",
														"type": ""
													}
												],
												"src": "1354:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:7"
															},
															"nodeType": "YulIf",
															"src": "1575:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:7",
														"type": ""
													}
												],
												"src": "1499:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:7"
															},
															"nodeType": "YulIf",
															"src": "1927:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:7",
														"type": ""
													}
												],
												"src": "1834:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:7"
															},
															"nodeType": "YulIf",
															"src": "2424:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:7",
														"type": ""
													}
												],
												"src": "2314:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:7"
															},
															"nodeType": "YulIf",
															"src": "3075:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:7",
														"type": ""
													}
												],
												"src": "2939:943:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:7"
															},
															"nodeType": "YulIf",
															"src": "3978:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:7",
														"type": ""
													}
												],
												"src": "3888:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:7"
															},
															"nodeType": "YulIf",
															"src": "4455:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:7",
														"type": ""
													}
												],
												"src": "4362:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:7"
															},
															"nodeType": "YulIf",
															"src": "4917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:7",
														"type": ""
													}
												],
												"src": "4842:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:7"
															},
															"nodeType": "YulIf",
															"src": "5261:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:7",
														"type": ""
													}
												],
												"src": "5175:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:7"
															},
															"nodeType": "YulIf",
															"src": "5606:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:7",
														"type": ""
													}
												],
												"src": "5530:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:7",
														"type": ""
													}
												],
												"src": "5865:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:7",
														"type": ""
													}
												],
												"src": "5989:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:7",
														"type": ""
													}
												],
												"src": "6104:360:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:7",
														"type": ""
													}
												],
												"src": "6470:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:7",
														"type": ""
													}
												],
												"src": "6840:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:7",
														"type": ""
													}
												],
												"src": "7223:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:7",
														"type": ""
													}
												],
												"src": "7347:435:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:7",
														"type": ""
													}
												],
												"src": "7788:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:7",
														"type": ""
													}
												],
												"src": "8016:640:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:7",
														"type": ""
													}
												],
												"src": "8662:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:7",
														"type": ""
													}
												],
												"src": "8878:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:7",
														"type": ""
													}
												],
												"src": "9197:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:7",
														"type": ""
													}
												],
												"src": "9425:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:7",
														"type": ""
													}
												],
												"src": "9560:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:7"
															},
															"nodeType": "YulIf",
															"src": "9778:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:7",
														"type": ""
													}
												],
												"src": "9641:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:7",
														"type": ""
													}
												],
												"src": "9954:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:7",
														"type": ""
													}
												],
												"src": "10058:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:7",
														"type": ""
													}
												],
												"src": "10163:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:7",
														"type": ""
													}
												],
												"src": "10337:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:7",
														"type": ""
													}
												],
												"src": "10512:148:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10721:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10732:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10721:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10693:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10703:7:7",
														"type": ""
													}
												],
												"src": "10666:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10845:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10838:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10820:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10792:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10802:7:7",
														"type": ""
													}
												],
												"src": "10768:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10918:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10918:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10890:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10900:7:7",
														"type": ""
													}
												],
												"src": "10864:149:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:7",
														"type": ""
													}
												],
												"src": "11019:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11217:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11206:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11178:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11188:7:7",
														"type": ""
													}
												],
												"src": "11151:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:103:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11295:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11366:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11267:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11272:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11277:6:7",
														"type": ""
													}
												],
												"src": "11234:154:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11453:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11462:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11457:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11522:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11547:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11552:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11543:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11543:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11571:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11562:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11556:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11556:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11536:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11536:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11480:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11494:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11496:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11505:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11508:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11501:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11501:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11496:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11476:3:7",
																"statements": []
															},
															"src": "11472:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11669:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11674:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11665:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11665:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11658:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:13:7"
															},
															"nodeType": "YulIf",
															"src": "11594:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11425:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11430:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11435:6:7",
														"type": ""
													}
												],
												"src": "11394:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11788:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11803:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11890:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11904:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11912:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11900:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11890:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11856:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:26:7"
															},
															"nodeType": "YulIf",
															"src": "11846:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11963:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:38:7"
															},
															"nodeType": "YulIf",
															"src": "11937:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11742:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11751:6:7",
														"type": ""
													}
												],
												"src": "11707:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12138:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12116:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12090:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12257:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12257:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12257:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12195:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12195:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12234:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12231:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:62:7"
															},
															"nodeType": "YulIf",
															"src": "12189:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12297:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12286:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12062:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12070:4:7",
														"type": ""
													}
												],
												"src": "12033:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12320:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12506:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12692:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12904:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12921:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12914:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12815:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13150:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13061:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13242:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13260:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13252:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13215:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13225:6:7",
														"type": ""
													}
												],
												"src": "13184:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13335:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13392:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13401:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13404:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13394:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13394:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13394:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13383:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13365:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13365:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13355:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:43:7"
															},
															"nodeType": "YulIf",
															"src": "13345:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13328:5:7",
														"type": ""
													}
												],
												"src": "13292:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13460:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13523:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13526:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13516:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13516:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13516:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13505:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13490:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13490:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:40:7"
															},
															"nodeType": "YulIf",
															"src": "13470:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13453:5:7",
														"type": ""
													}
												],
												"src": "13420:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13584:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13640:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13649:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13652:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13642:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13642:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13642:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13607:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13631:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "13614:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13614:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13604:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:42:7"
															},
															"nodeType": "YulIf",
															"src": "13594:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13577:5:7",
														"type": ""
													}
												],
												"src": "13542:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13768:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13770:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13734:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13759:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13741:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13731:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:43:7"
															},
															"nodeType": "YulIf",
															"src": "13721:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13704:5:7",
														"type": ""
													}
												],
												"src": "13668:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb46514610313578063b88d4fde1461033c578063c87b56dd14610358578063e985e9c514610395576100f3565b80636352211e1461024557806370a082311461028257806395d89b41146102bf578063a1448194146102ea576100f3565b806318160ddd116100c657806318160ddd146101b957806323b872dd146101e457806342842e0e1461020057806342966c681461021c576100f3565b806301ffc9a7146100f857806306fdde0314610135578063081812fc14610160578063095ea7b31461019d575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611a2f565b6103d2565b60405161012c9190611c11565b60405180910390f35b34801561014157600080fd5b5061014a610464565b6040516101579190611c2c565b60405180910390f35b34801561016c57600080fd5b5061018760048036038101906101829190611a89565b6104f6565b6040516101949190611baa565b60405180910390f35b6101b760048036038101906101b291906119ef565b610575565b005b3480156101c557600080fd5b506101ce6106b9565b6040516101db9190611c4e565b60405180910390f35b6101fe60048036038101906101f991906118d9565b6106d0565b005b61021a600480360381019061021591906118d9565b6109f5565b005b34801561022857600080fd5b50610243600480360381019061023e9190611a89565b610a15565b005b34801561025157600080fd5b5061026c60048036038101906102679190611a89565b610a23565b6040516102799190611baa565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a4919061186c565b610a35565b6040516102b69190611c4e565b60405180910390f35b3480156102cb57600080fd5b506102d4610aee565b6040516102e19190611c2c565b60405180910390f35b3480156102f657600080fd5b50610311600480360381019061030c91906119ef565b610b80565b005b34801561031f57600080fd5b5061033a600480360381019061033591906119af565b610b8e565b005b6103566004803603810190610351919061192c565b610c99565b005b34801561036457600080fd5b5061037f600480360381019061037a9190611a89565b610d0c565b60405161038c9190611c2c565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611899565b610dab565b6040516103c99190611c11565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042d57506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045d5750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461047390611db8565b80601f016020809104026020016040519081016040528092919081815260200182805461049f90611db8565b80156104ec5780601f106104c1576101008083540402835291602001916104ec565b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b5050505050905090565b600061050182610e3f565b610537576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058082610a23565b90508073ffffffffffffffffffffffffffffffffffffffff166105a1610e9e565b73ffffffffffffffffffffffffffffffffffffffff1614610604576105cd816105c8610e9e565b610dab565b610603576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106c3610ea6565b6001546000540303905090565b60006106db82610eab565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610742576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061074e84610f79565b91509150610764818761075f610e9e565b610fa0565b6107b05761077986610774610e9e565b610dab565b6107af576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610817576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108248686866001610fe4565b801561082f57600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506108fd856108d9888887611085565b7c0200000000000000000000000000000000000000000000000000000000176110ad565b600460008681526020019081526020016000208190555060007c020000000000000000000000000000000000000000000000000000000084161415610985576000600185019050600060046000838152602001908152602001600020541415610983576000548114610982578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109ed86868660016110d8565b505050505050565b610a1083838360405180602001604052806000815250610c99565b505050565b610a208160016110de565b50565b6000610a2e82610eab565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9d576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610afd90611db8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2990611db8565b8015610b765780601f10610b4b57610100808354040283529160200191610b76565b820191906000526020600020905b815481529060010190602001808311610b5957829003601f168201915b5050505050905090565b610b8a8282611332565b5050565b8060076000610b9b610e9e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c48610e9e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c8d9190611c11565b60405180910390a35050565b610ca48484846106d0565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610d0657610ccf84848484611350565b610d05576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d1782610e3f565b610d4d576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d576114b0565b9050600081511415610d785760405180602001604052806000815250610da3565b80610d82846114c7565b604051602001610d93929190611b86565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610e4a610ea6565b11158015610e59575060005482105b8015610e97575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610eba610ea6565b11610f4257600054811015610f415760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f3f575b6000811415610f35576004600083600190039350838152602001908152602001600020549050610f0a565b8092505050610f74565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461107f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461107e576040517f0701eeb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b60008060e883901c905060e861109c868684611520565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60006110e983610eab565b905060008190506000806110fc86610f79565b915091508415611165576111188184611113610e9e565b610fa0565b6111645761112d83611128610e9e565b610dab565b611163576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b611173836000886001610fe4565b801561117e57600082555b600160806001901b03600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550611226836111e385600088611085565b7c02000000000000000000000000000000000000000000000000000000007c010000000000000000000000000000000000000000000000000000000017176110ad565b600460008881526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000851614156112ae5760006001870190506000600460008381526020019081526020016000205414156112ac5760005481146112ab578460046000838152602001908152602001600020819055505b5b505b85600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46113188360008860016110d8565b600160008154809291906001019190505550505050505050565b61134c828260405180602001604052806000815250611529565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611376610e9e565b8786866040518563ffffffff1660e01b81526004016113989493929190611bc5565b602060405180830381600087803b1580156113b257600080fd5b505af19250505080156113e357506040513d601f19601f820116820180604052508101906113e09190611a5c565b60015b61145d573d8060008114611413576040519150601f19603f3d011682016040523d82523d6000602084013e611418565b606091505b50600081511415611455576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561150b57600184039350600a81066030018453600a81049050806115065761150b565b6114e0565b50828103602084039350808452505050919050565b60009392505050565b61153383836115c6565b60008373ffffffffffffffffffffffffffffffffffffffff163b146115c157600080549050600083820390505b6115736000868380600101945086611350565b6115a9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181106115605781600054146115be57600080fd5b50505b505050565b6000805490506000821415611607576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116146000848385610fe4565b600160406001901b178202600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555061168b8361167c6000866000611085565b61168585611783565b176110ad565b6004600083815260200190815260200160002081905550600080838301905073ffffffffffffffffffffffffffffffffffffffff85169150828260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600183015b81811461172c57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001810190506116f1565b506000821415611768576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600081905550505061177e60008483856110d8565b505050565b60006001821460e11b9050919050565b60006117a66117a184611c8e565b611c69565b9050828152602081018484840111156117c2576117c1611e7e565b5b6117cd848285611d76565b509392505050565b6000813590506117e481611e9e565b92915050565b6000813590506117f981611eb5565b92915050565b60008135905061180e81611ecc565b92915050565b60008151905061182381611ecc565b92915050565b600082601f83011261183e5761183d611e79565b5b813561184e848260208601611793565b91505092915050565b60008135905061186681611ee3565b92915050565b60006020828403121561188257611881611e88565b5b6000611890848285016117d5565b91505092915050565b600080604083850312156118b0576118af611e88565b5b60006118be858286016117d5565b92505060206118cf858286016117d5565b9150509250929050565b6000806000606084860312156118f2576118f1611e88565b5b6000611900868287016117d5565b9350506020611911868287016117d5565b925050604061192286828701611857565b9150509250925092565b6000806000806080858703121561194657611945611e88565b5b6000611954878288016117d5565b9450506020611965878288016117d5565b935050604061197687828801611857565b925050606085013567ffffffffffffffff81111561199757611996611e83565b5b6119a387828801611829565b91505092959194509250565b600080604083850312156119c6576119c5611e88565b5b60006119d4858286016117d5565b92505060206119e5858286016117ea565b9150509250929050565b60008060408385031215611a0657611a05611e88565b5b6000611a14858286016117d5565b9250506020611a2585828601611857565b9150509250929050565b600060208284031215611a4557611a44611e88565b5b6000611a53848285016117ff565b91505092915050565b600060208284031215611a7257611a71611e88565b5b6000611a8084828501611814565b91505092915050565b600060208284031215611a9f57611a9e611e88565b5b6000611aad84828501611857565b91505092915050565b611abf81611d02565b82525050565b611ace81611d14565b82525050565b6000611adf82611cbf565b611ae98185611cd5565b9350611af9818560208601611d85565b611b0281611e8d565b840191505092915050565b6000611b1882611cca565b611b228185611ce6565b9350611b32818560208601611d85565b611b3b81611e8d565b840191505092915050565b6000611b5182611cca565b611b5b8185611cf7565b9350611b6b818560208601611d85565b80840191505092915050565b611b8081611d6c565b82525050565b6000611b928285611b46565b9150611b9e8284611b46565b91508190509392505050565b6000602082019050611bbf6000830184611ab6565b92915050565b6000608082019050611bda6000830187611ab6565b611be76020830186611ab6565b611bf46040830185611b77565b8181036060830152611c068184611ad4565b905095945050505050565b6000602082019050611c266000830184611ac5565b92915050565b60006020820190508181036000830152611c468184611b0d565b905092915050565b6000602082019050611c636000830184611b77565b92915050565b6000611c73611c84565b9050611c7f8282611dea565b919050565b6000604051905090565b600067ffffffffffffffff821115611ca957611ca8611e4a565b5b611cb282611e8d565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d0d82611d4c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611da3578082015181840152602081019050611d88565b83811115611db2576000848401525b50505050565b60006002820490506001821680611dd057607f821691505b60208210811415611de457611de3611e1b565b5b50919050565b611df382611e8d565b810181811067ffffffffffffffff82111715611e1257611e11611e4a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611ea781611d02565b8114611eb257600080fd5b50565b611ebe81611d14565b8114611ec957600080fd5b50565b611ed581611d20565b8114611ee057600080fd5b50565b611eec81611d6c565b8114611ef757600080fd5b5056fea264697066735822122015dba09d0774ca248769b7e8b6ccb3079434ed70d5065d64fb324e3e5c5ea53964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x395 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x2EA JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21C JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x186C JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x19EF JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1899 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42D JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x45D JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580 DUP3 PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A1 PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x604 JUMPI PUSH2 0x5CD DUP2 PUSH2 0x5C8 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DB DUP3 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x74E DUP5 PUSH2 0xF79 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x764 DUP2 DUP8 PUSH2 0x75F PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x7B0 JUMPI PUSH2 0x779 DUP7 PUSH2 0x774 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x824 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD DUP6 PUSH2 0x8D9 DUP9 DUP9 DUP8 PUSH2 0x1085 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x982 JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x9ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA10 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA20 DUP2 PUSH1 0x1 PUSH2 0x10DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2E DUP3 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xAFD SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB29 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB8A DUP3 DUP3 PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB9B PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC48 PUSH2 0xE9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCA4 DUP5 DUP5 DUP5 PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xD06 JUMPI PUSH2 0xCCF DUP5 DUP5 DUP5 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD17 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDA3 JUMP JUMPDEST DUP1 PUSH2 0xD82 DUP5 PUSH2 0x14C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD93 SWAP3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE4A PUSH2 0xEA6 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xE59 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE97 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xEBA PUSH2 0xEA6 JUMP JUMPDEST GT PUSH2 0xF42 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xF3F JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xF0A JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xF74 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107F JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH32 0x701EEB900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0x109C DUP7 DUP7 DUP5 PUSH2 0x1520 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 DUP4 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x10FC DUP7 PUSH2 0xF79 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1118 DUP2 DUP5 PUSH2 0x1113 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x1164 JUMPI PUSH2 0x112D DUP4 PUSH2 0x1128 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1173 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0xFE4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SUB PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1226 DUP4 PUSH2 0x11E3 DUP6 PUSH1 0x0 DUP9 PUSH2 0x1085 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 OR OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH1 0x1 DUP8 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x12AB JUMPI DUP5 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP6 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1318 DUP4 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x134C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1529 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1376 PUSH2 0xE9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1398 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x145D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1413 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1418 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1455 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x150B JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1506 JUMPI PUSH2 0x150B JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1533 DUP4 DUP4 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x15C1 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP4 DUP3 SUB SWAP1 POP JUMPDEST PUSH2 0x1573 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1350 JUMP JUMPDEST PUSH2 0x15A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1560 JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1614 PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 PUSH1 0x1 SWAP1 SHL OR DUP3 MUL PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x168B DUP4 PUSH2 0x167C PUSH1 0x0 DUP7 PUSH1 0x0 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x1685 DUP6 PUSH2 0x1783 JUMP JUMPDEST OR PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP4 DUP4 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP3 DUP3 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x172C JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16F1 JUMP JUMPDEST POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1768 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x177E PUSH1 0x0 DUP5 DUP4 DUP6 PUSH2 0x10D8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH1 0xE1 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A6 PUSH2 0x17A1 DUP5 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17C2 JUMPI PUSH2 0x17C1 PUSH2 0x1E7E JUMP JUMPDEST JUMPDEST PUSH2 0x17CD DUP5 DUP3 DUP6 PUSH2 0x1D76 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E4 DUP2 PUSH2 0x1E9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F9 DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180E DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1823 DUP2 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183E JUMPI PUSH2 0x183D PUSH2 0x1E79 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1866 DUP2 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1882 JUMPI PUSH2 0x1881 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP5 DUP3 DUP6 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B0 JUMPI PUSH2 0x18AF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BE DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18CF DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH2 0x18F1 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1900 DUP7 DUP3 DUP8 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1911 DUP7 DUP3 DUP8 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1922 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1946 JUMPI PUSH2 0x1945 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1954 DUP8 DUP3 DUP9 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1965 DUP8 DUP3 DUP9 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1976 DUP8 DUP3 DUP9 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1E83 JUMP JUMPDEST JUMPDEST PUSH2 0x19A3 DUP8 DUP3 DUP9 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D4 DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E5 DUP6 DUP3 DUP7 ADD PUSH2 0x17EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A06 JUMPI PUSH2 0x1A05 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A14 DUP6 DUP3 DUP7 ADD PUSH2 0x17D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A25 DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A80 DUP5 DUP3 DUP6 ADD PUSH2 0x1814 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAD DUP5 DUP3 DUP6 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ACE DUP2 PUSH2 0x1D14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP3 PUSH2 0x1CBF JUMP JUMPDEST PUSH2 0x1AE9 DUP2 DUP6 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x1B02 DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B18 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B22 DUP2 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B32 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x1B3B DUP2 PUSH2 0x1E8D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B51 DUP3 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B5B DUP2 DUP6 PUSH2 0x1CF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D85 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x1D6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP6 PUSH2 0x1B46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9E DUP3 DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B77 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C06 DUP2 DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C46 DUP2 DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C63 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C73 PUSH2 0x1C84 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7F DUP3 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST PUSH2 0x1CB2 DUP3 PUSH2 0x1E8D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0D DUP3 PUSH2 0x1D4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DA3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D88 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DD0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DE4 JUMPI PUSH2 0x1DE3 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF3 DUP3 PUSH2 0x1E8D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E12 JUMPI PUSH2 0x1E11 PUSH2 0x1E4A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA7 DUP2 PUSH2 0x1D02 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EBE DUP2 PUSH2 0x1D14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1ED5 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EEC DUP2 PUSH2 0x1D6C JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xDB LOG0 SWAP14 SMOD PUSH21 0xCA248769B7E8B6CCB3079434ED70D5065D64FB324E RETURNDATACOPY 0x5C 0x5E 0xA5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:241:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16360:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15812:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19903:2764;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22758:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;509:92:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11391:150:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10208:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:95:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16901:231:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23526:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10411:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17282:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9155:630;9240:4;9573:10;9558:25;;:11;:25;;;;:101;;;;9649:10;9634:25;;:11;:25;;;;9558:101;:177;;;;9725:10;9710:25;;:11;:25;;;;9558:177;9539:196;;9155:630;;;:::o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;;;;;;;;;;;;;16455:64;16537:15;:24;16553:7;16537:24;;;;;;;;;;;:30;;;;;;;;;;;;16530:37;;16360:214;;;:::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;;15970:5;15947:28;;:19;:17;:19::i;:::-;:28;;;15943:172;;15994:44;16011:5;16018:19;:17;:19::i;:::-;15994:16;:44::i;:::-;15989:126;;16065:35;;;;;;;;;;;;;;15989:126;15943:172;16158:2;16125:15;:24;16141:7;16125:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;16195:7;16191:2;16175:28;;16184:5;16175:28;;;;;;;;;;;;15890:320;15812:398;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;20112:45;;20128:19;20112:45;;;20108:86;;20166:28;;;;;;;;;;;;;;20108:86;20206:27;20235:23;20262:35;20289:7;20262:26;:35::i;:::-;20205:92;;;;20394:68;20419:15;20436:4;20442:19;:17;:19::i;:::-;20394:24;:68::i;:::-;20389:179;;20481:43;20498:4;20504:19;:17;:19::i;:::-;20481:16;:43::i;:::-;20476:92;;20533:35;;;;;;;;;;;;;;20476:92;20389:179;20597:1;20583:16;;:2;:16;;;20579:52;;;20608:23;;;;;;;;;;;;;;20579:52;20642:43;20664:4;20670:2;20674:7;20683:1;20642:21;:43::i;:::-;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;21300:18;:24;21319:4;21300:24;;;;;;;;;;;;;;;;21298:26;;;;;;;;;;;;21368:18;:22;21387:2;21368:22;;;;;;;;;;;;;;;;21366:24;;;;;;;;;;;21683:143;21719:2;21767:45;21782:4;21788:2;21792:19;21767:14;:45::i;:::-;2392:8;21739:73;21683:18;:143::i;:::-;21654:17;:26;21672:7;21654:26;;;;;;;;;;;:172;;;;21994:1;2392:8;21943:19;:47;:52;21939:617;;;22015:19;22047:1;22037:7;:11;22015:33;;22202:1;22168:17;:30;22186:11;22168:30;;;;;;;;;;;;:35;22164:378;;;22304:13;;22289:11;:28;22285:239;;22482:19;22449:17;:30;22467:11;22449:30;;;;;;;;;;;:52;;;;22285:239;22164:378;21997:559;21939:617;22600:7;22596:2;22581:27;;22590:4;22581:27;;;;;;;;;;;;22618:42;22639:4;22645:2;22649:7;22658:1;22618:20;:42::i;:::-;20030:2637;;;19903:2764;;;:::o;22758:187::-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;509:92:2:-;574:20;580:7;589:4;574:5;:20::i;:::-;509:92;:::o;11391:150:1:-;11463:7;11505:27;11524:7;11505:18;:27::i;:::-;11482:52;;11391:150;;;:::o;7045:230::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:60;;;7168:28;;;;;;;;;;;;;;7136:60;1360:13;7213:18;:25;7232:5;7213:25;;;;;;;;;;;;;;;;:55;7206:62;;7045:230;;;:::o;10208:102::-;10264:13;10296:7;10289:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:102;:::o;288:95:0:-;353:23;363:2;367:8;353:9;:23::i;:::-;288:95;;:::o;16901:231:1:-;17047:8;16995:18;:39;17014:19;:17;:19::i;:::-;16995:39;;;;;;;;;;;;;;;:49;17035:8;16995:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17106:8;17070:55;;17085:19;:17;:19::i;:::-;17070:55;;;17116:8;17070:55;;;;;;:::i;:::-;;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;23758:1;23740:2;:14;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;;;;;;;;;;;;;23773:143;23736:180;23526:396;;;;:::o;10411:313::-;10484:13;10514:16;10522:7;10514;:16::i;:::-;10509:59;;10539:29;;;;;;;;;;;;;;10509:59;10579:21;10603:10;:8;:10::i;:::-;10579:34;;10655:1;10636:7;10630:21;:26;;:87;;;;;;;;;;;;;;;;;10683:7;10692:18;10702:7;10692:9;:18::i;:::-;10666:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10630:87;10623:94;;;10411:313;;;:::o;17282:162::-;17379:4;17402:18;:25;17421:5;17402:25;;;;;;;;;;;;;;;:35;17428:8;17402:35;;;;;;;;;;;;;;;;;;;;;;;;;17395:42;;17282:162;;;;:::o;17693:277::-;17758:4;17812:7;17793:15;:13;:15::i;:::-;:26;;:65;;;;;17845:13;;17835:7;:23;17793:65;:151;;;;;17943:1;2118:8;17895:17;:26;17913:7;17895:26;;;;;;;;;;;;:44;:49;17793:151;17774:170;;17693:277;;;:::o;39437:103::-;39497:7;39523:10;39516:17;;39437:103;:::o;5426:90::-;5482:7;5426:90;:::o;12515:1249::-;12582:7;12601:12;12616:7;12601:22;;12681:4;12662:15;:13;:15::i;:::-;:23;12658:1042;;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:17;:23;12786:4;12768:23;;;;;;;;;;;;12751:40;;12883:1;2118:8;12855:6;:24;:29;12851:831;;;13510:111;13527:1;13517:6;:11;13510:111;;;13569:17;:25;13587:6;;;;;;;13569:25;;;;;;;;;;;;13560:34;;13510:111;;;13653:6;13646:13;;;;;;12851:831;12729:971;12703:997;12658:1042;13726:31;;;;;;;;;;;;;;12515:1249;;;;:::o;18828:474::-;18927:27;18956:23;18995:38;19036:15;:24;19052:7;19036:24;;;;;;;;;;;18995:65;;19210:18;19187:41;;19266:19;19260:26;19241:45;;19173:123;18828:474;;;:::o;18074:646::-;18219:11;18381:16;18374:5;18370:28;18361:37;;18539:16;18528:9;18524:32;18511:45;;18687:15;18676:9;18673:30;18665:5;18654:9;18651:20;18648:56;18638:66;;18074:646;;;;;:::o;578:292:3:-;769:1;753:18;;:4;:18;;;749:114;;804:1;790:16;;:2;:16;;;786:77;;828:35;;;;;;;;;;;;;;786:77;749:114;578:292;;;;:::o;38764:304:1:-;38895:7;38914:16;2513:3;38940:19;:41;;38914:68;;2513:3;39007:31;39018:4;39024:2;39028:9;39007:10;:31::i;:::-;38999:40;;:62;;38992:69;;;38764:304;;;;;:::o;14297:443::-;14377:14;14542:16;14535:5;14531:28;14522:37;;14717:5;14703:11;14678:23;14674:41;14671:52;14664:5;14661:63;14651:73;;14297:443;;;;:::o;25367:153::-;;;;;:::o;34095:3015::-;34174:27;34204;34223:7;34204:18;:27::i;:::-;34174:57;;34242:12;34273:19;34242:52;;34306:27;34335:23;34362:35;34389:7;34362:26;:35::i;:::-;34305:92;;;;34412:13;34408:312;;;34531:68;34556:15;34573:4;34579:19;:17;:19::i;:::-;34531:24;:68::i;:::-;34526:183;;34622:43;34639:4;34645:19;:17;:19::i;:::-;34622:16;:43::i;:::-;34617:92;;34674:35;;;;;;;;;;;;;;34617:92;34526:183;34408:312;34730:51;34752:4;34766:1;34770:7;34779:1;34730:21;:51::i;:::-;34870:15;34867:157;;;35008:1;34987:19;34980:30;34867:157;35672:1;1619:3;35642:1;:26;;35641:32;35613:18;:24;35632:4;35613:24;;;;;;;;;;;;;;;;:60;;;;;;;;;;;35933:173;35969:4;36039:53;36054:4;36068:1;36072:19;36039:14;:53::i;:::-;2392:8;2118;35992:43;35991:101;35933:18;:173::i;:::-;35904:17;:26;35922:7;35904:26;;;;;;;;;;;:202;;;;36274:1;2392:8;36223:19;:47;:52;36219:617;;;36295:19;36327:1;36317:7;:11;36295:33;;36482:1;36448:17;:30;36466:11;36448:30;;;;;;;;;;;;:35;36444:378;;;36584:13;;36569:11;:28;36565:239;;36762:19;36729:17;:30;36747:11;36729:30;;;;;;;;;;;:52;;;;36565:239;36444:378;36277:559;36219:617;36888:7;36884:1;36861:35;;36870:4;36861:35;;;;;;;;;;;;36906:50;36927:4;36941:1;36945:7;36954:1;36906:20;:50::i;:::-;37079:12;;:14;;;;;;;;;;;;;34164:2946;;;;34095:3015;;:::o;33423:110::-;33499:27;33509:2;33513:8;33499:27;;;;;;;;;;;;:9;:27::i;:::-;33423:110;;:::o;25948:697::-;26106:4;26151:2;26126:45;;;26172:19;:17;:19::i;:::-;26193:4;26199:7;26208:5;26126:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26421:1;26404:6;:13;:18;26400:229;;;26449:40;;;;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;26292:54;;;26282:64;;;:6;:64;;;;26275:71;;;25948:697;;;;;;:::o;10969:92::-;11020:13;11045:9;;;;;;;;;;;;;;10969:92;:::o;39637:1708::-;39702:17;40130:4;40123;40117:11;40113:22;40220:1;40214:4;40207:15;40293:4;40290:1;40286:12;40279:19;;40373:1;40368:3;40361:14;40474:3;40708:5;40690:419;40716:1;40690:419;;;40755:1;40750:3;40746:11;40739:18;;40923:2;40917:4;40913:13;40909:2;40905:22;40900:3;40892:36;41015:2;41009:4;41005:13;40997:21;;41080:4;41070:25;;41088:5;;41070:25;40690:419;;;40694:21;41146:3;41141;41137:13;41259:4;41254:3;41250:14;41243:21;;41322:6;41317:3;41310:19;39740:1599;;;39637:1708;;;:::o;38475:143::-;38608:6;38475:143;;;;;:::o;32675:669::-;32801:19;32807:2;32811:8;32801:5;:19::i;:::-;32877:1;32859:2;:14;;;:19;32855:473;;32898:11;32912:13;;32898:27;;32943:13;32965:8;32959:3;:14;32943:30;;32991:229;33021:62;33060:1;33064:2;33068:7;;;;;;33077:5;33021:30;:62::i;:::-;33016:165;;33118:40;;;;;;;;;;;;;;33016:165;33215:3;33207:5;:11;32991:229;;33300:3;33283:13;;:20;33279:34;;33305:8;;;33279:34;32880:448;;32855:473;32675:669;;;:::o;27091:2902::-;27163:20;27186:13;;27163:36;;27225:1;27213:8;:13;27209:44;;;27235:18;;;;;;;;;;;;;;27209:44;27264:61;27294:1;27298:2;27302:12;27316:8;27264:21;:61::i;:::-;27797:1;1495:2;27767:1;:26;;27766:32;27754:8;:45;27728:18;:22;27747:2;27728:22;;;;;;;;;;;;;;;;:71;;;;;;;;;;;28069:136;28105:2;28158:33;28181:1;28185:2;28189:1;28158:14;:33::i;:::-;28125:30;28146:8;28125:20;:30::i;:::-;:66;28069:18;:136::i;:::-;28035:17;:31;28053:12;28035:31;;;;;;;;;;;:170;;;;28220:16;28250:11;28279:8;28264:12;:23;28250:37;;28792:16;28788:2;28784:25;28772:37;;29156:12;29117:8;29077:1;29016:25;28958:1;28898;28872:328;29520:1;29506:12;29502:20;29461:339;29560:3;29551:7;29548:16;29461:339;;29774:7;29764:8;29761:1;29734:25;29731:1;29728;29723:59;29612:1;29603:7;29599:15;29588:26;;29461:339;;;29465:75;29843:1;29831:8;:13;29827:45;;;29853:19;;;;;;;;;;;;;;29827:45;29903:3;29887:13;:19;;;;27508:2409;;29926:60;29955:1;29959:2;29963:12;29977:8;29926:20;:60::i;:::-;27153:2840;27091:2902;;:::o;14837:318::-;14907:14;15136:1;15126:8;15123:15;15097:24;15093:46;15083:56;;14837:318;;;:::o;7:410:7:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:96::-;10703:7;10732:24;10750:5;10732:24;:::i;:::-;10721:35;;10666:96;;;:::o;10768:90::-;10802:7;10845:5;10838:13;10831:21;10820:32;;10768:90;;;:::o;10864:149::-;10900:7;10940:66;10933:5;10929:78;10918:89;;10864:149;;;:::o;11019:126::-;11056:7;11096:42;11089:5;11085:54;11074:65;;11019:126;;;:::o;11151:77::-;11188:7;11217:5;11206:16;;11151:77;;;:::o;11234:154::-;11318:6;11313:3;11308;11295:30;11380:1;11371:6;11366:3;11362:16;11355:27;11234:154;;;:::o;11394:307::-;11462:1;11472:113;11486:6;11483:1;11480:13;11472:113;;;11571:1;11566:3;11562:11;11556:18;11552:1;11547:3;11543:11;11536:39;11508:2;11505:1;11501:10;11496:15;;11472:113;;;11603:6;11600:1;11597:13;11594:101;;;11683:1;11674:6;11669:3;11665:16;11658:27;11594:101;11443:258;11394:307;;;:::o;11707:320::-;11751:6;11788:1;11782:4;11778:12;11768:22;;11835:1;11829:4;11825:12;11856:18;11846:81;;11912:4;11904:6;11900:17;11890:27;;11846:81;11974:2;11966:6;11963:14;11943:18;11940:38;11937:84;;;11993:18;;:::i;:::-;11937:84;11758:269;11707:320;;;:::o;12033:281::-;12116:27;12138:4;12116:27;:::i;:::-;12108:6;12104:40;12246:6;12234:10;12231:22;12210:18;12198:10;12195:34;12192:62;12189:88;;;12257:18;;:::i;:::-;12189:88;12297:10;12293:2;12286:22;12076:238;12033:281;;:::o;12320:180::-;12368:77;12365:1;12358:88;12465:4;12462:1;12455:15;12489:4;12486:1;12479:15;12506:180;12554:77;12551:1;12544:88;12651:4;12648:1;12641:15;12675:4;12672:1;12665:15;12692:117;12801:1;12798;12791:12;12815:117;12924:1;12921;12914:12;12938:117;13047:1;13044;13037:12;13061:117;13170:1;13167;13160:12;13184:102;13225:6;13276:2;13272:7;13267:2;13260:5;13256:14;13252:28;13242:38;;13184:102;;;:::o;13292:122::-;13365:24;13383:5;13365:24;:::i;:::-;13358:5;13355:35;13345:63;;13404:1;13401;13394:12;13345:63;13292:122;:::o;13420:116::-;13490:21;13505:5;13490:21;:::i;:::-;13483:5;13480:32;13470:60;;13526:1;13523;13516:12;13470:60;13420:116;:::o;13542:120::-;13614:23;13631:5;13614:23;:::i;:::-;13607:5;13604:34;13594:62;;13652:1;13649;13642:12;13594:62;13542:120;:::o;13668:122::-;13741:24;13759:5;13741:24;:::i;:::-;13734:5;13731:35;13721:63;;13780:1;13777;13770:12;13721:63;13668:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1596800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeMint(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5545",
								"totalSupply()": "4599",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 282,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 264,
									"end": 269,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 200,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 282,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 144,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 385,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015dba09d0774ca248769b7e8b6ccb3079434ed70d5065d64fb324e3e5c5ea53964736f6c63430008070033",
									".code": [
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "A1448194"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 144,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 288,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9725,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10106,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 15924,
											"end": 15931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15916,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15970,
											"end": 15975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 15947,
											"end": 15964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 16018,
											"end": 16035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16158,
											"end": 16160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16141,
											"end": 16148,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16195,
											"end": 16202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16191,
											"end": 16193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16184,
											"end": 16189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15890,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 20089,
											"end": 20096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20153,
											"end": 20157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20128,
											"end": 20147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20206,
											"end": 20233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 20289,
											"end": 20296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20262,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 20419,
											"end": 20434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 20440,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 20442,
											"end": 20459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 20504,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20585,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 20664,
											"end": 20668,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20672,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 20681,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20642,
											"end": 20663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 20789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20884,
											"end": 20914,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21319,
											"end": 21323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21386,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21387,
											"end": 21389,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 21719,
											"end": 21721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 21782,
											"end": 21786,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21788,
											"end": 21790,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21792,
											"end": 21811,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21767,
											"end": 21781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21739,
											"end": 21812,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21683,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21672,
											"end": 21679,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21994,
											"end": 21995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21943,
											"end": 21962,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22047,
											"end": 22048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22037,
											"end": 22044,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22202,
											"end": 22203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22185,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22186,
											"end": 22197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22289,
											"end": 22317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22482,
											"end": 22501,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22600,
											"end": 22607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 22639,
											"end": 22643,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22645,
											"end": 22647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22649,
											"end": 22656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22658,
											"end": 22659,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22618,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22926,
											"end": 22933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 574,
											"end": 594,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 594,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 574,
											"end": 594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 601,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11524,
											"end": 11531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10264,
											"end": 10277,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 353,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 367,
											"end": 375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 353,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 353,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 353,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17047,
											"end": 17055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 17014,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17035,
											"end": 17043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 17085,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17116,
											"end": 17124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 23708,
											"end": 23712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23695,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23758,
											"end": 23759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23740,
											"end": 23742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23759,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 23809,
											"end": 23813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23815,
											"end": 23817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23819,
											"end": 23826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23828,
											"end": 23833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23778,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10497,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10603,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10702,
											"end": 10709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17428,
											"end": 17436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17758,
											"end": 17762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17812,
											"end": 17819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 17793,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17835,
											"end": 17842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 17944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17895,
											"end": 17912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17913,
											"end": 17920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39497,
											"end": 39504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 39516,
											"end": 39533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39516,
											"end": 39533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12662,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12685,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13653,
											"end": 13659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12729,
											"end": 13700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18927,
											"end": 18954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19052,
											"end": 19059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19210,
											"end": 19228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19266,
											"end": 19285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18219,
											"end": 18230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18381,
											"end": 18397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18374,
											"end": 18379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18539,
											"end": 18555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18528,
											"end": 18537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18524,
											"end": 18556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18511,
											"end": 18556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18511,
											"end": 18556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18687,
											"end": 18702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18676,
											"end": 18685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18654,
											"end": 18663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18648,
											"end": 18704,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 578,
											"end": 870,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 578,
											"end": 870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 753,
											"end": 757,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 753,
											"end": 771,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 749,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 749,
											"end": 863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 806,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 790,
											"end": 792,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 790,
											"end": 806,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 790,
											"end": 806,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 786,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 786,
											"end": 863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "701EEB900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 828,
											"end": 863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 828,
											"end": 863,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 786,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 786,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 863,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 749,
											"end": 863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 870,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38895,
											"end": 38902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38914,
											"end": 38930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 38940,
											"end": 38959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38940,
											"end": 38981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38940,
											"end": 38981,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 38914,
											"end": 38982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38914,
											"end": 38982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 39018,
											"end": 39022,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 39024,
											"end": 39026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 39028,
											"end": 39037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 39007,
											"end": 39017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 38999,
											"end": 39039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39061,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14542,
											"end": 14558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14535,
											"end": 14540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14559,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14717,
											"end": 14722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14671,
											"end": 14723,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14664,
											"end": 14669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34174,
											"end": 34201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 34223,
											"end": 34230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34204,
											"end": 34222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34174,
											"end": 34231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34174,
											"end": 34231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34242,
											"end": 34254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34273,
											"end": 34292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34242,
											"end": 34294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34242,
											"end": 34294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34306,
											"end": 34333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34335,
											"end": 34358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 34389,
											"end": 34396,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34412,
											"end": 34425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 34556,
											"end": 34571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34573,
											"end": 34577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34579,
											"end": 34598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 34579,
											"end": 34596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 34579,
											"end": 34598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34579,
											"end": 34598,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 34579,
											"end": 34598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34531,
											"end": 34555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 34639,
											"end": 34643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34645,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 34645,
											"end": 34662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 34645,
											"end": 34664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34645,
											"end": 34664,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 34645,
											"end": 34664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34622,
											"end": 34638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34730,
											"end": 34781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 34752,
											"end": 34756,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34766,
											"end": 34767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34770,
											"end": 34777,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 34779,
											"end": 34780,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 34730,
											"end": 34751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 34730,
											"end": 34781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 34730,
											"end": 34781,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 34730,
											"end": 34781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34870,
											"end": 34885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 35008,
											"end": 35009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34987,
											"end": 35006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34980,
											"end": 35010,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35672,
											"end": 35673,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 35642,
											"end": 35643,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 35642,
											"end": 35668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35642,
											"end": 35668,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 35641,
											"end": 35673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35631,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35632,
											"end": 35636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 35933,
											"end": 36106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 35969,
											"end": 35973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36039,
											"end": 36092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 36054,
											"end": 36058,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36068,
											"end": 36069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36072,
											"end": 36091,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 36039,
											"end": 36053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 36039,
											"end": 36092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36039,
											"end": 36092,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 36039,
											"end": 36092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35992,
											"end": 36035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 35991,
											"end": 36092,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 35933,
											"end": 35951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 35933,
											"end": 36106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 35933,
											"end": 36106,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 35933,
											"end": 36106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35921,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35922,
											"end": 35929,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36274,
											"end": 36275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36223,
											"end": 36242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36223,
											"end": 36270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36223,
											"end": 36275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36295,
											"end": 36314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36327,
											"end": 36328,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 36317,
											"end": 36324,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 36317,
											"end": 36328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36295,
											"end": 36328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36295,
											"end": 36328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36482,
											"end": 36483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36466,
											"end": 36477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36448,
											"end": 36483,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36584,
											"end": 36597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36584,
											"end": 36597,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 36569,
											"end": 36580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36569,
											"end": 36597,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 36762,
											"end": 36781,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36746,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36747,
											"end": 36758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36277,
											"end": 36836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 36888,
											"end": 36895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 36884,
											"end": 36885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36870,
											"end": 36874,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 36906,
											"end": 36956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 36927,
											"end": 36931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 36941,
											"end": 36942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 36945,
											"end": 36952,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 36954,
											"end": 36955,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 36906,
											"end": 36926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 36906,
											"end": 36956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 36906,
											"end": 36956,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 36906,
											"end": 36956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37091,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 37079,
											"end": 37091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34164,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34164,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34164,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34164,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 33423,
											"end": 33533,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 33423,
											"end": 33533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 33509,
											"end": 33511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33513,
											"end": 33521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33499,
											"end": 33508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 33499,
											"end": 33526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33423,
											"end": 33533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33423,
											"end": 33533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33423,
											"end": 33533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26151,
											"end": 26153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 26172,
											"end": 26189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26421,
											"end": 26422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26404,
											"end": 26410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26404,
											"end": 26417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26589,
											"end": 26595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26583,
											"end": 26596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26574,
											"end": 26580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26570,
											"end": 26572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26559,
											"end": 26597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11033,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39702,
											"end": 39719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 40130,
											"end": 40134,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 40123,
											"end": 40127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 40113,
											"end": 40135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40220,
											"end": 40221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 40214,
											"end": 40218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40293,
											"end": 40297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40290,
											"end": 40291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40286,
											"end": 40298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40373,
											"end": 40374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 40368,
											"end": 40371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 40361,
											"end": 40375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40474,
											"end": 40477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40708,
											"end": 40713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40716,
											"end": 40717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 40755,
											"end": 40756,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 40750,
											"end": 40753,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 40746,
											"end": 40757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40923,
											"end": 40925,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 40917,
											"end": 40921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40913,
											"end": 40926,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 40909,
											"end": 40911,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 40905,
											"end": 40927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40900,
											"end": 40903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 40892,
											"end": 40928,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 41015,
											"end": 41017,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 41009,
											"end": 41013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 40997,
											"end": 41018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40997,
											"end": 41018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41080,
											"end": 41084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41088,
											"end": 41093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 41088,
											"end": 41093,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40694,
											"end": 40715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41146,
											"end": 41149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41141,
											"end": 41144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41259,
											"end": 41263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41254,
											"end": 41257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41243,
											"end": 41264,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 41243,
											"end": 41264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41322,
											"end": 41328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41317,
											"end": 41320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38608,
											"end": 38614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32801,
											"end": 32820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 32807,
											"end": 32809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32811,
											"end": 32819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32801,
											"end": 32806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 32801,
											"end": 32820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 32801,
											"end": 32820,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 32801,
											"end": 32820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32877,
											"end": 32878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32859,
											"end": 32861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32859,
											"end": 32873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32859,
											"end": 32873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 32859,
											"end": 32873,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 32859,
											"end": 32878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 32855,
											"end": 33328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 32855,
											"end": 33328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32912,
											"end": 32925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 32912,
											"end": 32925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 32898,
											"end": 32925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32898,
											"end": 32925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32943,
											"end": 32956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32965,
											"end": 32973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32959,
											"end": 32962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32959,
											"end": 32973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 32943,
											"end": 32973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32943,
											"end": 32973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32991,
											"end": 33220,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 32991,
											"end": 33220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33021,
											"end": 33083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 33060,
											"end": 33061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33064,
											"end": 33066,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 33068,
											"end": 33075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33077,
											"end": 33082,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33021,
											"end": 33051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 33021,
											"end": 33083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 33021,
											"end": 33083,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 33021,
											"end": 33083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33016,
											"end": 33181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 33016,
											"end": 33181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33118,
											"end": 33158,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33016,
											"end": 33181,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 33016,
											"end": 33181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33215,
											"end": 33218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33207,
											"end": 33212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33207,
											"end": 33218,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 32991,
											"end": 33220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 32991,
											"end": 33220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33300,
											"end": 33303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33283,
											"end": 33296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33283,
											"end": 33296,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 33283,
											"end": 33303,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 33279,
											"end": 33313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 33305,
											"end": 33313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33305,
											"end": 33313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 33305,
											"end": 33313,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 33279,
											"end": 33313,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 33279,
											"end": 33313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32880,
											"end": 33328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32880,
											"end": 33328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32855,
											"end": 33328,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 32855,
											"end": 33328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32675,
											"end": 33344,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27163,
											"end": 27183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27186,
											"end": 27199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27186,
											"end": 27199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27163,
											"end": 27199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27163,
											"end": 27199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27225,
											"end": 27226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27213,
											"end": 27221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27226,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 1,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27264,
											"end": 27325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 27294,
											"end": 27295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27298,
											"end": 27300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27302,
											"end": 27314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27316,
											"end": 27324,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27264,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 27264,
											"end": 27325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 27264,
											"end": 27325,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 27264,
											"end": 27325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27797,
											"end": 27798,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27767,
											"end": 27768,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 27767,
											"end": 27793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27767,
											"end": 27793,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 27766,
											"end": 27798,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 27754,
											"end": 27762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27754,
											"end": 27799,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27746,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27747,
											"end": 27749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28069,
											"end": 28205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 28105,
											"end": 28107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28158,
											"end": 28191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 28181,
											"end": 28182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28185,
											"end": 28187,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28189,
											"end": 28190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28158,
											"end": 28172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 28158,
											"end": 28191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28158,
											"end": 28191,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 28158,
											"end": 28191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28125,
											"end": 28155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 28146,
											"end": 28154,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28125,
											"end": 28145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 28125,
											"end": 28155,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28125,
											"end": 28155,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 28125,
											"end": 28155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28125,
											"end": 28191,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 28069,
											"end": 28087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 28069,
											"end": 28205,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 28069,
											"end": 28205,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 28069,
											"end": 28205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28052,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28053,
											"end": 28065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28220,
											"end": 28236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28250,
											"end": 28261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28279,
											"end": 28287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28264,
											"end": 28276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28264,
											"end": 28287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28250,
											"end": 28287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28250,
											"end": 28287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28792,
											"end": 28808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28788,
											"end": 28790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28784,
											"end": 28809,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 28772,
											"end": 28809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28772,
											"end": 28809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29156,
											"end": 29168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29117,
											"end": 29125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29077,
											"end": 29078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29016,
											"end": 29041,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28958,
											"end": 28959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28898,
											"end": 28899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 28872,
											"end": 29200,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 29520,
											"end": 29521,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29506,
											"end": 29518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29502,
											"end": 29522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29560,
											"end": 29563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29551,
											"end": 29558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29548,
											"end": 29564,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29774,
											"end": 29781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29764,
											"end": 29772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29761,
											"end": 29762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29734,
											"end": 29759,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 29731,
											"end": 29732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29728,
											"end": 29729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29723,
											"end": 29782,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 29612,
											"end": 29613,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29603,
											"end": 29610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29599,
											"end": 29614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29588,
											"end": 29614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29588,
											"end": 29614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29465,
											"end": 29540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29843,
											"end": 29844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29831,
											"end": 29839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29831,
											"end": 29844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 1,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29903,
											"end": 29906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29887,
											"end": 29900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29887,
											"end": 29906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29887,
											"end": 29906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29887,
											"end": 29906,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 29887,
											"end": 29906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 29917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27508,
											"end": 29917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29926,
											"end": 29986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 29955,
											"end": 29956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29959,
											"end": 29961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29963,
											"end": 29975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29977,
											"end": 29985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29926,
											"end": 29946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 29926,
											"end": 29986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 29926,
											"end": 29986,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 29926,
											"end": 29986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27153,
											"end": 29993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15136,
											"end": 15137,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15126,
											"end": 15134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15138,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15097,
											"end": 15121,
											"name": "PUSH",
											"source": 1,
											"value": "E1"
										},
										{
											"begin": 15093,
											"end": 15139,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 15155,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10838,
											"end": 10851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 11007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11138,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11085,
											"end": 11139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11325,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11362,
											"end": 11378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11610,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11665,
											"end": 11681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11658,
											"end": 11685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11825,
											"end": 11837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11978,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11758,
											"end": 12027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12104,
											"end": 12144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12234,
											"end": 12244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12231,
											"end": 12253,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12195,
											"end": 12229,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12192,
											"end": 12254,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12307,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12368,
											"end": 12445,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12493,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12631,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12641,
											"end": 12656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13172,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13278,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13272,
											"end": 13279,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13260,
											"end": 13265,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13252,
											"end": 13280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13480,
											"end": 13512,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13528,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13604,
											"end": 13638,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13642,
											"end": 13654,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 13766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13770,
											"end": 13782,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundTokenCannotBeTransferred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SoulboundTokenCannotBeTransferred()\":[{\"notice\":\"A Soulbound token cannot be transferred.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BuildGuildSoulbound.sol\":\"ERC721ASoulboundMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BuildGuildSoulbound.sol\":{\"keccak256\":\"0xe4f3aaad4d3836ea01b93ec8e071df9f3d2078e93b0778ff8cd2222bd13d19ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bfd9ee8d714cbdc973c349e0d67cca07a16e091a90bc799ae1e41d9a37710f4\",\"dweb:/ipfs/QmcGca1Yh66t3dfYRi1putfd82LS4bgdim5uKTVz5rkivj\"]},\"ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"ERC721ABurnable.sol\":{\"keccak256\":\"0x3823a9d57adbd2738b0cb951e94ab580b81d44dbe656ae9beb860f49096c37d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7431a703d51164c50dc3a892ea709ee5899fd14f14ced252a021356e737a5cb6\",\"dweb:/ipfs/QmWNroJN5zf87NxS3otbCoxXrenaNg4PpAMV4vYRNGr5NA\"]},\"ERC721ASoulbound.sol\":{\"keccak256\":\"0x7cb8afa17d6e243a02fad20da5250f6e7723e9ee6031bbdc8ce0f5549f1b1137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64927cdcfd620fe4146b20c55186fb66cadb8a82ff1bd40092c83977dfb655f\",\"dweb:/ipfs/QmVNVwjx37QbP4tMyNmngY1LzfVNSbowAwjJznBmsaJapU\"]},\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"IERC721ABurnable.sol\":{\"keccak256\":\"0x945768fdc93cf6d3b616a61c6eab8a72a60c6b4de59c21afab687cb9b0ecddca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3233120461564e7d516d7669caad69c360b055640e99bd4c3050ad691860ada\",\"dweb:/ipfs/QmYysPN4BN89pzfWNB3VNJBHLfvPhrCy5HwCK48KwVREup\"]},\"IERC721ASoulbound.sol\":{\"keccak256\":\"0x110c5784f5c4df2468242257df685eb33aaa6e3499335601e80e7d27cefe752e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137c38d45701ed5f68cde36bf4072061e43c3b65a68e14934abd5005e32bde9e\",\"dweb:/ipfs/QmdCrUiEKksagHsEjYXn9Z6mnPkEevn1DNvSdeUHC5aKoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 124,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 126,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 128,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)"
							},
							{
								"astId": 147,
								"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)54_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)54_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 53,
										"contract": "BuildGuildSoulbound.sol:ERC721ASoulboundMock",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SoulboundTokenCannotBeTransferred()": [
								{
									"notice": "A Soulbound token cannot be transferred."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_9\n    /* \"ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_25:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_27\n    /* \"#utility.yul\":137:186   */\n  tag_28\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":121:187   */\n  tag_30\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_32\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":262:374   */\ntag_31:\n    /* \"#utility.yul\":383:422   */\n  tag_34\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_36:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_39\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":531:653   */\ntag_38:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_41\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":933:1052   */\ntag_43:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_47\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1128:1245   */\ntag_46:\n    /* \"#utility.yul\":1269:1343   */\n  tag_49\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_36\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_51\n  tag_48\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1430:1547   */\ntag_50:\n    /* \"#utility.yul\":1571:1645   */\n  tag_52\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_36\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_30:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_56\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_55:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_29:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2022:2078   */\ntag_60:\n    /* \"#utility.yul\":2096:2125   */\n  tag_63\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_35:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_66:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_69:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_14:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_71:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_73\n  tag_74\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2741:2825   */\ntag_72:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_57:\n    /* \"#utility.yul\":2920:2947   */\n  tag_76\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_64\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_78\n  tag_62\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2993:3081   */\ntag_77:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_74:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_62:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_40:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_33:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_48:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_45:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_64:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC721A.sol\":9240:9244  bool */\n      0x00\n        /* \"ERC721A.sol\":9573:9583  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9558:9569  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"ERC721A.sol\":9649:9659  0x80ac58cd */\n      0x80ac58cd\n        /* \"ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9634:9645  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"ERC721A.sol\":9725:9735  0x5b5e139f */\n      0x5b5e139f\n        /* \"ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"ERC721A.sol\":9710:9721  interfaceId */\n      dup3\n        /* \"ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"ERC721A.sol\":9539:9735  return... */\n      swap1\n      pop\n        /* \"ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"ERC721A.sol\":10093:10106  string memory */\n      0x60\n        /* \"ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \"ERC721A.sol\":10118:10130  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"ERC721A.sol\":16436:16443  address */\n      0x00\n        /* \"ERC721A.sol\":16460:16476  _exists(tokenId) */\n      tag_100\n        /* \"ERC721A.sol\":16468:16475  tokenId */\n      dup3\n        /* \"ERC721A.sol\":16460:16467  _exists */\n      tag_101\n        /* \"ERC721A.sol\":16460:16476  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n        /* \"ERC721A.sol\":16537:16552  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":16553:16560  tokenId */\n      dup4\n        /* \"ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16537:16567  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":16530:16567  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"ERC721A.sol\":15900:15913  address owner */\n      0x00\n        /* \"ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      tag_104\n        /* \"ERC721A.sol\":15924:15931  tokenId */\n      dup3\n        /* \"ERC721A.sol\":15916:15923  ownerOf */\n      tag_57\n        /* \"ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"ERC721A.sol\":15900:15932  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":15970:15975  owner */\n      dup1\n        /* \"ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":15947:15966  _msgSenderERC721A() */\n      tag_105\n        /* \"ERC721A.sol\":15947:15964  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":15947:15966  _msgSenderERC721A() */\n      jump\t// in\n    tag_105:\n        /* \"ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_107\n      jumpi\n        /* \"ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"ERC721A.sol\":16011:16016  owner */\n      dup2\n        /* \"ERC721A.sol\":16018:16037  _msgSenderERC721A() */\n      tag_109\n        /* \"ERC721A.sol\":16018:16035  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":16018:16037  _msgSenderERC721A() */\n      jump\t// in\n    tag_109:\n        /* \"ERC721A.sol\":15994:16010  isApprovedForAll */\n      tag_87\n        /* \"ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_108:\n        /* \"ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n    tag_107:\n        /* \"ERC721A.sol\":16158:16160  to */\n      dup3\n        /* \"ERC721A.sol\":16125:16140  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":16141:16148  tokenId */\n      dup5\n        /* \"ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16125:16155  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"ERC721A.sol\":16125:16160  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":16195:16202  tokenId */\n      dup2\n        /* \"ERC721A.sol\":16191:16193  to */\n      dup4\n        /* \"ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":16184:16189  owner */\n      dup3\n        /* \"ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721A.sol\":15890:16210  {... */\n      pop\n        /* \"ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_112\n        /* \"ERC721A.sol\":6179:6192  _startTokenId */\n      tag_113\n        /* \"ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_112:\n        /* \"ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_50:\n        /* \"ERC721A.sol\":20040:20067  uint256 prevOwnershipPacked */\n      0x00\n        /* \"ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"ERC721A.sol\":20089:20096  tokenId */\n      dup3\n        /* \"ERC721A.sol\":20070:20088  _packedOwnershipOf */\n      tag_116\n        /* \"ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"ERC721A.sol\":20040:20097  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":20153:20157  from */\n      dup4\n        /* \"ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":20128:20147  prevOwnershipPacked */\n      dup2\n        /* \"ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"ERC721A.sol\":20166:20194  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"ERC721A.sol\":20206:20233  uint256 approvedAddressSlot */\n      0x00\n        /* \"ERC721A.sol\":20235:20258  address approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":20262:20297  _getApprovedSlotAndAddress(tokenId) */\n      tag_118\n        /* \"ERC721A.sol\":20289:20296  tokenId */\n      dup5\n        /* \"ERC721A.sol\":20262:20288  _getApprovedSlotAndAddress */\n      tag_119\n        /* \"ERC721A.sol\":20262:20297  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"ERC721A.sol\":20205:20297  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_120\n        /* \"ERC721A.sol\":20419:20434  approvedAddress */\n      dup2\n        /* \"ERC721A.sol\":20436:20440  from */\n      dup8\n        /* \"ERC721A.sol\":20442:20461  _msgSenderERC721A() */\n      tag_121\n        /* \"ERC721A.sol\":20442:20459  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":20442:20461  _msgSenderERC721A() */\n      jump\t// in\n    tag_121:\n        /* \"ERC721A.sol\":20394:20418  _isSenderApprovedOrOwner */\n      tag_122\n        /* \"ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_120:\n        /* \"ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_123\n      jumpi\n        /* \"ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"ERC721A.sol\":20498:20502  from */\n      dup7\n        /* \"ERC721A.sol\":20504:20523  _msgSenderERC721A() */\n      tag_125\n        /* \"ERC721A.sol\":20504:20521  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":20504:20523  _msgSenderERC721A() */\n      jump\t// in\n    tag_125:\n        /* \"ERC721A.sol\":20481:20497  isApprovedForAll */\n      tag_87\n        /* \"ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_124:\n        /* \"ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"ERC721A.sol\":20533:20568  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n        /* \"ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_123:\n        /* \"ERC721A.sol\":20597:20598  0 */\n      0x00\n        /* \"ERC721A.sol\":20583:20599  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":20583:20585  to */\n      dup6\n        /* \"ERC721A.sol\":20583:20599  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n      iszero\n      tag_127\n      jumpi\n        /* \"ERC721A.sol\":20608:20631  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"ERC721A.sol\":20642:20685  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_128\n        /* \"ERC721A.sol\":20664:20668  from */\n      dup7\n        /* \"ERC721A.sol\":20670:20672  to */\n      dup7\n        /* \"ERC721A.sol\":20674:20681  tokenId */\n      dup7\n        /* \"ERC721A.sol\":20683:20684  1 */\n      0x01\n        /* \"ERC721A.sol\":20642:20663  _beforeTokenTransfers */\n      tag_129\n        /* \"ERC721A.sol\":20642:20685  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_128:\n        /* \"ERC721A.sol\":20774:20789  approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":20771:20928  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"ERC721A.sol\":20912:20913  0 */\n      0x00\n        /* \"ERC721A.sol\":20891:20910  approvedAddressSlot */\n      dup3\n        /* \"ERC721A.sol\":20884:20914  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"ERC721A.sol\":20771:20928  if approvedAddress {... */\n    tag_130:\n        /* \"ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0x00\n        /* \"ERC721A.sol\":21319:21323  from */\n      dup8\n        /* \"ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":21298:21324  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21368:21386  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      0x00\n        /* \"ERC721A.sol\":21387:21389  to */\n      dup7\n        /* \"ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":21366:21390  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21683:21826  _packOwnershipData(... */\n      tag_131\n        /* \"ERC721A.sol\":21719:21721  to */\n      dup6\n        /* \"ERC721A.sol\":21767:21812  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_132\n        /* \"ERC721A.sol\":21782:21786  from */\n      dup9\n        /* \"ERC721A.sol\":21788:21790  to */\n      dup9\n        /* \"ERC721A.sol\":21792:21811  prevOwnershipPacked */\n      dup8\n        /* \"ERC721A.sol\":21767:21781  _nextExtraData */\n      tag_133\n        /* \"ERC721A.sol\":21767:21812  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_132:\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":21739:21812  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"ERC721A.sol\":21683:21701  _packOwnershipData */\n      tag_134\n        /* \"ERC721A.sol\":21683:21826  _packOwnershipData(... */\n      jump\t// in\n    tag_131:\n        /* \"ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":21672:21679  tokenId */\n      dup7\n        /* \"ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":21654:21826  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":21994:21995  0 */\n      0x00\n        /* \"ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":21943:21962  prevOwnershipPacked */\n      dup5\n        /* \"ERC721A.sol\":21943:21990  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"ERC721A.sol\":21943:21995  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"ERC721A.sol\":22015:22034  uint256 nextTokenId */\n      0x00\n        /* \"ERC721A.sol\":22047:22048  1 */\n      0x01\n        /* \"ERC721A.sol\":22037:22044  tokenId */\n      dup6\n        /* \"ERC721A.sol\":22037:22048  tokenId + 1 */\n      add\n        /* \"ERC721A.sol\":22015:22048  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"ERC721A.sol\":22202:22203  0 */\n      0x00\n        /* \"ERC721A.sol\":22168:22185  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":22186:22197  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":22168:22203  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"ERC721A.sol\":22304:22317  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":22289:22300  nextTokenId */\n      dup2\n        /* \"ERC721A.sol\":22289:22317  nextTokenId != _currentIndex */\n      eq\n        /* \"ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"ERC721A.sol\":22482:22501  prevOwnershipPacked */\n      dup4\n        /* \"ERC721A.sol\":22449:22466  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"ERC721A.sol\":22467:22478  nextTokenId */\n      dup4\n        /* \"ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":22449:22501  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_136:\n        /* \"ERC721A.sol\":21997:22556  {... */\n      pop\n        /* \"ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"ERC721A.sol\":22600:22607  tokenId */\n      dup4\n        /* \"ERC721A.sol\":22596:22598  to */\n      dup6\n        /* \"ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":22590:22594  from */\n      dup8\n        /* \"ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC721A.sol\":22618:22660  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_138\n        /* \"ERC721A.sol\":22639:22643  from */\n      dup7\n        /* \"ERC721A.sol\":22645:22647  to */\n      dup7\n        /* \"ERC721A.sol\":22649:22656  tokenId */\n      dup7\n        /* \"ERC721A.sol\":22658:22659  1 */\n      0x01\n        /* \"ERC721A.sol\":22618:22638  _afterTokenTransfers */\n      tag_139\n        /* \"ERC721A.sol\":22618:22660  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_138:\n        /* \"ERC721A.sol\":20030:22667  {... */\n      pop\n      pop\n      pop\n        /* \"ERC721A.sol\":19903:22667  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_53:\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"ERC721A.sol\":22916:22920  from */\n      dup4\n        /* \"ERC721A.sol\":22922:22924  to */\n      dup4\n        /* \"ERC721A.sol\":22926:22933  tokenId */\n      dup4\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC721A.sol\":22899:22915  safeTransferFrom */\n      tag_77\n        /* \"ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"ERC721A.sol\":11463:11470  address */\n      0x00\n        /* \"ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_143\n        /* \"ERC721A.sol\":11524:11531  tokenId */\n      dup3\n        /* \"ERC721A.sol\":11505:11523  _packedOwnershipOf */\n      tag_116\n        /* \"ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"ERC721A.sol\":11482:11534  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      iszero\n      tag_145\n      jumpi\n        /* \"ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n        /* \"ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"ERC721A.sol\":7213:7231  _packedAddressData */\n      0x05\n        /* \"ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0x00\n        /* \"ERC721A.sol\":7232:7237  owner */\n      dup5\n        /* \"ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":7213:7268  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"ERC721A.sol\":7206:7268  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"ERC721A.sol\":10264:10277  string memory */\n      0x60\n        /* \"ERC721A.sol\":10296:10303  _symbol */\n      0x03\n        /* \"ERC721A.sol\":10289:10303  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_94\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_94\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"ERC721A.sol\":17047:17055  approved */\n      dup1\n        /* \"ERC721A.sol\":16995:17013  _operatorApprovals */\n      0x07\n        /* \"ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"ERC721A.sol\":17014:17033  _msgSenderERC721A() */\n      tag_153\n        /* \"ERC721A.sol\":17014:17031  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":17014:17033  _msgSenderERC721A() */\n      jump\t// in\n    tag_153:\n        /* \"ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"ERC721A.sol\":17035:17043  operator */\n      dup5\n        /* \"ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC721A.sol\":16995:17055  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC721A.sol\":17106:17114  operator */\n      dup2\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC721A.sol\":17085:17104  _msgSenderERC721A() */\n      tag_154\n        /* \"ERC721A.sol\":17085:17102  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":17085:17104  _msgSenderERC721A() */\n      jump\t// in\n    tag_154:\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC721A.sol\":17116:17124  approved */\n      dup4\n        /* \"ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_77:\n        /* \"ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"ERC721A.sol\":23708:23712  from */\n      dup5\n        /* \"ERC721A.sol\":23714:23716  to */\n      dup5\n        /* \"ERC721A.sol\":23718:23725  tokenId */\n      dup5\n        /* \"ERC721A.sol\":23695:23707  transferFrom */\n      tag_50\n        /* \"ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"ERC721A.sol\":23758:23759  0 */\n      0x00\n        /* \"ERC721A.sol\":23740:23742  to */\n      dup4\n        /* \"ERC721A.sol\":23740:23754  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC721A.sol\":23740:23759  to.code.length != 0 */\n      eq\n        /* \"ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      tag_158\n      jumpi\n        /* \"ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"ERC721A.sol\":23809:23813  from */\n      dup5\n        /* \"ERC721A.sol\":23815:23817  to */\n      dup5\n        /* \"ERC721A.sol\":23819:23826  tokenId */\n      dup5\n        /* \"ERC721A.sol\":23828:23833  _data */\n      dup5\n        /* \"ERC721A.sol\":23778:23808  _checkContractOnERC721Received */\n      tag_160\n        /* \"ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"ERC721A.sol\":23861:23901  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n    tag_158:\n        /* \"ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"ERC721A.sol\":10484:10497  string memory */\n      0x60\n        /* \"ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_163\n        /* \"ERC721A.sol\":10522:10529  tokenId */\n      dup3\n        /* \"ERC721A.sol\":10514:10521  _exists */\n      tag_101\n        /* \"ERC721A.sol\":10514:10530  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"ERC721A.sol\":10579:10600  string memory baseURI */\n      0x00\n        /* \"ERC721A.sol\":10603:10613  _baseURI() */\n      tag_165\n        /* \"ERC721A.sol\":10603:10611  _baseURI */\n      tag_166\n        /* \"ERC721A.sol\":10603:10613  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \"ERC721A.sol\":10579:10613  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"ERC721A.sol\":10655:10656  0 */\n      0x00\n        /* \"ERC721A.sol\":10636:10643  baseURI */\n      dup2\n        /* \"ERC721A.sol\":10630:10651  bytes(baseURI).length */\n      mload\n        /* \"ERC721A.sol\":10630:10656  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"ERC721A.sol\":10683:10690  baseURI */\n      dup1\n        /* \"ERC721A.sol\":10692:10710  _toString(tokenId) */\n      tag_169\n        /* \"ERC721A.sol\":10702:10709  tokenId */\n      dup5\n        /* \"ERC721A.sol\":10692:10701  _toString */\n      tag_170\n        /* \"ERC721A.sol\":10692:10710  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"ERC721A.sol\":10666:10711  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"ERC721A.sol\":10623:10717  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"ERC721A.sol\":17379:17383  bool */\n      0x00\n        /* \"ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \"ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC721A.sol\":17421:17426  owner */\n      dup5\n        /* \"ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC721A.sol\":17428:17436  operator */\n      dup4\n        /* \"ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC721A.sol\":17395:17437  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"ERC721A.sol\":17758:17762  bool */\n      0x00\n        /* \"ERC721A.sol\":17812:17819  tokenId */\n      dup2\n        /* \"ERC721A.sol\":17793:17808  _startTokenId() */\n      tag_175\n        /* \"ERC721A.sol\":17793:17806  _startTokenId */\n      tag_113\n        /* \"ERC721A.sol\":17793:17808  _startTokenId() */\n      jump\t// in\n    tag_175:\n        /* \"ERC721A.sol\":17793:17819  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"ERC721A.sol\":17793:17858  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"ERC721A.sol\":17845:17858  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":17835:17842  tokenId */\n      dup3\n        /* \"ERC721A.sol\":17835:17858  tokenId < _currentIndex */\n      lt\n        /* \"ERC721A.sol\":17793:17858  _startTokenId() <= tokenId &&... */\n    tag_176:\n        /* \"ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n        /* \"ERC721A.sol\":17943:17944  0 */\n      0x00\n        /* \"ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":17895:17912  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":17913:17920  tokenId */\n      dup6\n        /* \"ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":17895:17939  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"ERC721A.sol\":17895:17944  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n    tag_177:\n        /* \"ERC721A.sol\":17774:17944  return... */\n      swap1\n      pop\n        /* \"ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":39437:39540  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"ERC721A.sol\":39497:39504  address */\n      0x00\n        /* \"ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"ERC721A.sol\":39516:39533  return msg.sender */\n      swap1\n      pop\n        /* \"ERC721A.sol\":39437:39540  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_113:\n        /* \"ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"ERC721A.sol\":12582:12589  uint256 */\n      0x00\n        /* \"ERC721A.sol\":12601:12613  uint256 curr */\n      dup1\n        /* \"ERC721A.sol\":12616:12623  tokenId */\n      dup3\n        /* \"ERC721A.sol\":12601:12623  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"ERC721A.sol\":12681:12685  curr */\n      dup1\n        /* \"ERC721A.sol\":12662:12677  _startTokenId() */\n      tag_181\n        /* \"ERC721A.sol\":12662:12675  _startTokenId */\n      tag_113\n        /* \"ERC721A.sol\":12662:12677  _startTokenId() */\n      jump\t// in\n    tag_181:\n        /* \"ERC721A.sol\":12662:12685  _startTokenId() <= curr */\n      gt\n        /* \"ERC721A.sol\":12658:13700  if (_startTokenId() <= curr)... */\n      tag_182\n      jumpi\n        /* \"ERC721A.sol\":12714:12727  _currentIndex */\n      sload(0x00)\n        /* \"ERC721A.sol\":12707:12711  curr */\n      dup2\n        /* \"ERC721A.sol\":12707:12727  curr < _currentIndex */\n      lt\n        /* \"ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"ERC721A.sol\":12751:12765  uint256 packed */\n      0x00\n        /* \"ERC721A.sol\":12768:12785  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      0x00\n        /* \"ERC721A.sol\":12786:12790  curr */\n      dup4\n        /* \"ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":12751:12791  uint256 packed = _packedOwnerships[curr] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":12883:12884  0 */\n      0x00\n        /* \"ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"ERC721A.sol\":12855:12861  packed */\n      dup3\n        /* \"ERC721A.sol\":12855:12879  packed & _BITMASK_BURNED */\n      and\n        /* \"ERC721A.sol\":12855:12884  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n    tag_185:\n        /* \"ERC721A.sol\":13527:13528  0 */\n      0x00\n        /* \"ERC721A.sol\":13517:13523  packed */\n      dup2\n        /* \"ERC721A.sol\":13517:13528  packed == 0 */\n      eq\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"ERC721A.sol\":13569:13586  _packedOwnerships */\n      0x04\n        /* \"ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x00\n        /* \"ERC721A.sol\":13587:13593  --curr */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC721A.sol\":13560:13594  packed = _packedOwnerships[--curr] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      jump(tag_185)\n    tag_186:\n        /* \"ERC721A.sol\":13653:13659  packed */\n      dup1\n        /* \"ERC721A.sol\":13646:13659  return packed */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_180)\n        /* \"ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"ERC721A.sol\":12729:13700  {... */\n      pop\n        /* \"ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"ERC721A.sol\":12658:13700  if (_startTokenId() <= curr)... */\n    tag_182:\n        /* \"ERC721A.sol\":13726:13757  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_180:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":18828:19302  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_119:\n        /* \"ERC721A.sol\":18927:18954  uint256 approvedAddressSlot */\n      0x00\n        /* \"ERC721A.sol\":18956:18979  address approvedAddress */\n      dup1\n        /* \"ERC721A.sol\":18995:19033  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \"ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      0x00\n        /* \"ERC721A.sol\":19052:19059  tokenId */\n      dup6\n        /* \"ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC721A.sol\":18995:19060  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"ERC721A.sol\":19210:19228  tokenApproval.slot */\n      dup1\n        /* \"ERC721A.sol\":19187:19228  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"ERC721A.sol\":19266:19285  approvedAddressSlot */\n      dup3\n        /* \"ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      sload\n        /* \"ERC721A.sol\":19241:19286  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":19173:19296  {... */\n      pop\n        /* \"ERC721A.sol\":18828:19302  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"ERC721A.sol\":18074:18720  function _isSenderApprovedOrOwner(... */\n    tag_122:\n        /* \"ERC721A.sol\":18219:18230  bool result */\n      0x00\n        /* \"ERC721A.sol\":18381:18397  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":18374:18379  owner */\n      dup4\n        /* \"ERC721A.sol\":18370:18398  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":18361:18398  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"ERC721A.sol\":18539:18555  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":18528:18537  msgSender */\n      dup3\n        /* \"ERC721A.sol\":18524:18556  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":18511:18556  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":18687:18702  approvedAddress */\n      dup4\n        /* \"ERC721A.sol\":18676:18685  msgSender */\n      dup3\n        /* \"ERC721A.sol\":18673:18703  eq(msgSender, approvedAddress) */\n      eq\n        /* \"ERC721A.sol\":18665:18670  owner */\n      dup4\n        /* \"ERC721A.sol\":18654:18663  msgSender */\n      dup4\n        /* \"ERC721A.sol\":18651:18671  eq(msgSender, owner) */\n      eq\n        /* \"ERC721A.sol\":18648:18704  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"ERC721A.sol\":18638:18704  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":18074:18720  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":24566:24720  function _beforeTokenTransfers(... */\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":38764:39068  function _nextExtraData(... */\n    tag_133:\n        /* \"ERC721A.sol\":38895:38902  uint256 */\n      0x00\n        /* \"ERC721A.sol\":38914:38930  uint24 extraData */\n      dup1\n        /* \"ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"ERC721A.sol\":38940:38959  prevOwnershipPacked */\n      dup4\n        /* \"ERC721A.sol\":38940:38981  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"ERC721A.sol\":38914:38982  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"ERC721A.sol\":39007:39038  _extraData(from, to, extraData) */\n      tag_191\n        /* \"ERC721A.sol\":39018:39022  from */\n      dup7\n        /* \"ERC721A.sol\":39024:39026  to */\n      dup7\n        /* \"ERC721A.sol\":39028:39037  extraData */\n      dup5\n        /* \"ERC721A.sol\":39007:39017  _extraData */\n      tag_192\n        /* \"ERC721A.sol\":39007:39038  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_191:\n        /* \"ERC721A.sol\":38999:39039  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"ERC721A.sol\":38999:39061  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"ERC721A.sol\":38992:39061  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":38764:39068  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":14297:14740  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_134:\n        /* \"ERC721A.sol\":14377:14391  uint256 result */\n      0x00\n        /* \"ERC721A.sol\":14542:14558  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC721A.sol\":14535:14540  owner */\n      dup4\n        /* \"ERC721A.sol\":14531:14559  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"ERC721A.sol\":14522:14559  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"ERC721A.sol\":14717:14722  flags */\n      dup2\n        /* \"ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"ERC721A.sol\":14671:14723  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"ERC721A.sol\":14664:14669  owner */\n      dup4\n        /* \"ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"ERC721A.sol\":14651:14724  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":14297:14740  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":25367:25520  function _afterTokenTransfers(... */\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"ERC721A.sol\":26106:26110  bool */\n      0x00\n        /* \"ERC721A.sol\":26151:26153  to */\n      dup4\n        /* \"ERC721A.sol\":26126:26171  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"ERC721A.sol\":26172:26191  _msgSenderERC721A() */\n      tag_196\n        /* \"ERC721A.sol\":26172:26189  _msgSenderERC721A */\n      tag_106\n        /* \"ERC721A.sol\":26172:26191  _msgSenderERC721A() */\n      jump\t// in\n    tag_196:\n        /* \"ERC721A.sol\":26193:26197  from */\n      dup8\n        /* \"ERC721A.sol\":26199:26206  tokenId */\n      dup7\n        /* \"ERC721A.sol\":26208:26213  _data */\n      dup7\n        /* \"ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      0x01\n    tag_200:\n        /* \"ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_203\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_207)\n    tag_208:\n      0x60\n      swap2\n      pop\n    tag_207:\n      pop\n        /* \"ERC721A.sol\":26421:26422  0 */\n      0x00\n        /* \"ERC721A.sol\":26404:26410  reason */\n      dup2\n        /* \"ERC721A.sol\":26404:26417  reason.length */\n      mload\n        /* \"ERC721A.sol\":26404:26422  reason.length == 0 */\n      eq\n        /* \"ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n    tag_209:\n        /* \"ERC721A.sol\":26589:26595  reason */\n      dup1\n        /* \"ERC721A.sol\":26583:26596  mload(reason) */\n      mload\n        /* \"ERC721A.sol\":26574:26580  reason */\n      dup2\n        /* \"ERC721A.sol\":26570:26572  32 */\n      0x20\n        /* \"ERC721A.sol\":26566:26581  add(32, reason) */\n      add\n        /* \"ERC721A.sol\":26559:26597  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_203:\n        /* \"ERC721A.sol\":26292:26346  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC721A.sol\":26282:26288  retval */\n      dup2\n        /* \"ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC721A.sol\":26275:26346  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":10969:11061  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_166:\n        /* \"ERC721A.sol\":11020:11033  string memory */\n      0x60\n        /* \"ERC721A.sol\":11045:11054  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"ERC721A.sol\":10969:11061  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"ERC721A.sol\":39702:39719  string memory str */\n      0x60\n        /* \"ERC721A.sol\":40130:40134  0xa0 */\n      0xa0\n        /* \"ERC721A.sol\":40123:40127  0x40 */\n      0x40\n        /* \"ERC721A.sol\":40117:40128  mload(0x40) */\n      mload\n        /* \"ERC721A.sol\":40113:40135  add(mload(0x40), 0xa0) */\n      add\n        /* \"ERC721A.sol\":40220:40221  m */\n      dup1\n        /* \"ERC721A.sol\":40214:40218  0x40 */\n      0x40\n        /* \"ERC721A.sol\":40207:40222  mstore(0x40, m) */\n      mstore\n        /* \"ERC721A.sol\":40293:40297  0x20 */\n      0x20\n        /* \"ERC721A.sol\":40290:40291  m */\n      dup2\n        /* \"ERC721A.sol\":40286:40298  sub(m, 0x20) */\n      sub\n        /* \"ERC721A.sol\":40279:40298  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"ERC721A.sol\":40373:40374  0 */\n      0x00\n        /* \"ERC721A.sol\":40368:40371  str */\n      dup3\n        /* \"ERC721A.sol\":40361:40375  mstore(str, 0) */\n      mstore\n        /* \"ERC721A.sol\":40474:40477  str */\n      dup2\n        /* \"ERC721A.sol\":40708:40713  value */\n      dup4\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n    tag_214:\n        /* \"ERC721A.sol\":40716:40717  1 */\n      0x01\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"ERC721A.sol\":40755:40756  1 */\n      0x01\n        /* \"ERC721A.sol\":40750:40753  str */\n      dup5\n        /* \"ERC721A.sol\":40746:40757  sub(str, 1) */\n      sub\n        /* \"ERC721A.sol\":40739:40757  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"ERC721A.sol\":40923:40925  10 */\n      0x0a\n        /* \"ERC721A.sol\":40917:40921  temp */\n      dup2\n        /* \"ERC721A.sol\":40913:40926  mod(temp, 10) */\n      mod\n        /* \"ERC721A.sol\":40909:40911  48 */\n      0x30\n        /* \"ERC721A.sol\":40905:40927  add(48, mod(temp, 10)) */\n      add\n        /* \"ERC721A.sol\":40900:40903  str */\n      dup5\n        /* \"ERC721A.sol\":40892:40928  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"ERC721A.sol\":41015:41017  10 */\n      0x0a\n        /* \"ERC721A.sol\":41009:41013  temp */\n      dup2\n        /* \"ERC721A.sol\":41005:41018  div(temp, 10) */\n      div\n        /* \"ERC721A.sol\":40997:41018  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"ERC721A.sol\":41080:41084  temp */\n      dup1\n        /* \"ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      tag_217\n      jumpi\n        /* \"ERC721A.sol\":41088:41093  break */\n      jump(tag_216)\n        /* \"ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n    tag_217:\n        /* \"ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      jump(tag_214)\n    tag_216:\n        /* \"ERC721A.sol\":40694:40715  { let temp := value } */\n      pop\n        /* \"ERC721A.sol\":41146:41149  str */\n      dup3\n        /* \"ERC721A.sol\":41141:41144  end */\n      dup2\n        /* \"ERC721A.sol\":41137:41150  sub(end, str) */\n      sub\n        /* \"ERC721A.sol\":41259:41263  0x20 */\n      0x20\n        /* \"ERC721A.sol\":41254:41257  str */\n      dup5\n        /* \"ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      sub\n        /* \"ERC721A.sol\":41243:41264  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"ERC721A.sol\":41322:41328  length */\n      dup1\n        /* \"ERC721A.sol\":41317:41320  str */\n      dup5\n        /* \"ERC721A.sol\":41310:41329  mstore(str, length) */\n      mstore\n        /* \"ERC721A.sol\":39740:41339  {... */\n      pop\n      pop\n      pop\n        /* \"ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC721A.sol\":38475:38618  function _extraData(... */\n    tag_192:\n        /* \"ERC721A.sol\":38608:38614  uint24 */\n      0x00\n        /* \"ERC721A.sol\":38475:38618  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_220:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_222\n        /* \"#utility.yul\":125:173   */\n      tag_223\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":109:174   */\n      tag_225\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":249:361   */\n    tag_226:\n        /* \"#utility.yul\":370:411   */\n      tag_229\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_231:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_233\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_235:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_237\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_239:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_241\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_243:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_245\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_242\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_246:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1081:1203   */\n    tag_248:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_251\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_220\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_252:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_254\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_62:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1575:1694   */\n    tag_257:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_260\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_231\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_86:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_263\n      tag_259\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1927:2046   */\n    tag_262:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_264\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_231\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_265\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_231\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_49:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_268\n      tag_259\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2424:2543   */\n    tag_267:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_269\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_231\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_270\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_231\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_271\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_252\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_76:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_274\n      tag_259\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3075:3195   */\n    tag_273:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_275\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_231\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_276\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_231\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_277\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_252\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_279\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3662:3779   */\n    tag_278:\n        /* \"#utility.yul\":3803:3865   */\n      tag_281\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_246\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_72:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_284\n      tag_259\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3978:4097   */\n    tag_283:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_285\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_286\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_235\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_40:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_289\n      tag_259\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4455:4574   */\n    tag_288:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_290\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_231\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_291\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_252\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_22:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_294\n      tag_259\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4917:5036   */\n    tag_293:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_295\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_239\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_202:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_298\n      tag_259\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5261:5380   */\n    tag_297:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_299\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_243\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_34:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_302\n      tag_259\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5606:5725   */\n    tag_301:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_303\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_252\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_304:\n        /* \"#utility.yul\":5952:5976   */\n      tag_306\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_308:\n        /* \"#utility.yul\":6070:6091   */\n      tag_310\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_312:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_314\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6272:6342   */\n      tag_316\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_318\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6428:6457   */\n      tag_320\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_322:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_324\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6641:6712   */\n      tag_326\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_328\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_319\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6798:6827   */\n      tag_329\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_321\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_330:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_332\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_325\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7029:7118   */\n      tag_333\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_335\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_319\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_336:\n        /* \"#utility.yul\":7310:7334   */\n      tag_338\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_172:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_341\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_330\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_342\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_330\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_37:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_344\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_304\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_198:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_346\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_304\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8344:8416   */\n      tag_347\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_304\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8426:8498   */\n      tag_348\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_336\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_349\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_312\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_25:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_351\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_308\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_30:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_353\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_322\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_46:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_355\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_336\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_225:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_357\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_359\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_358:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_224:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9778:9834   */\n    tag_363:\n        /* \"#utility.yul\":9852:9881   */\n      tag_366\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_321\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_315:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_325:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_317:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_327:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_334:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10762   */\n    tag_307:\n        /* \"#utility.yul\":10703:10710   */\n      0x00\n        /* \"#utility.yul\":10732:10756   */\n      tag_373\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10732:10756   */\n      tag_374\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10721:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10768:10858   */\n    tag_311:\n        /* \"#utility.yul\":10802:10809   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10838:10851   */\n      iszero\n        /* \"#utility.yul\":10831:10852   */\n      iszero\n        /* \"#utility.yul\":10820:10852   */\n      swap1\n      pop\n        /* \"#utility.yul\":10768:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11013   */\n    tag_376:\n        /* \"#utility.yul\":10900:10907   */\n      0x00\n        /* \"#utility.yul\":10940:11006   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10929:11007   */\n      and\n        /* \"#utility.yul\":10918:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11019:11145   */\n    tag_374:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11138   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11139   */\n      and\n        /* \"#utility.yul\":11074:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11019:11145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11151:11228   */\n    tag_339:\n        /* \"#utility.yul\":11188:11195   */\n      0x00\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11206:11222   */\n      swap1\n      pop\n        /* \"#utility.yul\":11151:11228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11234:11388   */\n    tag_230:\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11313:11316   */\n      dup2\n        /* \"#utility.yul\":11308:11311   */\n      dup4\n        /* \"#utility.yul\":11295:11325   */\n      calldatacopy\n        /* \"#utility.yul\":11380:11381   */\n      0x00\n        /* \"#utility.yul\":11371:11377   */\n      dup4\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11362:11378   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      mstore\n        /* \"#utility.yul\":11234:11388   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11701   */\n    tag_319:\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11472:11585   */\n    tag_382:\n        /* \"#utility.yul\":11486:11492   */\n      dup4\n        /* \"#utility.yul\":11483:11484   */\n      dup2\n        /* \"#utility.yul\":11480:11493   */\n      lt\n        /* \"#utility.yul\":11472:11585   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":11571:11572   */\n      dup1\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11573   */\n      add\n        /* \"#utility.yul\":11556:11574   */\n      mload\n        /* \"#utility.yul\":11552:11553   */\n      dup2\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11554   */\n      add\n        /* \"#utility.yul\":11536:11575   */\n      mstore\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11505:11506   */\n      dup2\n        /* \"#utility.yul\":11501:11511   */\n      add\n        /* \"#utility.yul\":11496:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11585   */\n      jump(tag_382)\n    tag_384:\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11600:11601   */\n      dup2\n        /* \"#utility.yul\":11597:11610   */\n      gt\n        /* \"#utility.yul\":11594:11695   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11674:11680   */\n      dup5\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11681   */\n      add\n        /* \"#utility.yul\":11658:11685   */\n      mstore\n        /* \"#utility.yul\":11594:11695   */\n    tag_385:\n        /* \"#utility.yul\":11443:11701   */\n      pop\n        /* \"#utility.yul\":11394:11701   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:12027   */\n    tag_94:\n        /* \"#utility.yul\":11751:11757   */\n      0x00\n        /* \"#utility.yul\":11788:11789   */\n      0x02\n        /* \"#utility.yul\":11782:11786   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      div\n        /* \"#utility.yul\":11768:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11836   */\n      0x01\n        /* \"#utility.yul\":11829:11833   */\n      dup3\n        /* \"#utility.yul\":11825:11837   */\n      and\n        /* \"#utility.yul\":11856:11874   */\n      dup1\n        /* \"#utility.yul\":11846:11927   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":11912:11916   */\n      0x7f\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      and\n        /* \"#utility.yul\":11890:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11846:11927   */\n    tag_387:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      lt\n        /* \"#utility.yul\":11943:11961   */\n      dup2\n        /* \"#utility.yul\":11940:11978   */\n      eq\n        /* \"#utility.yul\":11937:12021   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_389\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11937:12021   */\n    tag_388:\n        /* \"#utility.yul\":11758:12027   */\n      pop\n        /* \"#utility.yul\":11707:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12314   */\n    tag_360:\n        /* \"#utility.yul\":12116:12143   */\n      tag_392\n        /* \"#utility.yul\":12138:12142   */\n      dup3\n        /* \"#utility.yul\":12116:12143   */\n      tag_321\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":12108:12114   */\n      dup2\n        /* \"#utility.yul\":12104:12144   */\n      add\n        /* \"#utility.yul\":12246:12252   */\n      dup2\n        /* \"#utility.yul\":12234:12244   */\n      dup2\n        /* \"#utility.yul\":12231:12253   */\n      lt\n        /* \"#utility.yul\":12210:12228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12208   */\n      dup3\n        /* \"#utility.yul\":12195:12229   */\n      gt\n        /* \"#utility.yul\":12192:12254   */\n      or\n        /* \"#utility.yul\":12189:12277   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":12257:12275   */\n      tag_394\n      tag_365\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12189:12277   */\n    tag_393:\n        /* \"#utility.yul\":12297:12307   */\n      dup1\n        /* \"#utility.yul\":12293:12295   */\n      0x40\n        /* \"#utility.yul\":12286:12308   */\n      mstore\n        /* \"#utility.yul\":12076:12314   */\n      pop\n        /* \"#utility.yul\":12033:12314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12500   */\n    tag_390:\n        /* \"#utility.yul\":12368:12445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12446   */\n      mstore\n        /* \"#utility.yul\":12465:12469   */\n      0x22\n        /* \"#utility.yul\":12462:12463   */\n      0x04\n        /* \"#utility.yul\":12455:12470   */\n      mstore\n        /* \"#utility.yul\":12489:12493   */\n      0x24\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12494   */\n      revert\n        /* \"#utility.yul\":12506:12686   */\n    tag_365:\n        /* \"#utility.yul\":12554:12631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12544:12632   */\n      mstore\n        /* \"#utility.yul\":12651:12655   */\n      0x41\n        /* \"#utility.yul\":12648:12649   */\n      0x04\n        /* \"#utility.yul\":12641:12656   */\n      mstore\n        /* \"#utility.yul\":12675:12679   */\n      0x24\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12665:12680   */\n      revert\n        /* \"#utility.yul\":12692:12809   */\n    tag_250:\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12798:12799   */\n      dup1\n        /* \"#utility.yul\":12791:12803   */\n      revert\n        /* \"#utility.yul\":12815:12932   */\n    tag_228:\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12921:12922   */\n      dup1\n        /* \"#utility.yul\":12914:12926   */\n      revert\n        /* \"#utility.yul\":12938:13055   */\n    tag_280:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13178   */\n    tag_259:\n        /* \"#utility.yul\":13170:13171   */\n      0x00\n        /* \"#utility.yul\":13167:13168   */\n      dup1\n        /* \"#utility.yul\":13160:13172   */\n      revert\n        /* \"#utility.yul\":13184:13286   */\n    tag_321:\n        /* \"#utility.yul\":13225:13231   */\n      0x00\n        /* \"#utility.yul\":13276:13278   */\n      0x1f\n        /* \"#utility.yul\":13272:13279   */\n      not\n        /* \"#utility.yul\":13267:13269   */\n      0x1f\n        /* \"#utility.yul\":13260:13265   */\n      dup4\n        /* \"#utility.yul\":13256:13270   */\n      add\n        /* \"#utility.yul\":13252:13280   */\n      and\n        /* \"#utility.yul\":13242:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13414   */\n    tag_234:\n        /* \"#utility.yul\":13365:13389   */\n      tag_403\n        /* \"#utility.yul\":13383:13388   */\n      dup2\n        /* \"#utility.yul\":13365:13389   */\n      tag_307\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13390   */\n      eq\n        /* \"#utility.yul\":13345:13408   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13401:13402   */\n      dup1\n        /* \"#utility.yul\":13394:13406   */\n      revert\n        /* \"#utility.yul\":13345:13408   */\n    tag_404:\n        /* \"#utility.yul\":13292:13414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13420:13536   */\n    tag_238:\n        /* \"#utility.yul\":13490:13511   */\n      tag_406\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13490:13511   */\n      tag_311\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13483:13488   */\n      dup2\n        /* \"#utility.yul\":13480:13512   */\n      eq\n        /* \"#utility.yul\":13470:13530   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13523:13524   */\n      dup1\n        /* \"#utility.yul\":13516:13528   */\n      revert\n        /* \"#utility.yul\":13470:13530   */\n    tag_407:\n        /* \"#utility.yul\":13420:13536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13662   */\n    tag_242:\n        /* \"#utility.yul\":13614:13637   */\n      tag_409\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13614:13637   */\n      tag_376\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13607:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13638   */\n      eq\n        /* \"#utility.yul\":13594:13656   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13649:13650   */\n      dup1\n        /* \"#utility.yul\":13642:13654   */\n      revert\n        /* \"#utility.yul\":13594:13656   */\n    tag_410:\n        /* \"#utility.yul\":13542:13662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13668:13790   */\n    tag_255:\n        /* \"#utility.yul\":13741:13765   */\n      tag_412\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13741:13765   */\n      tag_339\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13734:13739   */\n      dup2\n        /* \"#utility.yul\":13731:13766   */\n      eq\n        /* \"#utility.yul\":13721:13784   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13770:13782   */\n      revert\n        /* \"#utility.yul\":13721:13784   */\n    tag_413:\n        /* \"#utility.yul\":13668:13790   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be5be40d4ffd0d83b0603235380e566fc42f57a3aa0f4fa69312b666ca93c12d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_177": {
									"entryPoint": 135,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:7"
															},
															"nodeType": "YulIf",
															"src": "262:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:7",
														"type": ""
													}
												],
												"src": "7:421:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:7"
															},
															"nodeType": "YulIf",
															"src": "531:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:7",
														"type": ""
													}
												],
												"src": "448:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:7"
															},
															"nodeType": "YulIf",
															"src": "933:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:7",
														"type": ""
													}
												],
												"src": "809:853:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:7",
														"type": ""
													}
												],
												"src": "1668:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:7",
														"type": ""
													}
												],
												"src": "1803:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:7"
															},
															"nodeType": "YulIf",
															"src": "2022:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:7",
														"type": ""
													}
												],
												"src": "1884:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:7",
																"statements": []
															},
															"src": "2276:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:7"
															},
															"nodeType": "YulIf",
															"src": "2398:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:7",
														"type": ""
													}
												],
												"src": "2198:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:7"
															},
															"nodeType": "YulIf",
															"src": "2650:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:7"
															},
															"nodeType": "YulIf",
															"src": "2741:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:7",
														"type": ""
													}
												],
												"src": "2511:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:7"
															},
															"nodeType": "YulIf",
															"src": "2993:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:7",
														"type": ""
													}
												],
												"src": "2837:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													}
												],
												"src": "3988:102:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D08 CODESIZE SUB DUP1 PUSH3 0x1D08 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1BA JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x2D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x153 PUSH3 0x14D DUP5 PUSH3 0x268 JUMP JUMPDEST PUSH3 0x23F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x172 JUMPI PUSH3 0x171 PUSH3 0x3A3 JUMP JUMPDEST JUMPDEST PUSH3 0x17F DUP5 DUP3 DUP6 PUSH3 0x29E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x39E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D3 PUSH3 0x3AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x203 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x235 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B PUSH3 0x25E JUMP JUMPDEST SWAP1 POP PUSH3 0x259 DUP3 DUP3 PUSH3 0x30A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x286 JUMPI PUSH3 0x285 PUSH3 0x36F JUMP JUMPDEST JUMPDEST PUSH3 0x291 DUP3 PUSH3 0x3B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x304 JUMPI PUSH3 0x303 PUSH3 0x340 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x315 DUP3 PUSH3 0x3B2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x337 JUMPI PUSH3 0x336 PUSH3 0x36F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1935 DUP1 PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BC DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x895 DUP6 PUSH2 0x871 DUP9 DUP9 DUP8 PUSH2 0xF66 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x91A JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x985 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 DUP3 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA87 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB17 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC4 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC20 DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC82 JUMPI PUSH2 0xC4B DUP5 DUP5 DUP5 DUP5 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC93 DUP3 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD3 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1F JUMP JUMPDEST DUP1 PUSH2 0xCFE DUP5 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0F SWAP3 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC6 PUSH2 0xE22 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE13 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE36 PUSH2 0xE22 JUMP JUMPDEST GT PUSH2 0xEBE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xEBB JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE86 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEF0 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF7D DUP7 DUP7 DUP5 PUSH2 0x118F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFE5 PUSH2 0xE1A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1007 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1052 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10CC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x117A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1175 JUMPI PUSH2 0x117A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AB PUSH2 0x11A6 DUP5 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C6 PUSH2 0x1883 JUMP JUMPDEST JUMPDEST PUSH2 0x11D2 DUP5 DUP3 DUP6 PUSH2 0x177B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E9 DUP2 PUSH2 0x18A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FE DUP2 PUSH2 0x18BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1213 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1228 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1253 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126B DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP5 DUP3 DUP6 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C3 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D4 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F7 JUMPI PUSH2 0x12F6 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1305 DUP7 DUP3 DUP8 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1316 DUP7 DUP3 DUP8 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1359 DUP8 DUP3 DUP9 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x136A DUP8 DUP3 DUP9 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x137B DUP8 DUP3 DUP9 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1888 JUMP JUMPDEST JUMPDEST PUSH2 0x13A8 DUP8 DUP3 DUP9 ADD PUSH2 0x122E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EA DUP6 DUP3 DUP7 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1458 DUP5 DUP3 DUP6 ADD PUSH2 0x1204 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1485 DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B2 DUP5 DUP3 DUP6 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C4 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP3 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x14EE DUP2 DUP6 PUSH2 0x16DA JUMP JUMPDEST SWAP4 POP PUSH2 0x14FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x1527 DUP2 DUP6 PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP PUSH2 0x1537 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1540 DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x1560 DUP2 DUP6 PUSH2 0x16FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1570 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x1771 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1597 DUP3 DUP6 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x15A3 DUP3 DUP5 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x15EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x15F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x157C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x160B DUP2 DUP5 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164B DUP2 DUP5 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP PUSH2 0x1684 DUP3 DUP3 PUSH2 0x17EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP3 PUSH2 0x1892 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x178D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17E9 JUMPI PUSH2 0x17E8 PUSH2 0x1820 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F8 DUP3 PUSH2 0x1892 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x184F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AC DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18C3 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18F1 DUP2 PUSH2 0x1771 JUMP JUMPDEST DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE JUMPDEST 0xE4 0xD 0x4F REVERT 0xD DUP4 0xB0 PUSH1 0x32 CALLDATALOAD CODESIZE 0xE JUMP PUSH16 0xC42F57A3AA0F4FA69312B666CA93C12D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "895:40452:1:-:0;;;4946:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5020:5;5012;:13;;;;;;;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;895:40452;;5426:90;5482:7;5426:90;:::o;895:40452::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:7:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;895:40452:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1038": {
									"entryPoint": 4025,
									"id": 1038,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_435": {
									"entryPoint": 4383,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1025": {
									"entryPoint": 3936,
									"id": 1025,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1093": {
									"entryPoint": 4031,
									"id": 1093,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_777": {
									"entryPoint": 3515,
									"id": 777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1599": {
									"entryPoint": 4495,
									"id": 1599,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_810": {
									"entryPoint": 3829,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_791": {
									"entryPoint": 3868,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1642": {
									"entryPoint": 3610,
									"id": 1642,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1632": {
									"entryPoint": 3942,
									"id": 1632,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_629": {
									"entryPoint": 3982,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_563": {
									"entryPoint": 3623,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_177": {
									"entryPoint": 3618,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1652": {
									"entryPoint": 4406,
									"id": 1652,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_684": {
									"entryPoint": 1293,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_250": {
									"entryPoint": 2495,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_707": {
									"entryPoint": 1166,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_751": {
									"entryPoint": 3367,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_373": {
									"entryPoint": 1020,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_455": {
									"entryPoint": 2477,
									"id": 455,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1012": {
									"entryPoint": 3093,
									"id": 1012,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_974": {
									"entryPoint": 2445,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_733": {
									"entryPoint": 2826,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_363": {
									"entryPoint": 874,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_383": {
									"entryPoint": 2680,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_426": {
									"entryPoint": 3208,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": 1617,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_955": {
									"entryPoint": 1640,
									"id": 955,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:7"
															},
															"nodeType": "YulIf",
															"src": "249:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:7",
														"type": ""
													}
												],
												"src": "7:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:7",
														"type": ""
													}
												],
												"src": "423:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"src": "568:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:7",
														"type": ""
													}
												],
												"src": "707:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:7",
														"type": ""
													}
												],
												"src": "850:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:7"
															},
															"nodeType": "YulIf",
															"src": "1081:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:7",
														"type": ""
													}
												],
												"src": "1010:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:7",
														"type": ""
													}
												],
												"src": "1354:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:7"
															},
															"nodeType": "YulIf",
															"src": "1575:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:7",
														"type": ""
													}
												],
												"src": "1499:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:7"
															},
															"nodeType": "YulIf",
															"src": "1927:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:7",
														"type": ""
													}
												],
												"src": "1834:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:7"
															},
															"nodeType": "YulIf",
															"src": "2424:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:7",
														"type": ""
													}
												],
												"src": "2314:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:7"
															},
															"nodeType": "YulIf",
															"src": "3075:120:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:7",
														"type": ""
													}
												],
												"src": "2939:943:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:7"
															},
															"nodeType": "YulIf",
															"src": "3978:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:7",
														"type": ""
													}
												],
												"src": "3888:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:7"
															},
															"nodeType": "YulIf",
															"src": "4455:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:7",
														"type": ""
													}
												],
												"src": "4362:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:7"
															},
															"nodeType": "YulIf",
															"src": "4917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:7",
														"type": ""
													}
												],
												"src": "4842:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:7"
															},
															"nodeType": "YulIf",
															"src": "5261:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:7",
														"type": ""
													}
												],
												"src": "5175:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:7"
															},
															"nodeType": "YulIf",
															"src": "5606:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:7",
														"type": ""
													}
												],
												"src": "5530:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:7",
														"type": ""
													}
												],
												"src": "5865:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:7",
														"type": ""
													}
												],
												"src": "5989:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:7",
														"type": ""
													}
												],
												"src": "6104:360:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:7",
														"type": ""
													}
												],
												"src": "6470:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:7",
														"type": ""
													}
												],
												"src": "6840:377:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:7",
														"type": ""
													}
												],
												"src": "7223:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:7",
														"type": ""
													}
												],
												"src": "7347:435:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:7",
														"type": ""
													}
												],
												"src": "7788:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:7",
														"type": ""
													}
												],
												"src": "8016:640:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:7",
														"type": ""
													}
												],
												"src": "8662:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:7",
														"type": ""
													}
												],
												"src": "8878:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:7",
														"type": ""
													}
												],
												"src": "9197:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:7",
														"type": ""
													}
												],
												"src": "9425:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:7",
														"type": ""
													}
												],
												"src": "9560:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:7"
															},
															"nodeType": "YulIf",
															"src": "9778:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:7",
														"type": ""
													}
												],
												"src": "9641:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:7",
														"type": ""
													}
												],
												"src": "9954:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:7",
														"type": ""
													}
												],
												"src": "10058:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:7",
														"type": ""
													}
												],
												"src": "10163:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:7",
														"type": ""
													}
												],
												"src": "10337:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:7",
														"type": ""
													}
												],
												"src": "10512:148:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10721:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10732:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10721:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10693:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10703:7:7",
														"type": ""
													}
												],
												"src": "10666:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10845:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10838:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10820:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10792:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10802:7:7",
														"type": ""
													}
												],
												"src": "10768:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:105:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10918:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10918:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10890:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10900:7:7",
														"type": ""
													}
												],
												"src": "10864:149:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:7",
														"type": ""
													}
												],
												"src": "11019:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11217:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11206:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11178:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11188:7:7",
														"type": ""
													}
												],
												"src": "11151:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:103:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11295:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11366:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11267:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11272:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11277:6:7",
														"type": ""
													}
												],
												"src": "11234:154:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11453:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11462:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11457:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11522:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11547:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11552:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11543:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11543:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11571:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11562:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11556:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11556:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11536:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11536:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11480:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11494:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11496:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11505:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11508:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11501:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11501:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11496:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11476:3:7",
																"statements": []
															},
															"src": "11472:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11669:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11674:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11665:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11665:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11658:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:13:7"
															},
															"nodeType": "YulIf",
															"src": "11594:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11425:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11430:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11435:6:7",
														"type": ""
													}
												],
												"src": "11394:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11788:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11803:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11890:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11904:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11912:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11900:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11890:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11856:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:26:7"
															},
															"nodeType": "YulIf",
															"src": "11846:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11963:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:38:7"
															},
															"nodeType": "YulIf",
															"src": "11937:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11742:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11751:6:7",
														"type": ""
													}
												],
												"src": "11707:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12138:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12116:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12090:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12257:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12257:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12257:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12195:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12195:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12234:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12231:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:62:7"
															},
															"nodeType": "YulIf",
															"src": "12189:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12297:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12286:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12062:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12070:4:7",
														"type": ""
													}
												],
												"src": "12033:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12320:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12506:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12692:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12904:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12921:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12914:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12815:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13150:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13061:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13242:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13260:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13252:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13215:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13225:6:7",
														"type": ""
													}
												],
												"src": "13184:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13335:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13392:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13401:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13404:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13394:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13394:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13394:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13383:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13365:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13365:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13355:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:43:7"
															},
															"nodeType": "YulIf",
															"src": "13345:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13328:5:7",
														"type": ""
													}
												],
												"src": "13292:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13460:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13523:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13526:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13516:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13516:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13516:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13505:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13490:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13490:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:40:7"
															},
															"nodeType": "YulIf",
															"src": "13470:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13453:5:7",
														"type": ""
													}
												],
												"src": "13420:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13584:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13640:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13649:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13652:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13642:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13642:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13642:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13607:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13631:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "13614:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13614:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13604:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:42:7"
															},
															"nodeType": "YulIf",
															"src": "13594:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13577:5:7",
														"type": ""
													}
												],
												"src": "13542:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13768:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13770:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13734:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13759:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13741:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13731:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:43:7"
															},
															"nodeType": "YulIf",
															"src": "13721:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13704:5:7",
														"type": ""
													}
												],
												"src": "13668:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611434565b61036a565b6040516101169190611616565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611631565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c919061148e565b61048e565b60405161017e91906115af565b60405180910390f35b6101a1600480360381019061019c91906113f4565b61050d565b005b3480156101af57600080fd5b506101b8610651565b6040516101c59190611653565b60405180910390f35b6101e860048036038101906101e391906112de565b610668565b005b61020460048036038101906101ff91906112de565b61098d565b005b34801561021257600080fd5b5061022d6004803603810190610228919061148e565b6109ad565b60405161023a91906115af565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611271565b6109bf565b6040516102779190611653565b60405180910390f35b34801561028c57600080fd5b50610295610a78565b6040516102a29190611631565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906113b4565b610b0a565b005b6102ee60048036038101906102e99190611331565b610c15565b005b3480156102fc57600080fd5b506103176004803603810190610312919061148e565b610c88565b6040516103249190611631565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f919061129e565b610d27565b6040516103619190611616565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b906117bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906117bd565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610dbb565b6104cf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610518826109ad565b90508073ffffffffffffffffffffffffffffffffffffffff16610539610e1a565b73ffffffffffffffffffffffffffffffffffffffff161461059c5761056581610560610e1a565b610d27565b61059b576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600061065b610e22565b6001546000540303905090565b600061067382610e27565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106da576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806106e684610ef5565b915091506106fc81876106f7610e1a565b610f1c565b610748576107118661070c610e1a565b610d27565b610747576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156107af576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107bc8686866001610f60565b80156107c757600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061089585610871888887610f66565b7c020000000000000000000000000000000000000000000000000000000017610f8e565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561091d57600060018501905060006004600083815260200190815260200160002054141561091b57600054811461091a578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109858686866001610fb9565b505050505050565b6109a883838360405180602001604052806000815250610c15565b505050565b60006109b882610e27565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a27576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a87906117bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab3906117bd565b8015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905090565b8060076000610b17610e1a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bc4610e1a565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c099190611616565b60405180910390a35050565b610c20848484610668565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c8257610c4b84848484610fbf565b610c81576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c9382610dbb565b610cc9576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610cd361111f565b9050600081511415610cf45760405180602001604052806000815250610d1f565b80610cfe84611136565b604051602001610d0f92919061158b565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dc6610e22565b11158015610dd5575060005482105b8015610e13575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e36610e22565b11610ebe57600054811015610ebd5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610ebb575b6000811415610eb1576004600083600190039350838152602001908152602001600020549050610e86565b8092505050610ef0565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f7d86868461118f565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fe5610e1a565b8786866040518563ffffffff1660e01b815260040161100794939291906115ca565b602060405180830381600087803b15801561102157600080fd5b505af192505050801561105257506040513d601f19601f8201168201806040525081019061104f9190611461565b60015b6110cc573d8060008114611082576040519150601f19603f3d011682016040523d82523d6000602084013e611087565b606091505b506000815114156110c4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561117a57600184039350600a81066030018453600a81049050806111755761117a565b61114f565b50828103602084039350808452505050919050565b60009392505050565b60006111ab6111a684611693565b61166e565b9050828152602081018484840111156111c7576111c6611883565b5b6111d284828561177b565b509392505050565b6000813590506111e9816118a3565b92915050565b6000813590506111fe816118ba565b92915050565b600081359050611213816118d1565b92915050565b600081519050611228816118d1565b92915050565b600082601f8301126112435761124261187e565b5b8135611253848260208601611198565b91505092915050565b60008135905061126b816118e8565b92915050565b6000602082840312156112875761128661188d565b5b6000611295848285016111da565b91505092915050565b600080604083850312156112b5576112b461188d565b5b60006112c3858286016111da565b92505060206112d4858286016111da565b9150509250929050565b6000806000606084860312156112f7576112f661188d565b5b6000611305868287016111da565b9350506020611316868287016111da565b92505060406113278682870161125c565b9150509250925092565b6000806000806080858703121561134b5761134a61188d565b5b6000611359878288016111da565b945050602061136a878288016111da565b935050604061137b8782880161125c565b925050606085013567ffffffffffffffff81111561139c5761139b611888565b5b6113a88782880161122e565b91505092959194509250565b600080604083850312156113cb576113ca61188d565b5b60006113d9858286016111da565b92505060206113ea858286016111ef565b9150509250929050565b6000806040838503121561140b5761140a61188d565b5b6000611419858286016111da565b925050602061142a8582860161125c565b9150509250929050565b60006020828403121561144a5761144961188d565b5b600061145884828501611204565b91505092915050565b6000602082840312156114775761147661188d565b5b600061148584828501611219565b91505092915050565b6000602082840312156114a4576114a361188d565b5b60006114b28482850161125c565b91505092915050565b6114c481611707565b82525050565b6114d381611719565b82525050565b60006114e4826116c4565b6114ee81856116da565b93506114fe81856020860161178a565b61150781611892565b840191505092915050565b600061151d826116cf565b61152781856116eb565b935061153781856020860161178a565b61154081611892565b840191505092915050565b6000611556826116cf565b61156081856116fc565b935061157081856020860161178a565b80840191505092915050565b61158581611771565b82525050565b6000611597828561154b565b91506115a3828461154b565b91508190509392505050565b60006020820190506115c460008301846114bb565b92915050565b60006080820190506115df60008301876114bb565b6115ec60208301866114bb565b6115f9604083018561157c565b818103606083015261160b81846114d9565b905095945050505050565b600060208201905061162b60008301846114ca565b92915050565b6000602082019050818103600083015261164b8184611512565b905092915050565b6000602082019050611668600083018461157c565b92915050565b6000611678611689565b905061168482826117ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156116ae576116ad61184f565b5b6116b782611892565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061171282611751565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156117a857808201518184015260208101905061178d565b838111156117b7576000848401525b50505050565b600060028204905060018216806117d557607f821691505b602082108114156117e9576117e8611820565b5b50919050565b6117f882611892565b810181811067ffffffffffffffff821117156118175761181661184f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6118ac81611707565b81146118b757600080fd5b50565b6118c381611719565b81146118ce57600080fd5b50565b6118da81611725565b81146118e557600080fd5b50565b6118f181611771565b81146118fc57600080fd5b5056fea2646970667358221220be5be40d4ffd0d83b0603235380e566fc42f57a3aa0f4fa69312b666ca93c12d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x9AD JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x539 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59C JUMPI PUSH2 0x565 DUP2 PUSH2 0x560 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65B PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E6 DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x6FC DUP2 DUP8 PUSH2 0x6F7 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH2 0x711 DUP7 PUSH2 0x70C PUSH2 0xE1A JUMP JUMPDEST PUSH2 0xD27 JUMP JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BC DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xF60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x895 DUP6 PUSH2 0x871 DUP9 DUP9 DUP8 PUSH2 0xF66 JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x91A JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x985 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xFB9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 DUP3 PUSH2 0xE27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xA87 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x17BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0xB17 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC4 PUSH2 0xE1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC20 DUP5 DUP5 DUP5 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xC82 JUMPI PUSH2 0xC4B DUP5 DUP5 DUP5 DUP5 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC93 DUP3 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD3 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD1F JUMP JUMPDEST DUP1 PUSH2 0xCFE DUP5 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD0F SWAP3 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xDC6 PUSH2 0xE22 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xE13 JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP DUP1 PUSH2 0xE36 PUSH2 0xE22 JUMP JUMPDEST GT PUSH2 0xEBE JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xEBB JUMPI JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0xE86 JUMP JUMPDEST DUP1 SWAP3 POP POP POP PUSH2 0xEF0 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xF7D DUP7 DUP7 DUP5 PUSH2 0x118F JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFE5 PUSH2 0xE1A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1007 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1052 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10CC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x117A JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1175 JUMPI PUSH2 0x117A JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AB PUSH2 0x11A6 DUP5 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11C7 JUMPI PUSH2 0x11C6 PUSH2 0x1883 JUMP JUMPDEST JUMPDEST PUSH2 0x11D2 DUP5 DUP3 DUP6 PUSH2 0x177B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E9 DUP2 PUSH2 0x18A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11FE DUP2 PUSH2 0x18BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1213 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1228 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x187E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1253 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x126B DUP2 PUSH2 0x18E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP5 DUP3 DUP6 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C3 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D4 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12F7 JUMPI PUSH2 0x12F6 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1305 DUP7 DUP3 DUP8 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1316 DUP7 DUP3 DUP8 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1327 DUP7 DUP3 DUP8 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1359 DUP8 DUP3 DUP9 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x136A DUP8 DUP3 DUP9 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x137B DUP8 DUP3 DUP9 ADD PUSH2 0x125C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH2 0x139B PUSH2 0x1888 JUMP JUMPDEST JUMPDEST PUSH2 0x13A8 DUP8 DUP3 DUP9 ADD PUSH2 0x122E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH2 0x13CA PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EA DUP6 DUP3 DUP7 ADD PUSH2 0x11EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH2 0x140A PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x11DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH2 0x1449 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1458 DUP5 DUP3 DUP6 ADD PUSH2 0x1204 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1485 DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x188D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14B2 DUP5 DUP3 DUP6 ADD PUSH2 0x125C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C4 DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14D3 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP3 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x14EE DUP2 DUP6 PUSH2 0x16DA JUMP JUMPDEST SWAP4 POP PUSH2 0x14FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x1527 DUP2 DUP6 PUSH2 0x16EB JUMP JUMPDEST SWAP4 POP PUSH2 0x1537 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1540 DUP2 PUSH2 0x1892 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1556 DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x1560 DUP2 DUP6 PUSH2 0x16FC JUMP JUMPDEST SWAP4 POP PUSH2 0x1570 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x1771 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1597 DUP3 DUP6 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x15A3 DUP3 DUP5 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x15EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14BB JUMP JUMPDEST PUSH2 0x15F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x157C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x160B DUP2 DUP5 PUSH2 0x14D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164B DUP2 DUP5 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1668 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1689 JUMP JUMPDEST SWAP1 POP PUSH2 0x1684 DUP3 DUP3 PUSH2 0x17EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16AE JUMPI PUSH2 0x16AD PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP3 PUSH2 0x1892 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17A8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x178D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17E9 JUMPI PUSH2 0x17E8 PUSH2 0x1820 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F8 DUP3 PUSH2 0x1892 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x184F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AC DUP2 PUSH2 0x1707 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18C3 DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP2 EQ PUSH2 0x18CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP2 EQ PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18F1 DUP2 PUSH2 0x1771 JUMP JUMPDEST DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE JUMPDEST 0xE4 0xD 0x4F REVERT 0xD DUP4 0xB0 PUSH1 0x32 CALLDATALOAD CODESIZE 0xE JUMP PUSH16 0xC42F57A3AA0F4FA69312B666CA93C12D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "895:40452:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16360:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15812:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19903:2764;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22758:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11391:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:230;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10208:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16901:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23526:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10411:313;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17282:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9155:630;9240:4;9573:10;9558:25;;:11;:25;;;;:101;;;;9649:10;9634:25;;:11;:25;;;;9558:101;:177;;;;9725:10;9710:25;;:11;:25;;;;9558:177;9539:196;;9155:630;;;:::o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;;;;;;;;;;;;;16455:64;16537:15;:24;16553:7;16537:24;;;;;;;;;;;:30;;;;;;;;;;;;16530:37;;16360:214;;;:::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;;15970:5;15947:28;;:19;:17;:19::i;:::-;:28;;;15943:172;;15994:44;16011:5;16018:19;:17;:19::i;:::-;15994:16;:44::i;:::-;15989:126;;16065:35;;;;;;;;;;;;;;15989:126;15943:172;16158:2;16125:15;:24;16141:7;16125:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;16195:7;16191:2;16175:28;;16184:5;16175:28;;;;;;;;;;;;15890:320;15812:398;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;20112:45;;20128:19;20112:45;;;20108:86;;20166:28;;;;;;;;;;;;;;20108:86;20206:27;20235:23;20262:35;20289:7;20262:26;:35::i;:::-;20205:92;;;;20394:68;20419:15;20436:4;20442:19;:17;:19::i;:::-;20394:24;:68::i;:::-;20389:179;;20481:43;20498:4;20504:19;:17;:19::i;:::-;20481:16;:43::i;:::-;20476:92;;20533:35;;;;;;;;;;;;;;20476:92;20389:179;20597:1;20583:16;;:2;:16;;;20579:52;;;20608:23;;;;;;;;;;;;;;20579:52;20642:43;20664:4;20670:2;20674:7;20683:1;20642:21;:43::i;:::-;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;21300:18;:24;21319:4;21300:24;;;;;;;;;;;;;;;;21298:26;;;;;;;;;;;;21368:18;:22;21387:2;21368:22;;;;;;;;;;;;;;;;21366:24;;;;;;;;;;;21683:143;21719:2;21767:45;21782:4;21788:2;21792:19;21767:14;:45::i;:::-;2392:8;21739:73;21683:18;:143::i;:::-;21654:17;:26;21672:7;21654:26;;;;;;;;;;;:172;;;;21994:1;2392:8;21943:19;:47;:52;21939:617;;;22015:19;22047:1;22037:7;:11;22015:33;;22202:1;22168:17;:30;22186:11;22168:30;;;;;;;;;;;;:35;22164:378;;;22304:13;;22289:11;:28;22285:239;;22482:19;22449:17;:30;22467:11;22449:30;;;;;;;;;;;:52;;;;22285:239;22164:378;21997:559;21939:617;22600:7;22596:2;22581:27;;22590:4;22581:27;;;;;;;;;;;;22618:42;22639:4;22645:2;22649:7;22658:1;22618:20;:42::i;:::-;20030:2637;;;19903:2764;;;:::o;22758:187::-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;11391:150::-;11463:7;11505:27;11524:7;11505:18;:27::i;:::-;11482:52;;11391:150;;;:::o;7045:230::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:60;;;7168:28;;;;;;;;;;;;;;7136:60;1360:13;7213:18;:25;7232:5;7213:25;;;;;;;;;;;;;;;;:55;7206:62;;7045:230;;;:::o;10208:102::-;10264:13;10296:7;10289:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:102;:::o;16901:231::-;17047:8;16995:18;:39;17014:19;:17;:19::i;:::-;16995:39;;;;;;;;;;;;;;;:49;17035:8;16995:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17106:8;17070:55;;17085:19;:17;:19::i;:::-;17070:55;;;17116:8;17070:55;;;;;;:::i;:::-;;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;23758:1;23740:2;:14;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;;;;;;;;;;;;;23773:143;23736:180;23526:396;;;;:::o;10411:313::-;10484:13;10514:16;10522:7;10514;:16::i;:::-;10509:59;;10539:29;;;;;;;;;;;;;;10509:59;10579:21;10603:10;:8;:10::i;:::-;10579:34;;10655:1;10636:7;10630:21;:26;;:87;;;;;;;;;;;;;;;;;10683:7;10692:18;10702:7;10692:9;:18::i;:::-;10666:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10630:87;10623:94;;;10411:313;;;:::o;17282:162::-;17379:4;17402:18;:25;17421:5;17402:25;;;;;;;;;;;;;;;:35;17428:8;17402:35;;;;;;;;;;;;;;;;;;;;;;;;;17395:42;;17282:162;;;;:::o;17693:277::-;17758:4;17812:7;17793:15;:13;:15::i;:::-;:26;;:65;;;;;17845:13;;17835:7;:23;17793:65;:151;;;;;17943:1;2118:8;17895:17;:26;17913:7;17895:26;;;;;;;;;;;;:44;:49;17793:151;17774:170;;17693:277;;;:::o;39437:103::-;39497:7;39523:10;39516:17;;39437:103;:::o;5426:90::-;5482:7;5426:90;:::o;12515:1249::-;12582:7;12601:12;12616:7;12601:22;;12681:4;12662:15;:13;:15::i;:::-;:23;12658:1042;;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:17;:23;12786:4;12768:23;;;;;;;;;;;;12751:40;;12883:1;2118:8;12855:6;:24;:29;12851:831;;;13510:111;13527:1;13517:6;:11;13510:111;;;13569:17;:25;13587:6;;;;;;;13569:25;;;;;;;;;;;;13560:34;;13510:111;;;13653:6;13646:13;;;;;;12851:831;12729:971;12703:997;12658:1042;13726:31;;;;;;;;;;;;;;12515:1249;;;;:::o;18828:474::-;18927:27;18956:23;18995:38;19036:15;:24;19052:7;19036:24;;;;;;;;;;;18995:65;;19210:18;19187:41;;19266:19;19260:26;19241:45;;19173:123;18828:474;;;:::o;18074:646::-;18219:11;18381:16;18374:5;18370:28;18361:37;;18539:16;18528:9;18524:32;18511:45;;18687:15;18676:9;18673:30;18665:5;18654:9;18651:20;18648:56;18638:66;;18074:646;;;;;:::o;24566:154::-;;;;;:::o;38764:304::-;38895:7;38914:16;2513:3;38940:19;:41;;38914:68;;2513:3;39007:31;39018:4;39024:2;39028:9;39007:10;:31::i;:::-;38999:40;;:62;;38992:69;;;38764:304;;;;;:::o;14297:443::-;14377:14;14542:16;14535:5;14531:28;14522:37;;14717:5;14703:11;14678:23;14674:41;14671:52;14664:5;14661:63;14651:73;;14297:443;;;;:::o;25367:153::-;;;;;:::o;25948:697::-;26106:4;26151:2;26126:45;;;26172:19;:17;:19::i;:::-;26193:4;26199:7;26208:5;26126:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26421:1;26404:6;:13;:18;26400:229;;;26449:40;;;;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;26292:54;;;26282:64;;;:6;:64;;;;26275:71;;;25948:697;;;;;;:::o;10969:92::-;11020:13;11045:9;;;;;;;;;;;;;;10969:92;:::o;39637:1708::-;39702:17;40130:4;40123;40117:11;40113:22;40220:1;40214:4;40207:15;40293:4;40290:1;40286:12;40279:19;;40373:1;40368:3;40361:14;40474:3;40708:5;40690:419;40716:1;40690:419;;;40755:1;40750:3;40746:11;40739:18;;40923:2;40917:4;40913:13;40909:2;40905:22;40900:3;40892:36;41015:2;41009:4;41005:13;40997:21;;41080:4;41070:25;;41088:5;;41070:25;40690:419;;;40694:21;41146:3;41141;41137:13;41259:4;41254:3;41250:14;41243:21;;41322:6;41317:3;41310:19;39740:1599;;;39637:1708;;;:::o;38475:143::-;38608:6;38475:143;;;;;:::o;7:410:7:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:96::-;10703:7;10732:24;10750:5;10732:24;:::i;:::-;10721:35;;10666:96;;;:::o;10768:90::-;10802:7;10845:5;10838:13;10831:21;10820:32;;10768:90;;;:::o;10864:149::-;10900:7;10940:66;10933:5;10929:78;10918:89;;10864:149;;;:::o;11019:126::-;11056:7;11096:42;11089:5;11085:54;11074:65;;11019:126;;;:::o;11151:77::-;11188:7;11217:5;11206:16;;11151:77;;;:::o;11234:154::-;11318:6;11313:3;11308;11295:30;11380:1;11371:6;11366:3;11362:16;11355:27;11234:154;;;:::o;11394:307::-;11462:1;11472:113;11486:6;11483:1;11480:13;11472:113;;;11571:1;11566:3;11562:11;11556:18;11552:1;11547:3;11543:11;11536:39;11508:2;11505:1;11501:10;11496:15;;11472:113;;;11603:6;11600:1;11597:13;11594:101;;;11683:1;11674:6;11669:3;11665:16;11658:27;11594:101;11443:258;11394:307;;;:::o;11707:320::-;11751:6;11788:1;11782:4;11778:12;11768:22;;11835:1;11829:4;11825:12;11856:18;11846:81;;11912:4;11904:6;11900:17;11890:27;;11846:81;11974:2;11966:6;11963:14;11943:18;11940:38;11937:84;;;11993:18;;:::i;:::-;11937:84;11758:269;11707:320;;;:::o;12033:281::-;12116:27;12138:4;12116:27;:::i;:::-;12108:6;12104:40;12246:6;12234:10;12231:22;12210:18;12198:10;12195:34;12192:62;12189:88;;;12257:18;;:::i;:::-;12189:88;12297:10;12293:2;12286:22;12076:238;12033:281;;:::o;12320:180::-;12368:77;12365:1;12358:88;12465:4;12462:1;12455:15;12489:4;12486:1;12479:15;12506:180;12554:77;12551:1;12544:88;12651:4;12648:1;12641:15;12675:4;12672:1;12665:15;12692:117;12801:1;12798;12791:12;12815:117;12924:1;12921;12914:12;12938:117;13047:1;13044;13037:12;13061:117;13170:1;13167;13160:12;13184:102;13225:6;13276:2;13272:7;13267:2;13260:5;13256:14;13252:28;13242:38;;13184:102;;;:::o;13292:122::-;13365:24;13383:5;13365:24;:::i;:::-;13358:5;13355:35;13345:63;;13404:1;13401;13394:12;13345:63;13292:122;:::o;13420:116::-;13490:21;13505:5;13490:21;:::i;:::-;13483:5;13480:32;13470:60;;13526:1;13523;13516:12;13470:60;13420:116;:::o;13542:120::-;13614:23;13631:5;13614:23;:::i;:::-;13607:5;13604:34;13594:62;;13652:1;13649;13642:12;13594:62;13542:120;:::o;13668:122::-;13741:24;13759:5;13741:24;:::i;:::-;13734:5;13731:35;13721:63;;13780:1;13777;13770:12;13721:63;13668:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1290600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5545",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be5be40d4ffd0d83b0603235380e566fc42f57a3aa0f4fa69312b666ca93c12d64736f6c63430008070033",
									".code": [
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9725,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10106,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 15924,
											"end": 15931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15916,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15970,
											"end": 15975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 15947,
											"end": 15964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 15947,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 16018,
											"end": 16035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 16018,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16158,
											"end": 16160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16141,
											"end": 16148,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16195,
											"end": 16202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16191,
											"end": 16193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16184,
											"end": 16189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15890,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20089,
											"end": 20096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20153,
											"end": 20157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20128,
											"end": 20147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20206,
											"end": 20233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20258,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 20289,
											"end": 20296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20262,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 20262,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20205,
											"end": 20297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 20419,
											"end": 20434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20436,
											"end": 20440,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 20442,
											"end": 20459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20394,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 20504,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 20504,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20585,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 20664,
											"end": 20668,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20670,
											"end": 20672,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 20681,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20642,
											"end": 20663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 20642,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20774,
											"end": 20789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20884,
											"end": 20914,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21319,
											"end": 21323,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21386,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21387,
											"end": 21389,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 21719,
											"end": 21721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 21782,
											"end": 21786,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21788,
											"end": 21790,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21792,
											"end": 21811,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 21767,
											"end": 21781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 21767,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21739,
											"end": 21812,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21683,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 21683,
											"end": 21826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21672,
											"end": 21679,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21994,
											"end": 21995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21943,
											"end": 21962,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22047,
											"end": 22048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22037,
											"end": 22044,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22015,
											"end": 22048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22202,
											"end": 22203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22185,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22186,
											"end": 22197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22289,
											"end": 22317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22482,
											"end": 22501,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22600,
											"end": 22607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22596,
											"end": 22598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22639,
											"end": 22643,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22645,
											"end": 22647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22649,
											"end": 22656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22658,
											"end": 22659,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22618,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22926,
											"end": 22933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22899,
											"end": 22915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 11524,
											"end": 11531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7206,
											"end": 7268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10264,
											"end": 10277,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17047,
											"end": 17055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 17014,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17035,
											"end": 17043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 17085,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 17085,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17116,
											"end": 17124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23708,
											"end": 23712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23714,
											"end": 23716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23695,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23758,
											"end": 23759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23740,
											"end": 23742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 23740,
											"end": 23759,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 23809,
											"end": 23813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23815,
											"end": 23817,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23819,
											"end": 23826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23828,
											"end": 23833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23778,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10497,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10603,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10702,
											"end": 10709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17428,
											"end": 17436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17395,
											"end": 17437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17758,
											"end": 17762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17812,
											"end": 17819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 17793,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 17793,
											"end": 17808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17835,
											"end": 17842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 17793,
											"end": 17858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 17944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17895,
											"end": 17912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17913,
											"end": 17920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39497,
											"end": 39504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 39516,
											"end": 39533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39516,
											"end": 39533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12616,
											"end": 12623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12662,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12662,
											"end": 12677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12662,
											"end": 12685,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13653,
											"end": 13659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12729,
											"end": 13700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12658,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18927,
											"end": 18954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19052,
											"end": 19059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18995,
											"end": 19060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19210,
											"end": 19228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19187,
											"end": 19228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19266,
											"end": 19285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19173,
											"end": 19296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18219,
											"end": 18230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18381,
											"end": 18397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18374,
											"end": 18379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18539,
											"end": 18555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18528,
											"end": 18537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18524,
											"end": 18556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18511,
											"end": 18556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18511,
											"end": 18556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18687,
											"end": 18702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18676,
											"end": 18685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18654,
											"end": 18663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18648,
											"end": 18704,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18638,
											"end": 18704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24566,
											"end": 24720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38895,
											"end": 38902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38914,
											"end": 38930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 38940,
											"end": 38959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 38940,
											"end": 38981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38940,
											"end": 38981,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 38914,
											"end": 38982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38914,
											"end": 38982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 39018,
											"end": 39022,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 39024,
											"end": 39026,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 39028,
											"end": 39037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 39007,
											"end": 39017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 39007,
											"end": 39038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 38999,
											"end": 39039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 38999,
											"end": 39061,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38992,
											"end": 39061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38764,
											"end": 39068,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14542,
											"end": 14558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14535,
											"end": 14540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14559,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14717,
											"end": 14722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14671,
											"end": 14723,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14664,
											"end": 14669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14297,
											"end": 14740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25367,
											"end": 25520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26151,
											"end": 26153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 26172,
											"end": 26189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 26172,
											"end": 26191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26421,
											"end": 26422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26404,
											"end": 26410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26404,
											"end": 26417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26589,
											"end": 26595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26583,
											"end": 26596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26574,
											"end": 26580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26570,
											"end": 26572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26559,
											"end": 26597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 26292,
											"end": 26346,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26275,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11033,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 39702,
											"end": 39719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 40130,
											"end": 40134,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 40123,
											"end": 40127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 40113,
											"end": 40135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40220,
											"end": 40221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 40214,
											"end": 40218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40293,
											"end": 40297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 40290,
											"end": 40291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40286,
											"end": 40298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40373,
											"end": 40374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 40368,
											"end": 40371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 40361,
											"end": 40375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 40474,
											"end": 40477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40708,
											"end": 40713,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40716,
											"end": 40717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 40755,
											"end": 40756,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 40750,
											"end": 40753,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 40746,
											"end": 40757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 40923,
											"end": 40925,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 40917,
											"end": 40921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 40913,
											"end": 40926,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 40909,
											"end": 40911,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 40905,
											"end": 40927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 40900,
											"end": 40903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 40892,
											"end": 40928,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 41015,
											"end": 41017,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 41009,
											"end": 41013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 40997,
											"end": 41018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 40997,
											"end": 41018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41080,
											"end": 41084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41088,
											"end": 41093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 41088,
											"end": 41093,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40694,
											"end": 40715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41146,
											"end": 41149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41141,
											"end": 41144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41259,
											"end": 41263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41254,
											"end": 41257,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 41243,
											"end": 41264,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 41243,
											"end": 41264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41322,
											"end": 41328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41317,
											"end": 41320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39740,
											"end": 41339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 38608,
											"end": 38614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 38475,
											"end": 38618,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10838,
											"end": 10851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10929,
											"end": 11007,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11138,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11085,
											"end": 11139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11325,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11362,
											"end": 11378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11536,
											"end": 11575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11610,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11665,
											"end": 11681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11658,
											"end": 11685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11443,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11825,
											"end": 11837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11978,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11758,
											"end": 12027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12104,
											"end": 12144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12234,
											"end": 12244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12231,
											"end": 12253,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12195,
											"end": 12229,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12192,
											"end": 12254,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12297,
											"end": 12307,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12368,
											"end": 12445,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12493,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12631,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12641,
											"end": 12656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13172,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13278,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13272,
											"end": 13279,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13260,
											"end": 13265,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13252,
											"end": 13280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13480,
											"end": 13512,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13516,
											"end": 13528,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13604,
											"end": 13638,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13642,
											"end": 13654,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 13766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13770,
											"end": 13782,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 124,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 126,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 128,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)"
							},
							{
								"astId": 147,
								"contract": "ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)54_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)54_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 53,
										"contract": "ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721ABurnable.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721ABurnable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"ERC721ABurnable.sol\":{\"keccak256\":\"0x3823a9d57adbd2738b0cb951e94ab580b81d44dbe656ae9beb860f49096c37d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7431a703d51164c50dc3a892ea709ee5899fd14f14ced252a021356e737a5cb6\",\"dweb:/ipfs/QmWNroJN5zf87NxS3otbCoxXrenaNg4PpAMV4vYRNGr5NA\"]},\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"IERC721ABurnable.sol\":{\"keccak256\":\"0x945768fdc93cf6d3b616a61c6eab8a72a60c6b4de59c21afab687cb9b0ecddca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3233120461564e7d516d7669caad69c360b055640e99bd4c3050ad691860ada\",\"dweb:/ipfs/QmYysPN4BN89pzfWNB3VNJBHLfvPhrCy5HwCK48KwVREup\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 124,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 126,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 128,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)"
							},
							{
								"astId": 147,
								"contract": "ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)54_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)54_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 53,
										"contract": "ERC721ABurnable.sol:ERC721ABurnable",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC721ASoulbound.sol": {
				"ERC721ASoulbound": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoulboundTokenCannotBeTransferred",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A token that is non-transferable.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721ASoulbound.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundTokenCannotBeTransferred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A token that is non-transferable.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721ASoulbound.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SoulboundTokenCannotBeTransferred()\":[{\"notice\":\"A Soulbound token cannot be transferred.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC721ASoulbound.sol\":\"ERC721ASoulbound\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"ERC721ABurnable.sol\":{\"keccak256\":\"0x3823a9d57adbd2738b0cb951e94ab580b81d44dbe656ae9beb860f49096c37d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7431a703d51164c50dc3a892ea709ee5899fd14f14ced252a021356e737a5cb6\",\"dweb:/ipfs/QmWNroJN5zf87NxS3otbCoxXrenaNg4PpAMV4vYRNGr5NA\"]},\"ERC721ASoulbound.sol\":{\"keccak256\":\"0x7cb8afa17d6e243a02fad20da5250f6e7723e9ee6031bbdc8ce0f5549f1b1137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64927cdcfd620fe4146b20c55186fb66cadb8a82ff1bd40092c83977dfb655f\",\"dweb:/ipfs/QmVNVwjx37QbP4tMyNmngY1LzfVNSbowAwjJznBmsaJapU\"]},\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"IERC721ABurnable.sol\":{\"keccak256\":\"0x945768fdc93cf6d3b616a61c6eab8a72a60c6b4de59c21afab687cb9b0ecddca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3233120461564e7d516d7669caad69c360b055640e99bd4c3050ad691860ada\",\"dweb:/ipfs/QmYysPN4BN89pzfWNB3VNJBHLfvPhrCy5HwCK48KwVREup\"]},\"IERC721ASoulbound.sol\":{\"keccak256\":\"0x110c5784f5c4df2468242257df685eb33aaa6e3499335601e80e7d27cefe752e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137c38d45701ed5f68cde36bf4072061e43c3b65a68e14934abd5005e32bde9e\",\"dweb:/ipfs/QmdCrUiEKksagHsEjYXn9Z6mnPkEevn1DNvSdeUHC5aKoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 124,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 126,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 128,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)"
							},
							{
								"astId": 147,
								"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)54_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)54_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)54_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 53,
										"contract": "ERC721ASoulbound.sol:ERC721ASoulbound",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SoulboundTokenCannotBeTransferred()": [
								{
									"notice": "A Soulbound token cannot be transferred."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721ABurnable.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721ABurnable.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"IERC721ABurnable.sol\":{\"keccak256\":\"0x945768fdc93cf6d3b616a61c6eab8a72a60c6b4de59c21afab687cb9b0ecddca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3233120461564e7d516d7669caad69c360b055640e99bd4c3050ad691860ada\",\"dweb:/ipfs/QmYysPN4BN89pzfWNB3VNJBHLfvPhrCy5HwCK48KwVREup\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC721ASoulbound.sol": {
				"IERC721ASoulbound": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoulboundTokenCannotBeTransferred",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721ASoulbound.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundTokenCannotBeTransferred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721ASoulbound.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SoulboundTokenCannotBeTransferred()\":[{\"notice\":\"A Soulbound token cannot be transferred.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721ASoulbound.sol\":\"IERC721ASoulbound\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"IERC721ABurnable.sol\":{\"keccak256\":\"0x945768fdc93cf6d3b616a61c6eab8a72a60c6b4de59c21afab687cb9b0ecddca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3233120461564e7d516d7669caad69c360b055640e99bd4c3050ad691860ada\",\"dweb:/ipfs/QmYysPN4BN89pzfWNB3VNJBHLfvPhrCy5HwCK48KwVREup\"]},\"IERC721ASoulbound.sol\":{\"keccak256\":\"0x110c5784f5c4df2468242257df685eb33aaa6e3499335601e80e7d27cefe752e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://137c38d45701ed5f68cde36bf4072061e43c3b65a68e14934abd5005e32bde9e\",\"dweb:/ipfs/QmdCrUiEKksagHsEjYXn9Z6mnPkEevn1DNvSdeUHC5aKoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SoulboundTokenCannotBeTransferred()": [
								{
									"notice": "A Soulbound token cannot be transferred."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ERC721ASoulbound.sol:26:9:\n   |\n26 |         uint256 startTokenId,\n   |         ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 680,
					"file": "ERC721ASoulbound.sol",
					"start": 660
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> ERC721ASoulbound.sol:27:9:\n   |\n27 |         uint256 quantity\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 706,
					"file": "ERC721ASoulbound.sol",
					"start": 690
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BuildGuildSoulbound.sol": {
				"ast": {
					"absolutePath": "BuildGuildSoulbound.sol",
					"exportedSymbols": {
						"ERC721A": [
							1653
						],
						"ERC721ABurnable": [
							1676
						],
						"ERC721ASoulbound": [
							1717
						],
						"ERC721ASoulboundMock": [
							30
						],
						"ERC721A__IERC721Receiver": [
							48
						],
						"IERC721A": [
							1923
						],
						"IERC721ABurnable": [
							1936
						],
						"IERC721ASoulbound": [
							1946
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "85:23:0"
						},
						{
							"absolutePath": "ERC721ASoulbound.sol",
							"file": "./ERC721ASoulbound.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 31,
							"sourceUnit": 1718,
							"src": "110:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721ASoulbound",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1717,
										"src": "177:16:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "177:16:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30,
								1717,
								1946,
								1676,
								1936,
								1653,
								1923
							],
							"name": "ERC721ASoulboundMock",
							"nameLocation": "153:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "280:2:0",
										"statements": []
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "264:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 12,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 13,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1653,
												"src": "256:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "256:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "212:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "233:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:44:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:0:0"
									},
									"scope": 30,
									"src": "200:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "343:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 24,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "363:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 25,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "367:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 23,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1363,
															1378
														],
														"referencedDeclaration": 1378,
														"src": "353:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "353:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "353:23:0"
											}
										]
									},
									"functionSelector": "a1448194",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "297:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "314:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "306:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "326:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "318:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:30:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:0"
									},
									"scope": 30,
									"src": "288:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 31,
							"src": "144:241:0",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759,
								1945
							]
						}
					],
					"src": "85:301:0"
				},
				"id": 0
			},
			"ERC721A.sol": {
				"ast": {
					"absolutePath": "ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1653
						],
						"ERC721A__IERC721Receiver": [
							48
						],
						"IERC721A": [
							1923
						]
					},
					"id": 1654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"absolutePath": "IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1654,
							"sourceUnit": 1924,
							"src": "109:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:1",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "263:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "311:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "336:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 41,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "380:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 44,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:1"
									},
									"scope": 48,
									"src": "228:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1654,
							"src": "187:203:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 50,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "915:8:1"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 49,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:1",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1653,
							"linearizedBaseContracts": [
								1653,
								1923
							],
							"name": "ERC721A",
							"nameLocation": "904:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 54,
									"members": [
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "1049:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 52,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:1",
									"nodeType": "StructDefinition",
									"scope": 1653,
									"src": "1015:54:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 62,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1305:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 61,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 59,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 60,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 65,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1446:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 63,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 64,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 68,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1570:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 66,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 67,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 71,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1686:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 69,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 70,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 79,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1816:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 78,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 76,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 77,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 82,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1953:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 81,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 87,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2075:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 84,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 85,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 90,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2207:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2339:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 92,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 93,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2467:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 106,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2609:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 103,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 104,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 114,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "2741:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 111,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 112,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3082:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 120,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3268:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 118,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3622:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3694:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3747:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 125,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "3794:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 127,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "4200:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 131,
										"keyType": {
											"id": 129,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 130,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "4459:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 133,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 134,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "4570:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$54_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 140,
										"keyType": {
											"id": 137,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$54_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 139,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 138,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 54,
												"src": "4589:16:1"
											},
											"referencedDeclaration": 54,
											"src": "4589:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "4685:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 146,
										"keyType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 145,
											"keyType": {
												"id": 143,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 144,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "5002:98:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "5012:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 155,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "5020:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:1"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "5045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:1"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "5062:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 163,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5078:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4958:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "4979:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:1"
									},
									"scope": 1653,
									"src": "4946:154:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5491:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "5501:8:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:1",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:1"
									},
									"scope": 1653,
									"src": "5426:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5654:37:1",
										"statements": [
											{
												"expression": {
													"id": 183,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "5671:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 184,
												"nodeType": "Return",
												"src": "5664:20:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5645:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:1"
									},
									"scope": 1653,
									"src": "5590:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1774
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5964:247:1",
										"statements": [
											{
												"id": 200,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 193,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "6148:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 194,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "6164:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 196,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6179:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 192,
														"id": 199,
														"nodeType": "Return",
														"src": "6141:53:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:1"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5955:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:1"
									},
									"scope": 1653,
									"src": "5894:317:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6368:226:1",
										"statements": [
											{
												"id": 213,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "6546:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 209,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6562:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 207,
														"id": 212,
														"nodeType": "Return",
														"src": "6539:38:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6359:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:1"
									},
									"scope": 1653,
									"src": "6304:290:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "6735:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 124,
													"src": "6752:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "6745:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "6726:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:1"
									},
									"scope": 1653,
									"src": "6671:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1817
									],
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7126:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 233,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "7140:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 234,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "7136:60:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 239,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "7168:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7168:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 241,
													"nodeType": "RevertStatement",
													"src": "7161:35:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 243,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "7213:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 245,
														"indexExpression": {
															"id": 244,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "7232:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7213:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 246,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "7241:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7213:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 232,
												"id": 248,
												"nodeType": "Return",
												"src": "7206:62:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:1"
									},
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7064:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7117:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:1"
									},
									"scope": 1653,
									"src": "7045:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "7422:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 258,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "7440:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 260,
																	"indexExpression": {
																		"id": 259,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "7459:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7440:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 261,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "7469:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7440:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 263,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7439:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 264,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "7494:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7439:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 266,
												"nodeType": "Return",
												"src": "7432:89:1"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7281:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7361:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7383:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7375:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7374:15:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7413:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7412:9:1"
									},
									"scope": 1653,
									"src": "7352:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7691:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 276,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "7709:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"id": 277,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7728:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7709:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 279,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "7738:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 281,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7708:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 282,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "7763:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7708:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 275,
												"id": 284,
												"nodeType": "Return",
												"src": "7701:89:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7534:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7630:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7644:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7643:15:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7682:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7681:9:1"
									},
									"scope": 1653,
									"src": "7621:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "7973:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 296,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "7997:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"id": 297,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "8016:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7997:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 299,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "8026:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7997:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7990:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 294,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7990:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7990:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 293,
												"id": 302,
												"nodeType": "Return",
												"src": "7983:55:1"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7803:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7919:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7935:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "7927:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7926:15:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "7965:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 291,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7965:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7964:8:1"
									},
									"scope": 1653,
									"src": "7910:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "8288:334:1",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8306:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "8298:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8298:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"baseExpression": {
														"id": 314,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8315:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "8334:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8315:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8298:42:1"
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8358:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "8350:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"nodeType": "VariableDeclarationStatement",
												"src": "8350:17:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8450:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8464:16:1",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8477:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8464:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 309,
														"isOffset": false,
														"isSlot": false,
														"src": "8477:3:1",
														"valueSize": 1
													},
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": false,
														"src": "8464:9:1",
														"valueSize": 1
													}
												],
												"id": 321,
												"nodeType": "InlineAssembly",
												"src": "8441:49:1"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "8499:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 323,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "8509:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 324,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "8518:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8509:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 326,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8508:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 327,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "8546:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 328,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "8559:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8546:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 330,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8545:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8508:63:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8499:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "8499:72:1"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 334,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "8581:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 336,
														"indexExpression": {
															"id": 335,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "8600:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8581:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 337,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "8609:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8581:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "8581:34:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "8051:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8236:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8266:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8259:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 308,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8259:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8243:27:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8288:0:1"
									},
									"scope": 1653,
									"src": "8227:395:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1782
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "9246:539:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "9558:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9573:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9558:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 353,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "9634:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9649:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9634:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9558:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 357,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "9710:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9725:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9710:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9558:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 349,
												"id": 361,
												"nodeType": "Return",
												"src": "9539:196:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "8809:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9164:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9222:8:1"
									},
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9189:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9182:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 343,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9182:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9181:20:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9240:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9240:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9239:6:1"
									},
									"scope": 1653,
									"src": "9155:630:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1897
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "10108:29:1",
										"statements": [
											{
												"expression": {
													"id": 370,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 126,
													"src": "10125:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "10118:12:1"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9976:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10048:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10075:8:1"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10052:2:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "10093:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10093:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10092:15:1"
									},
									"scope": 1653,
									"src": "10039:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1903
									],
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "10279:31:1",
										"statements": [
											{
												"expression": {
													"id": 380,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "10296:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 379,
												"id": 381,
												"nodeType": "Return",
												"src": "10289:14:1"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "10143:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10217:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 376,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10246:8:1"
									},
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:2:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10264:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10264:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10263:15:1"
									},
									"scope": 1653,
									"src": "10208:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1911
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "10499:225:1",
										"statements": [
											{
												"condition": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10513:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 393,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10522:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 392,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10514:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "10509:59:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 396,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "10539:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10539:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 398,
													"nodeType": "RevertStatement",
													"src": "10532:36:1"
												}
											},
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10593:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "10579:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 400,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10579:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10603:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10603:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10579:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 407,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "10636:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10630:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10630:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10630:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10630:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10630:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10715:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10630:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 416,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "10683:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 418,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "10702:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 417,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1652,
																			"src": "10692:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10692:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 414,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10666:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10666:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10666:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10659:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 412,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10659:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10659:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 391,
												"id": 424,
												"nodeType": "Return",
												"src": "10623:94:1"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "10316:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10420:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 388,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10466:8:1"
									},
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10429:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:17:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10484:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10484:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10483:15:1"
									},
									"scope": 1653,
									"src": "10411:313:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11035:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11052:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "11045:9:1"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "10730:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10978:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10986:2:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11020:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11020:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11019:15:1"
									},
									"scope": 1653,
									"src": "10969:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "11472:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 449,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "11524:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 448,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "11505:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11505:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11497:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11497:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11497:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11489:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 443,
												"id": 453,
												"nodeType": "Return",
												"src": "11482:52:1"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "11255:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11400:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 440,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11445:8:1"
									},
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11416:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "11408:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11407:17:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "11463:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11462:9:1"
									},
									"scope": 1653,
									"src": "11391:150:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11817:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 466,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "11872:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 465,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "11853:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11853:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "11834:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1768_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "11827:54:1"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "11547:172:1",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11733:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11754:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11746:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11746:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11745:17:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "11794:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1768,
														"src": "11794:14:1"
													},
													"referencedDeclaration": 1768,
													"src": "11794:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1768_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11793:23:1"
									},
									"scope": 1653,
									"src": "11724:164:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "12070:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 481,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "12106:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 483,
															"indexExpression": {
																"id": 482,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "12124:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12106:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "12087:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1768_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12087:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 479,
												"id": 485,
												"nodeType": "Return",
												"src": "12080:51:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "11894:80:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "11988:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12009:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "12001:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12000:15:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "12047:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 476,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1768,
														"src": "12047:14:1"
													},
													"referencedDeclaration": 1768,
													"src": "12047:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1768_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12046:23:1"
									},
									"scope": 1653,
									"src": "11979:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "12310:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 493,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "12324:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 495,
														"indexExpression": {
															"id": 494,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "12342:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12324:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12352:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12324:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "12320:112:1",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "12355:77:1",
													"statements": [
														{
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 498,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "12369:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 500,
																	"indexExpression": {
																		"id": 499,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "12387:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12369:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 502,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "12415:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 501,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "12396:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12396:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12369:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "12369:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "12144:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12255:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12286:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "12278:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12277:15:1"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12310:0:1"
									},
									"scope": 1653,
									"src": "12246:192:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "12591:1173:1",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12609:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "12601:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12601:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"id": 519,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 512,
													"src": "12616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12601:22:1"
											},
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "12634:1076:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 521,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "12662:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12662:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 523,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "12681:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12662:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 557,
														"nodeType": "IfStatement",
														"src": "12658:1042:1",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 525,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "12707:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 526,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "12714:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12707:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 556,
															"nodeType": "IfStatement",
															"src": "12703:997:1",
															"trueBody": {
																"id": 555,
																"nodeType": "Block",
																"src": "12729:971:1",
																"statements": [
																	{
																		"assignments": [
																			529
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 529,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "12759:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 555,
																				"src": "12751:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 528,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12751:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 533,
																		"initialValue": {
																			"baseExpression": {
																				"id": 530,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "12768:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 532,
																			"indexExpression": {
																				"id": 531,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 518,
																				"src": "12786:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12768:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12751:40:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 536,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 534,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 529,
																					"src": "12855:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 535,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 87,
																					"src": "12864:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12855:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12883:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12855:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 554,
																		"nodeType": "IfStatement",
																		"src": "12851:831:1",
																		"trueBody": {
																			"id": 553,
																			"nodeType": "Block",
																			"src": "12886:796:1",
																			"statements": [
																				{
																					"body": {
																						"id": 549,
																						"nodeType": "Block",
																						"src": "13530:91:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 547,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 542,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 529,
																										"src": "13560:6:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 543,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 132,
																											"src": "13569:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 546,
																										"indexExpression": {
																											"id": 545,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13587:6:1",
																											"subExpression": {
																												"id": 544,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 518,
																												"src": "13589:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13569:25:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13560:34:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 548,
																								"nodeType": "ExpressionStatement",
																								"src": "13560:34:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 539,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 529,
																							"src": "13517:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13527:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13517:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 550,
																					"nodeType": "WhileStatement",
																					"src": "13510:111:1"
																				},
																				{
																					"expression": {
																						"id": 551,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 529,
																						"src": "13653:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 516,
																					"id": 552,
																					"nodeType": "Return",
																					"src": "13646:13:1"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 559,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "13726:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13726:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "RevertStatement",
												"src": "13719:38:1"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "12444:66:1",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12524:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12551:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "12543:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12542:17:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "12582:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12581:9:1"
									},
									"scope": 1653,
									"src": "12515:1249:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "13957:262:1",
										"statements": [
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 572,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "13967:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 579,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "14000:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13992:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 577,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13992:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13992:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13984:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13984:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13984:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13967:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "13967:41:1"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 584,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "14018:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1763,
														"src": "14018:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 589,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "14052:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 590,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "14062:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14052:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14045:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 587,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14045:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14045:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14018:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "14018:68:1"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 595,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "14096:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1765,
														"src": "14096:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "14115:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 599,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "14124:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14115:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14143:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14115:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14096:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "14096:48:1"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 605,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "14154:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1767,
														"src": "14154:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 610,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "14183:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 611,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "14193:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14183:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14176:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 608,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14176:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14176:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14154:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "14154:58:1"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "13770:83:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "13867:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "13894:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "13886:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13885:16:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "13946:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "13924:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1768_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 568,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1768,
														"src": "13924:14:1"
													},
													"referencedDeclaration": 1768,
													"src": "13924:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1768_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:33:1"
									},
									"scope": 1653,
									"src": "13858:361:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "14393:347:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14412:322:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14522:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14535:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14542:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14522:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14664:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "14678:23:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "14703:9:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14703:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14674:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14674:41:1"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "14717:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14671:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14671:52:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14661:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "14542:16:1",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "14678:23:1",
														"valueSize": 1
													},
													{
														"declaration": 622,
														"isOffset": false,
														"isSlot": false,
														"src": "14717:5:1",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "14522:5:1",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "14535:5:1",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "14664:5:1",
														"valueSize": 1
													},
													{
														"declaration": 625,
														"isOffset": false,
														"isSlot": false,
														"src": "14651:6:1",
														"valueSize": 1
													}
												],
												"id": 627,
												"nodeType": "InlineAssembly",
												"src": "14403:331:1"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "14225:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14306:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14333:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "14325:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14348:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "14340:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14324:30:1"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14385:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "14377:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14377:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14376:16:1"
									},
									"scope": 1653,
									"src": "14297:443:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "14923:232:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15007:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15083:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15097:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15126:8:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15136:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15123:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15093:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:46:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "15097:24:1",
														"valueSize": 1
													},
													{
														"declaration": 632,
														"isOffset": false,
														"isSlot": false,
														"src": "15126:8:1",
														"valueSize": 1
													},
													{
														"declaration": 635,
														"isOffset": false,
														"isSlot": false,
														"src": "15083:6:1",
														"valueSize": 1
													}
												],
												"id": 637,
												"nodeType": "InlineAssembly",
												"src": "14998:151:1"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "14746:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "14846:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14875:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "14867:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:18:1"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14915:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "14907:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14906:16:1"
									},
									"scope": 1653,
									"src": "14837:318:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1865
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "15890:320:1",
										"statements": [
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15908:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "15900:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 648,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15900:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "15924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "15916:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15916:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15900:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 654,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "15947:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15947:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 656,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "15970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15947:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "15943:172:1",
												"trueBody": {
													"condition": {
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15993:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 659,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "16011:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 660,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "16018:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16018:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 658,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "15994:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15994:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "15989:126:1",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "16040:75:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 664,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "16065:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16065:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "16058:42:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 670,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "16125:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$54_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 672,
															"indexExpression": {
																"id": 671,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "16141:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16125:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "16125:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 674,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "16158:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16125:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "16125:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 678,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "16184:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "16191:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "16195:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 677,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "16175:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16175:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "EmitStatement",
												"src": "16170:33:1"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "15348:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15821:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 646,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15881:8:1"
									},
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15837:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "15829:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15829:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15849:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "15841:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15828:29:1"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15890:0:1"
									},
									"scope": 1653,
									"src": "15812:398:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1881
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "16445:129:1",
										"statements": [
											{
												"condition": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16459:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 694,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 693,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "16460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16460:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "16455:64:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 697,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "16485:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16485:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 699,
													"nodeType": "RevertStatement",
													"src": "16478:41:1"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 701,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "16537:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$54_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 703,
														"indexExpression": {
															"id": 702,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16553:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16537:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 53,
													"src": "16537:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 692,
												"id": 705,
												"nodeType": "Return",
												"src": "16530:37:1"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "16216:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16369:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16418:8:1"
									},
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16389:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "16381:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16380:17:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "16436:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16435:9:1"
									},
									"scope": 1653,
									"src": "16360:214:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1873
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "16985:147:1",
										"statements": [
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 716,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "16995:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 720,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 717,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "17014:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17014:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16995:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 719,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "17035:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16995:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "17047:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16995:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "16995:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 726,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "17085:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17085:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "17106:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "17116:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 725,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "17070:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17070:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "EmitStatement",
												"src": "17065:60:1"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "16580:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16910:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16976:8:1"
									},
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16936:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "16928:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16951:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "16946:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16946:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16927:33:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16985:0:1"
									},
									"scope": 1653,
									"src": "16901:231:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1891
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "17385:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 744,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "17402:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 746,
														"indexExpression": {
															"id": 745,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "17421:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17402:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 748,
													"indexExpression": {
														"id": 747,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "17428:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17402:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 743,
												"id": 749,
												"nodeType": "Return",
												"src": "17395:42:1"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "17138:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17291:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17361:8:1"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17316:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "17308:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17331:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "17323:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17307:33:1"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "17379:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17379:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17378:6:1"
									},
									"scope": 1653,
									"src": "17282:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "17764:206:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 759,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "17793:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17793:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 761,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "17812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17793:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "17835:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 764,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "17845:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17835:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17793:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 767,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "17895:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"id": 768,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "17913:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17895:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 770,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "17924:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17895:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17943:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17895:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17793:151:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 758,
												"id": 775,
												"nodeType": "Return",
												"src": "17774:170:1"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "17450:238:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "17702:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17718:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "17710:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17710:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17709:17:1"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "17758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17757:6:1"
									},
									"scope": 1653,
									"src": "17693:277:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "18232:488:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18251:463:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18361:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18374:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18381:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18370:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18370:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18361:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18511:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "18528:9:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18539:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18524:32:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "18511:9:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18638:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18654:9:1"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "18665:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18651:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18651:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18676:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "18687:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18673:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18673:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18648:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18648:56:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18638:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "18381:16:1",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "18539:16:1",
														"valueSize": 1
													},
													{
														"declaration": 780,
														"isOffset": false,
														"isSlot": false,
														"src": "18687:15:1",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "18511:9:1",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "18528:9:1",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "18654:9:1",
														"valueSize": 1
													},
													{
														"declaration": 784,
														"isOffset": false,
														"isSlot": false,
														"src": "18676:9:1",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "18361:5:1",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "18374:5:1",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "18665:5:1",
														"valueSize": 1
													},
													{
														"declaration": 787,
														"isOffset": false,
														"isSlot": false,
														"src": "18638:6:1",
														"valueSize": 1
													}
												],
												"id": 789,
												"nodeType": "InlineAssembly",
												"src": "18242:472:1"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "17976:93:1",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18083:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18125:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18117:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18158:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18150:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18181:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18107:89:1"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18224:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "18219:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18219:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18218:13:1"
									},
									"scope": 1653,
									"src": "18074:646:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "18985:317:1",
										"statements": [
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19020:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "18995:38:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 802,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 801,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 54,
																"src": "18995:16:1"
															},
															"referencedDeclaration": 54,
															"src": "18995:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"baseExpression": {
														"id": 804,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "19036:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$54_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 806,
													"indexExpression": {
														"id": 805,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "19052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19036:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$54_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18995:65:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19173:123:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19187:41:1",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19210:18:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19187:19:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19241:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19266:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19260:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19241:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 799,
														"isOffset": false,
														"isSlot": false,
														"src": "19241:15:1",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "19187:19:1",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "19266:19:1",
														"valueSize": 1
													},
													{
														"declaration": 803,
														"isOffset": false,
														"isSlot": true,
														"src": "19210:18:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "19164:132:1"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "18726:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "18837:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18872:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18864:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18863:17:1"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "18935:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18927:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18964:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "18956:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18926:54:1"
									},
									"scope": 1653,
									"src": "18828:474:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "20030:2637:1",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20048:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "20040:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20040:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"id": 824,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "20089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "20070:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20070:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20040:57:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 831,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "20128:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20120:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20120:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20120:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20112:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 827,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20112:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20112:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 834,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "20153:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20112:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "20108:86:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 836,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "20166:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20166:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 838,
													"nodeType": "RevertStatement",
													"src": "20159:35:1"
												}
											},
											{
												"assignments": [
													841,
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20214:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "20206:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20206:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20243:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "20235:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 842,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20235:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"initialValue": {
													"arguments": [
														{
															"id": 845,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "20289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "20262:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20262:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20205:92:1"
											},
											{
												"condition": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20393:69:1",
													"subExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "20419:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 850,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "20436:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "20442:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20442:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 848,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "20394:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20394:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "IfStatement",
												"src": "20389:179:1",
												"trueBody": {
													"condition": {
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "20480:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 856,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "20498:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 857,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "20504:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20504:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 855,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "20481:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20481:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 864,
													"nodeType": "IfStatement",
													"src": "20476:92:1",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 861,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "20533:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20533:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 863,
														"nodeType": "RevertStatement",
														"src": "20526:42:1"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "20583:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20597:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20589:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 867,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20589:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20589:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20583:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 875,
												"nodeType": "IfStatement",
												"src": "20579:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 872,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "20608:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20608:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 874,
													"nodeType": "RevertStatement",
													"src": "20601:30:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "20664:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "20670:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "20674:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20683:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 876,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "20642:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20642:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "20642:43:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20757:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20790:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "20891:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "20884:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20884:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20884:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "20774:15:1"
															},
															"nodeType": "YulIf",
															"src": "20771:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 843,
														"isOffset": false,
														"isSlot": false,
														"src": "20774:15:1",
														"valueSize": 1
													},
													{
														"declaration": 841,
														"isOffset": false,
														"isSlot": false,
														"src": "20891:19:1",
														"valueSize": 1
													}
												],
												"id": 883,
												"nodeType": "InlineAssembly",
												"src": "20748:190:1"
											},
											{
												"id": 940,
												"nodeType": "UncheckedBlock",
												"src": "21205:1361:1",
												"statements": [
													{
														"expression": {
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21298:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 884,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "21300:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 886,
																"indexExpression": {
																	"id": 885,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "21319:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21300:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 888,
														"nodeType": "ExpressionStatement",
														"src": "21298:26:1"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21366:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 889,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "21368:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 891,
																"indexExpression": {
																	"id": 890,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "21387:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21368:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "21366:24:1"
													},
													{
														"expression": {
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 894,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "21654:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 896,
																"indexExpression": {
																	"id": 895,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "21672:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21654:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 898,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "21719:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 899,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "21739:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 901,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 813,
																					"src": "21782:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 902,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "21788:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 903,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "21792:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 900,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "21767:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21767:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21739:73:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 897,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "21683:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21683:143:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21654:172:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 908,
														"nodeType": "ExpressionStatement",
														"src": "21654:172:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 909,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "21943:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 910,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "21965:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21943:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21994:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21943:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 939,
														"nodeType": "IfStatement",
														"src": "21939:617:1",
														"trueBody": {
															"id": 938,
															"nodeType": "Block",
															"src": "21997:559:1",
															"statements": [
																{
																	"assignments": [
																		915
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 915,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22023:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 938,
																			"src": "22015:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 914,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22015:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 919,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 916,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "22037:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22047:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22037:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22015:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 920,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "22168:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 922,
																			"indexExpression": {
																				"id": 921,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "22186:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22168:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22202:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22168:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 937,
																	"nodeType": "IfStatement",
																	"src": "22164:378:1",
																	"trueBody": {
																		"id": 936,
																		"nodeType": "Block",
																		"src": "22205:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 925,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 915,
																						"src": "22289:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 926,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 122,
																						"src": "22304:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22289:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 935,
																				"nodeType": "IfStatement",
																				"src": "22285:239:1",
																				"trueBody": {
																					"id": 934,
																					"nodeType": "Block",
																					"src": "22319:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 932,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 928,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 132,
																										"src": "22449:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 930,
																									"indexExpression": {
																										"id": 929,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 915,
																										"src": "22467:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "22449:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 931,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 822,
																									"src": "22482:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "22449:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 933,
																							"nodeType": "ExpressionStatement",
																							"src": "22449:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "22590:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "22596:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "22600:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "22581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22581:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "EmitStatement",
												"src": "22576:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "22639:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "22645:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "22649:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22658:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 947,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "22618:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22618:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "22618:42:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "19495:403:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19912:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20021:8:1"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19942:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "19934:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19964:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "19956:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "19976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19924:73:1"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20030:0:1"
									},
									"scope": 1653,
									"src": "19903:2764:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1847
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "22889:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "22916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "22922:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "22926:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22935:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 966,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															974,
															1012
														],
														"referencedDeclaration": 1012,
														"src": "22899:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22899:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "22899:39:1"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "22673:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "22767:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 964,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22880:8:1"
									},
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22801:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "22793:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22823:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "22815:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22815:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "22835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22835:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22783:73:1"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22889:0:1"
									},
									"scope": 1653,
									"src": "22758:187:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1837
									],
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "23685:237:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "23708:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "23714:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "23718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "23695:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23695:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "23695:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 993,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "23740:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "23740:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23740:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23758:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23740:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "23736:180:1",
												"trueBody": {
													"condition": {
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23777:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 999,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "23809:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1000,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "23815:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1001,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "23819:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1002,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "23828:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 998,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "23778:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23778:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1009,
													"nodeType": "IfStatement",
													"src": "23773:143:1",
													"trueBody": {
														"id": 1008,
														"nodeType": "Block",
														"src": "23836:80:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1005,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "23861:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23861:40:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1007,
																"nodeType": "RevertStatement",
																"src": "23854:47:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "22951:570:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23535:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 985,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23676:8:1"
									},
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23569:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "23561:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23561:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23591:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "23583:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23611:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "23603:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "23641:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "23628:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23628:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23551:101:1"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23685:0:1"
									},
									"scope": 1653,
									"src": "23526:396:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "24718:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "23928:633:1",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "24575:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24614:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24606:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24606:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24656:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24648:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24686:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "24678:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24596:104:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24718:0:1"
									},
									"scope": 1653,
									"src": "24566:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "25518:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "24726:636:1",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "25376:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25414:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25406:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25436:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25428:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25456:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25448:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25486:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25478:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25396:104:1"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25518:0:1"
									},
									"scope": 1653,
									"src": "25367:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "26112:533:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1073,
															"nodeType": "Block",
															"src": "26261:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1065,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1063,
																			"src": "26282:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1067,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1043,
																							"src": "26317:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1066,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 48,
																						"src": "26292:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$48_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26292:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$48",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 47,
																				"src": "26292:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26292:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26282:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1051,
																	"id": 1072,
																	"nodeType": "Return",
																	"src": "26275:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1074,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1064,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1063,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26244:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1074,
																	"src": "26237:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26237:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26223:37:1"
														},
														"src": "26215:142:1"
													},
													{
														"block": {
															"id": 1089,
															"nodeType": "Block",
															"src": "26386:253:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1078,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "26404:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "26404:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26421:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "26404:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1087,
																		"nodeType": "Block",
																		"src": "26510:119:1",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "26537:78:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "26570:2:1",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26574:6:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "26566:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26566:15:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26589:6:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26583:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26583:13:1"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "26559:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26559:38:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26559:38:1"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1076,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26574:6:1",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1076,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26589:6:1",
																						"valueSize": 1
																					}
																				],
																				"id": 1086,
																				"nodeType": "InlineAssembly",
																				"src": "26528:87:1"
																			}
																		]
																	},
																	"id": 1088,
																	"nodeType": "IfStatement",
																	"src": "26400:229:1",
																	"trueBody": {
																		"id": 1085,
																		"nodeType": "Block",
																		"src": "26424:80:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1082,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1747,
																						"src": "26449:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26449:40:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1084,
																				"nodeType": "RevertStatement",
																				"src": "26442:47:1"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1090,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1077,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1076,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "26378:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1090,
																	"src": "26365:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1075,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "26365:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26364:21:1"
														},
														"src": "26358:281:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1056,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "26172:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26172:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "26193:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "26199:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1060,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "26208:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1053,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "26151:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1052,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "26126:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$48_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26126:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$48",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "26126:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26126:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1091,
												"nodeType": "TryStatement",
												"src": "26122:517:1"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "25526:417:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "25957:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26005:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "25997:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25997:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26027:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26019:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26019:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26047:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26077:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26064:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26064:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25987:101:1"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26106:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26106:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26105:6:1"
									},
									"scope": 1653,
									"src": "25948:697:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "27153:2840:1",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27171:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "27163:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27163:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"id": 1103,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "27186:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27163:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "27213:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27225:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27213:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "27209:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1108,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "27235:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27235:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1110,
													"nodeType": "RevertStatement",
													"src": "27228:25:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27294:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27286:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27286:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27286:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "27298:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "27302:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1119,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "27316:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "27264:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27264:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "27264:61:1"
											},
											{
												"id": 1177,
												"nodeType": "UncheckedBlock",
												"src": "27508:2409:1",
												"statements": [
													{
														"expression": {
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1122,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "27728:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1124,
																"indexExpression": {
																	"id": 1123,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "27747:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27728:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1125,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "27754:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27767:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1127,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 65,
																							"src": "27772:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "27767:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1129,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27766:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27797:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27766:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1132,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "27765:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27754:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27728:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1135,
														"nodeType": "ExpressionStatement",
														"src": "27728:71:1"
													},
													{
														"expression": {
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1136,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "28035:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1138,
																"indexExpression": {
																	"id": 1137,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "28053:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28035:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1140,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "28105:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1142,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "28146:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1141,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "28125:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28125:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28181:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28173:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1145,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28173:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1148,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28173:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1149,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "28185:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28189:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1144,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "28158:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28158:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28125:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1139,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "28069:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28069:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28035:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1155,
														"nodeType": "ExpressionStatement",
														"src": "28035:170:1"
													},
													{
														"assignments": [
															1157
														],
														"declarations": [
															{
																"constant": false,
																"id": 1157,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28228:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1177,
																"src": "28220:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28220:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1158,
														"nodeType": "VariableDeclarationStatement",
														"src": "28220:16:1"
													},
													{
														"assignments": [
															1160
														],
														"declarations": [
															{
																"constant": false,
																"id": 1160,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "28258:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1177,
																"src": "28250:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1159,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28250:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1164,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "28264:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1162,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "28279:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28264:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28250:37:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28657:1157:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28772:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "28788:2:1"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "28792:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28784:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "28772:8:1"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28898:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28958:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29016:25:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29077:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29117:8:1"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29156:12:1"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "28872:4:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28872:328:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28872:328:1"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "29633:167:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29728:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29731:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "29734:25:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29761:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "29764:8:1"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29774:7:1"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29723:4:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29723:59:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29723:59:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29551:7:1"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "29560:3:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "29548:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29548:16:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "29541:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29541:24:1"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "29566:66:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "29588:26:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29603:7:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29612:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29599:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29599:15:1"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29588:7:1"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "29465:75:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "29487:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29506:12:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29520:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29502:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29502:20:1"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "29491:7:1",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "29461:339:1"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 114,
																"isOffset": false,
																"isSlot": false,
																"src": "28792:16:1",
																"valueSize": 1
															},
															{
																"declaration": 120,
																"isOffset": false,
																"isSlot": false,
																"src": "29016:25:1",
																"valueSize": 1
															},
															{
																"declaration": 120,
																"isOffset": false,
																"isSlot": false,
																"src": "29734:25:1",
																"valueSize": 1
															},
															{
																"declaration": 1160,
																"isOffset": false,
																"isSlot": false,
																"src": "29560:3:1",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "29156:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1102,
																"isOffset": false,
																"isSlot": false,
																"src": "29506:12:1",
																"valueSize": 1
															},
															{
																"declaration": 1096,
																"isOffset": false,
																"isSlot": false,
																"src": "28788:2:1",
																"valueSize": 1
															},
															{
																"declaration": 1157,
																"isOffset": false,
																"isSlot": false,
																"src": "28772:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1157,
																"isOffset": false,
																"isSlot": false,
																"src": "29117:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1157,
																"isOffset": false,
																"isSlot": false,
																"src": "29764:8:1",
																"valueSize": 1
															}
														],
														"id": 1165,
														"nodeType": "InlineAssembly",
														"src": "28648:1166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1166,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "29831:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29843:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29831:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1172,
														"nodeType": "IfStatement",
														"src": "29827:45:1",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1169,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "29853:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29853:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1171,
															"nodeType": "RevertStatement",
															"src": "29846:26:1"
														}
													},
													{
														"expression": {
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1173,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "29887:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1174,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "29903:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29887:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1176,
														"nodeType": "ExpressionStatement",
														"src": "29887:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29955:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29947:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29947:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29947:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "29959:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "29963:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1185,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "29977:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "29926:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29926:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "29926:60:1"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "26836:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27100:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27114:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "27106:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27126:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "27118:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27118:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27105:30:1"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27153:0:1"
									},
									"scope": 1653,
									"src": "27091:2902:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "30902:1374:1",
										"statements": [
											{
												"assignments": [
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30920:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1300,
														"src": "30912:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30912:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"id": 1199,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "30935:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30912:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1201,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "30962:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30976:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30968:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1202,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30968:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30968:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30962:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "30958:48:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1207,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "30987:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30987:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1209,
													"nodeType": "RevertStatement",
													"src": "30980:26:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "31020:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31032:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31020:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "31016:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1214,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "31042:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31042:18:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1216,
													"nodeType": "RevertStatement",
													"src": "31035:25:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "31074:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1219,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "31085:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31074:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "31070:89:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1221,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "31126:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31126:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1223,
													"nodeType": "RevertStatement",
													"src": "31119:40:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31200:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31192:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31192:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31192:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "31204:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "31208:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1232,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "31222:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "31170:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31170:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "31170:61:1"
											},
											{
												"id": 1289,
												"nodeType": "UncheckedBlock",
												"src": "31340:860:1",
												"statements": [
													{
														"expression": {
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1235,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "31560:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1237,
																"indexExpression": {
																	"id": 1236,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "31579:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31560:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1238,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "31586:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1241,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1239,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31599:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1240,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 65,
																							"src": "31604:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31599:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1242,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31598:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31629:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31598:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31597:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31586:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31560:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1248,
														"nodeType": "ExpressionStatement",
														"src": "31560:71:1"
													},
													{
														"expression": {
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1249,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "31867:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1251,
																"indexExpression": {
																	"id": 1250,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "31885:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31867:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1253,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "31937:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1255,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1194,
																					"src": "31978:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1254,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "31957:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31957:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32013:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32005:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1258,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32005:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32005:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1262,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "32017:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1263,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32021:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1257,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "31990:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31990:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31957:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1252,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "31901:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31901:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31867:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1268,
														"nodeType": "ExpressionStatement",
														"src": "31867:170:1"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1270,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "32077:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1271,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "32091:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1272,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "32106:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32091:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32117:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32091:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32128:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32120:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1276,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32120:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32120:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1280,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "32132:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1269,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "32057:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32057:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1282,
														"nodeType": "EmitStatement",
														"src": "32052:83:1"
													},
													{
														"expression": {
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1283,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "32150:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1284,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "32166:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1285,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "32181:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32166:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32150:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1288,
														"nodeType": "ExpressionStatement",
														"src": "32150:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32238:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32230:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32230:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32230:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "32242:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "32246:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1297,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "32260:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1290,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "32209:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32209:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "32209:60:1"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "29999:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "30842:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "30855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30875:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "30867:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30854:30:1"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30902:0:1"
									},
									"scope": 1653,
									"src": "30833:1443:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "32791:553:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "32807:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "32811:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1311,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "32801:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32801:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "32801:19:1"
											},
											{
												"id": 1361,
												"nodeType": "UncheckedBlock",
												"src": "32831:507:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1316,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "32859:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "32859:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32859:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32877:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32859:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1360,
														"nodeType": "IfStatement",
														"src": "32855:473:1",
														"trueBody": {
															"id": 1359,
															"nodeType": "Block",
															"src": "32880:448:1",
															"statements": [
																{
																	"assignments": [
																		1322
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1322,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "32906:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1359,
																			"src": "32898:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1321,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32898:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1324,
																	"initialValue": {
																		"id": 1323,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "32912:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32898:27:1"
																},
																{
																	"assignments": [
																		1326
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1326,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "32951:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1359,
																			"src": "32943:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1325,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32943:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1330,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1327,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "32959:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1328,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1306,
																			"src": "32965:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32959:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32943:30:1"
																},
																{
																	"body": {
																		"id": 1347,
																		"nodeType": "Block",
																		"src": "32994:205:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 1341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33020:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1334,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33060:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1333,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33052:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1332,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33052:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1335,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33052:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1336,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1304,
																								"src": "33064:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1338,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33068:7:1",
																								"subExpression": {
																									"id": 1337,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1326,
																									"src": "33068:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1339,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1308,
																								"src": "33077:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1331,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1093,
																							"src": "33021:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33021:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1346,
																				"nodeType": "IfStatement",
																				"src": "33016:165:1",
																				"trueBody": {
																					"id": 1345,
																					"nodeType": "Block",
																					"src": "33085:96:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1342,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1747,
																									"src": "33118:38:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1343,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33118:40:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1344,
																							"nodeType": "RevertStatement",
																							"src": "33111:47:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1348,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1326,
																			"src": "33207:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1349,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "33215:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33207:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1351,
																	"nodeType": "DoWhileStatement",
																	"src": "32991:229:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1352,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 122,
																			"src": "33283:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1353,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "33300:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33283:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1358,
																	"nodeType": "IfStatement",
																	"src": "33279:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1355,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "33305:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33305:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1357,
																		"nodeType": "ExpressionStatement",
																		"src": "33305:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "32282:388:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "32684:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32711:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "32703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32731:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "32723:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32723:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32762:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "32749:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32749:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32693:80:1"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32791:0:1"
									},
									"scope": 1653,
									"src": "32675:669:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "33489:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "33509:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "33513:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33523:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1371,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1363,
															1378
														],
														"referencedDeclaration": 1363,
														"src": "33499:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33499:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "33499:27:1"
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "33350:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33432:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33450:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "33442:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33462:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "33454:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33441:30:1"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33489:0:1"
									},
									"scope": 1653,
									"src": "33423:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "33840:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1385,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "33856:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33865:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1384,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1390,
															1542
														],
														"referencedDeclaration": 1542,
														"src": "33850:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33850:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "33850:21:1"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "33724:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "33800:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33814:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "33806:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33805:17:1"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33840:0:1"
									},
									"scope": 1653,
									"src": "33791:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "34164:2946:1",
										"statements": [
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34182:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "34174:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34174:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"arguments": [
														{
															"id": 1401,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "34223:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "34204:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34204:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34174:57:1"
											},
											{
												"assignments": [
													1405
												],
												"declarations": [
													{
														"constant": false,
														"id": 1405,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "34250:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "34242:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34242:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "34273:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34265:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "34265:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34265:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34257:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1406,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34257:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34257:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34242:52:1"
											},
											{
												"assignments": [
													1415,
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "34314:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "34306:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "34343:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "34335:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"arguments": [
														{
															"id": 1419,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "34389:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1418,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "34362:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34362:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34305:92:1"
											},
											{
												"condition": {
													"id": 1422,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1395,
													"src": "34412:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "34408:312:1",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "34427:293:1",
													"statements": [
														{
															"condition": {
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "34530:69:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1424,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1417,
																			"src": "34556:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1425,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "34573:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1426,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "34579:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34579:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1423,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "34531:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34531:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1440,
															"nodeType": "IfStatement",
															"src": "34526:183:1",
															"trueBody": {
																"condition": {
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "34621:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1431,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "34639:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1432,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1642,
																					"src": "34645:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34645:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1430,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "34622:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34622:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1439,
																"nodeType": "IfStatement",
																"src": "34617:92:1",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1436,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "34674:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34674:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1438,
																	"nodeType": "RevertStatement",
																	"src": "34667:42:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1444,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "34752:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34766:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34758:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34758:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "34770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34779:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1443,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "34730:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34730:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "34730:51:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "34853:181:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34886:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "34987:19:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35008:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "34980:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34980:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34980:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "34870:15:1"
															},
															"nodeType": "YulIf",
															"src": "34867:157:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1417,
														"isOffset": false,
														"isSlot": false,
														"src": "34870:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": false,
														"src": "34987:19:1",
														"valueSize": 1
													}
												],
												"id": 1453,
												"nodeType": "InlineAssembly",
												"src": "34844:190:1"
											},
											{
												"id": 1517,
												"nodeType": "UncheckedBlock",
												"src": "35301:1545:1",
												"statements": [
													{
														"expression": {
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1454,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "35613:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1456,
																"indexExpression": {
																	"id": 1455,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "35632:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35613:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35642:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1458,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 68,
																				"src": "35647:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35642:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "35641:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35672:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35641:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35613:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1464,
														"nodeType": "ExpressionStatement",
														"src": "35613:60:1"
													},
													{
														"expression": {
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1465,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "35904:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1467,
																"indexExpression": {
																	"id": 1466,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "35922:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35904:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1469,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "35969:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1472,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1470,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 87,
																						"src": "35992:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1471,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 95,
																						"src": "36010:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "35992:43:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1473,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "35991:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1475,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1405,
																					"src": "36054:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1478,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36068:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1477,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36060:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1476,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36060:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1479,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36060:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1480,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1399,
																					"src": "36072:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1474,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "36039:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36039:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35991:101:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1468,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "35933:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35933:173:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35904:202:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1485,
														"nodeType": "ExpressionStatement",
														"src": "35904:202:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1486,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "36223:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1487,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "36245:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36223:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36274:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36223:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1516,
														"nodeType": "IfStatement",
														"src": "36219:617:1",
														"trueBody": {
															"id": 1515,
															"nodeType": "Block",
															"src": "36277:559:1",
															"statements": [
																{
																	"assignments": [
																		1492
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1492,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "36303:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1515,
																			"src": "36295:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1491,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36295:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1496,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1493,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "36317:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36327:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36317:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36295:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1497,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "36448:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1499,
																			"indexExpression": {
																				"id": 1498,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "36466:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36448:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36482:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36448:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1514,
																	"nodeType": "IfStatement",
																	"src": "36444:378:1",
																	"trueBody": {
																		"id": 1513,
																		"nodeType": "Block",
																		"src": "36485:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1502,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1492,
																						"src": "36569:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1503,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 122,
																						"src": "36584:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36569:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1512,
																				"nodeType": "IfStatement",
																				"src": "36565:239:1",
																				"trueBody": {
																					"id": 1511,
																					"nodeType": "Block",
																					"src": "36599:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1509,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1505,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 132,
																										"src": "36729:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1507,
																									"indexExpression": {
																										"id": 1506,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1492,
																										"src": "36747:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "36729:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1508,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1399,
																									"src": "36762:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "36729:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1510,
																							"nodeType": "ExpressionStatement",
																							"src": "36729:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "36870:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36884:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36876:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36876:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36876:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "36888:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "36861:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36861:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "EmitStatement",
												"src": "36856:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "36927:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36941:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36933:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36933:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36933:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1533,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "36945:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1527,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "36906:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36906:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "36906:50:1"
											},
											{
												"id": 1540,
												"nodeType": "UncheckedBlock",
												"src": "37055:49:1",
												"statements": [
													{
														"expression": {
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37079:14:1",
															"subExpression": {
																"id": 1537,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "37079:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1539,
														"nodeType": "ExpressionStatement",
														"src": "37079:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "33884:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34104:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34118:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "34110:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34110:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34132:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "34127:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34127:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34109:37:1"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34164:0:1"
									},
									"scope": 1653,
									"src": "34095:3015:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "37468:447:1",
										"statements": [
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "37486:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "37478:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37478:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"baseExpression": {
														"id": 1552,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "37495:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1554,
													"indexExpression": {
														"id": 1553,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "37513:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37495:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37478:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1556,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "37533:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37543:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "37533:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "37529:61:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1559,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "37553:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37553:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1561,
													"nodeType": "RevertStatement",
													"src": "37546:44:1"
												}
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "37608:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "37600:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37600:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"nodeType": "VariableDeclarationStatement",
												"src": "37600:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "37712:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37726:28:1",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "37745:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "37726:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1547,
														"isOffset": false,
														"isSlot": false,
														"src": "37745:9:1",
														"valueSize": 1
													},
													{
														"declaration": 1564,
														"isOffset": false,
														"isSlot": false,
														"src": "37726:15:1",
														"valueSize": 1
													}
												],
												"id": 1566,
												"nodeType": "InlineAssembly",
												"src": "37703:61:1"
											},
											{
												"expression": {
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1567,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "37773:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1568,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "37783:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1569,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "37792:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37783:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1571,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37782:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1572,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "37827:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1573,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "37846:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37827:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1575,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37826:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37782:83:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37773:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1578,
												"nodeType": "ExpressionStatement",
												"src": "37773:92:1"
											},
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1579,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "37875:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1581,
														"indexExpression": {
															"id": 1580,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "37893:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37875:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1582,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "37902:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37875:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "37875:33:1"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "37304:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "37402:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "37426:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "37418:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37418:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "37440:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "37433:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1546,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "37433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37417:33:1"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37468:0:1"
									},
									"scope": 1653,
									"src": "37393:522:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "38616:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "37921:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "38484:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38512:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "38504:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38534:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "38526:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "38553:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "38546:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1592,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38546:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38494:82:1"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "38608:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1595,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38608:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38607:8:1"
									},
									"scope": 1653,
									"src": "38475:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "38904:164:1",
										"statements": [
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "38921:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "38914:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1611,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38914:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1615,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "38940:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1616,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "38963:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38940:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "38933:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1613,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38933:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38933:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38914:68:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1623,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "39018:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1624,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "39024:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1625,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "39028:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1622,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "39007:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39007:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1620,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38999:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38999:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1628,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "39043:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38999:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1610,
												"id": 1630,
												"nodeType": "Return",
												"src": "38992:69:1"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "38624:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "38773:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38805:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "38797:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38827:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "38819:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "38847:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "38839:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38787:85:1"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "38895:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38895:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38894:9:1"
									},
									"scope": 1653,
									"src": "38764:304:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "39506:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1638,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "39523:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "39523:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1640,
												"nodeType": "Return",
												"src": "39516:17:1"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "39259:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "39446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39463:2:1"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "39497:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39497:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39496:9:1"
									},
									"scope": 1653,
									"src": "39437:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "39721:1624:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39740:1599:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40104:31:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "40123:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "40117:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "40117:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40130:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "40113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "40113:22:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "40108:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40214:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40220:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "40207:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40207:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "40279:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40290:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40293:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "40286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "40286:12:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40279:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "40368:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40373:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "40361:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40361:14:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40463:14:1",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "40474:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "40467:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40721:388:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "40739:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40750:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "40755:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "40746:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40746:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "40739:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40900:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "40909:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "40917:4:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "40923:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "40913:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "40913:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "40905:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40905:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "40892:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40892:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40892:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "40997:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41009:4:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41015:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41005:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41005:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "40997:4:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41086:9:1",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41088:5:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41080:4:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41073:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41073:12:1"
																		},
																		"nodeType": "YulIf",
																		"src": "41070:25:1"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "40716:1:1",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "40718:2:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "40694:21:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "40696:17:1",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "40708:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "40700:4:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "40690:419:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41123:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41141:3:1"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41146:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41137:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41137:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41127:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "41243:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41254:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41259:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41250:14:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41243:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41317:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "41322:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "41310:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41310:19:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40279:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40368:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40474:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40739:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40750:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "40900:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "41146:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "41243:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "41254:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1648,
														"isOffset": false,
														"isSlot": false,
														"src": "41317:3:1",
														"valueSize": 1
													},
													{
														"declaration": 1645,
														"isOffset": false,
														"isSlot": false,
														"src": "40708:5:1",
														"valueSize": 1
													}
												],
												"id": 1650,
												"nodeType": "InlineAssembly",
												"src": "39731:1608:1"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "39546:86:1",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "39646:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39664:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "39656:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39655:15:1"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "39716:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "39702:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39702:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39701:19:1"
									},
									"scope": 1653,
									"src": "39637:1708:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1654,
							"src": "895:40452:1",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759
							]
						}
					],
					"src": "84:41264:1"
				},
				"id": 1
			},
			"ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							1653
						],
						"ERC721ABurnable": [
							1676
						],
						"ERC721A__IERC721Receiver": [
							48
						],
						"IERC721A": [
							1923
						],
						"IERC721ABurnable": [
							1936
						]
					},
					"id": 1677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"absolutePath": "IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 1656,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1677,
							"sourceUnit": 1937,
							"src": "109:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721A.sol",
							"file": "./ERC721A.sol",
							"id": 1657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1677,
							"sourceUnit": 1654,
							"src": "142:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1659,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1653,
										"src": "309:7:2"
									},
									"id": 1660,
									"nodeType": "InheritanceSpecifier",
									"src": "309:7:2"
								},
								{
									"baseName": {
										"id": 1661,
										"name": "IERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1936,
										"src": "318:16:2"
									},
									"id": 1662,
									"nodeType": "InheritanceSpecifier",
									"src": "318:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1658,
								"nodeType": "StructuredDocumentation",
								"src": "167:104:2",
								"text": " @title ERC721ABurnable.\n @dev ERC721A token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 1676,
							"linearizedBaseContracts": [
								1676,
								1936,
								1653,
								1923
							],
							"name": "ERC721ABurnable",
							"nameLocation": "290:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1935
									],
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "564:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "580:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "589:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1669,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1390,
															1542
														],
														"referencedDeclaration": 1542,
														"src": "574:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "574:20:2"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "341:163:2",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "518:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "555:8:2"
									},
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "531:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "523:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:17:2"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:0:2"
									},
									"scope": 1676,
									"src": "509:92:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1677,
							"src": "272:331:2",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759
							]
						}
					],
					"src": "84:520:2"
				},
				"id": 2
			},
			"ERC721ASoulbound.sol": {
				"ast": {
					"absolutePath": "ERC721ASoulbound.sol",
					"exportedSymbols": {
						"ERC721A": [
							1653
						],
						"ERC721ABurnable": [
							1676
						],
						"ERC721ASoulbound": [
							1717
						],
						"ERC721A__IERC721Receiver": [
							48
						],
						"IERC721A": [
							1923
						],
						"IERC721ABurnable": [
							1936
						],
						"IERC721ASoulbound": [
							1946
						]
					},
					"id": 1718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:3"
						},
						{
							"absolutePath": "IERC721ASoulbound.sol",
							"file": "./IERC721ASoulbound.sol",
							"id": 1679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1947,
							"src": "109:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC721ABurnable.sol",
							"file": "./ERC721ABurnable.sol",
							"id": 1680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 1677,
							"src": "143:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1682,
										"name": "ERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1676,
										"src": "301:15:3"
									},
									"id": 1683,
									"nodeType": "InheritanceSpecifier",
									"src": "301:15:3"
								},
								{
									"baseName": {
										"id": 1684,
										"name": "IERC721ASoulbound",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1946,
										"src": "318:17:3"
									},
									"id": 1685,
									"nodeType": "InheritanceSpecifier",
									"src": "318:17:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1681,
								"nodeType": "StructuredDocumentation",
								"src": "176:86:3",
								"text": " @title ERC721ASoulbound.\n @dev ERC721A token that is non-transferable."
							},
							"fullyImplemented": false,
							"id": 1717,
							"linearizedBaseContracts": [
								1717,
								1946,
								1676,
								1936,
								1653,
								1923
							],
							"name": "ERC721ASoulbound",
							"nameLocation": "281:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "739:131:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "753:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "769:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "761:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1699,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "761:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "761:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "753:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1714,
												"nodeType": "IfStatement",
												"src": "749:114:3",
												"trueBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1704,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "790:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "796:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1705,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "796:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "796:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "790:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1713,
													"nodeType": "IfStatement",
													"src": "786:77:3",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1710,
																"name": "SoulboundTokenCannotBeTransferred",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "828:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "828:35:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1712,
														"nodeType": "RevertStatement",
														"src": "821:42:3"
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "342:231:3",
										"text": " @dev Overrides _beforeTokenTransfers to make token non-transferable. The token is till mintable, and burnable.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "587:21:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1696,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "730:8:3"
									},
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "626:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "618:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "648:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "640:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "668:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "660:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "698:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "690:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:104:3"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:0:3"
									},
									"scope": 1717,
									"src": "578:292:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1718,
							"src": "263:609:3",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759,
								1945
							]
						}
					],
					"src": "84:789:3"
				},
				"id": 3
			},
			"IERC721A.sol": {
				"ast": {
					"absolutePath": "IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1923
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1720,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:4",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 1923,
							"linearizedBaseContracts": [
								1923
							],
							"name": "IERC721A",
							"nameLocation": "157:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1723,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:4"
									},
									"src": "253:42:4"
								},
								{
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:4",
										"text": " The token does not exist."
									},
									"id": 1726,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:4"
									},
									"src": "350:41:4"
								},
								{
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:4",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 1729,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:4"
									},
									"src": "467:35:4"
								},
								{
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:4",
										"text": " Cannot mint to the zero address."
									},
									"id": 1732,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:4"
									},
									"src": "564:26:4"
								},
								{
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:4",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 1735,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:4"
									},
									"src": "673:25:4"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:4",
										"text": " The token does not exist."
									},
									"id": 1738,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:4"
									},
									"src": "753:38:4"
								},
								{
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:4",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1741,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:4"
									},
									"src": "878:42:4"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:4",
										"text": " The token must be owned by `from`."
									},
									"id": 1744,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:4"
									},
									"src": "984:35:4"
								},
								{
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:4",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 1747,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:4"
									},
									"src": "1146:47:4"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:4",
										"text": " Cannot transfer to the zero address."
									},
									"id": 1750,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:4"
									},
									"src": "1259:30:4"
								},
								{
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:4",
										"text": " The token does not exist."
									},
									"id": 1753,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:4"
									},
									"src": "1344:36:4"
								},
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:4",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 1756,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:4"
									},
									"src": "1470:40:4"
								},
								{
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:4",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 1759,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:4"
									},
									"src": "1604:44:4"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1768,
									"members": [
										{
											"constant": false,
											"id": 1761,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 1768,
											"src": "1904:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1760,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1763,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 1768,
											"src": "2010:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1762,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 1768,
											"src": "2087:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1764,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 1768,
											"src": "2196:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1766,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:4",
									"nodeType": "StructDefinition",
									"scope": 1923,
									"src": "1835:384:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:4",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:4"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2653:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:4"
									},
									"scope": 1923,
									"src": "2607:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3222:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1776,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:4"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3265:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:4"
									},
									"scope": 1923,
									"src": "3195:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1791,
									"name": "Transfer",
									"nameLocation": "3557:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3566:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3608:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:4"
									},
									"src": "3551:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1800,
									"name": "Approval",
									"nameLocation": "3744:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "3753:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "3776:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "3802:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:4"
									},
									"src": "3738:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:4",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 1809,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3983:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "4006:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:4"
									},
									"src": "3962:85:4"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:4",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4151:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:4"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4189:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:4"
									},
									"scope": 1923,
									"src": "4132:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "4365:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:4"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "4405:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:4"
									},
									"scope": 1923,
									"src": "4348:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "5177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "5199:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "5219:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "5244:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:4"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:4"
									},
									"scope": 1923,
									"src": "5142:145:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:4",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "5413:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "5435:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "5455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:4"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:4"
									},
									"scope": 1923,
									"src": "5378:116:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6048:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6070:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6090:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:4"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:4"
									},
									"scope": 1923,
									"src": "6017:112:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6616:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:4"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:4"
									},
									"scope": 1923,
									"src": "6599:63:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7016:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "7034:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:4"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:4"
									},
									"scope": 1923,
									"src": "6989:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "7230:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:4"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "7270:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:4"
									},
									"scope": 1923,
									"src": "7209:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "7464:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "7479:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:4"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "7520:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:4"
									},
									"scope": 1923,
									"src": "7438:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:4"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "7819:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:4"
									},
									"scope": 1923,
									"src": "7780:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:4"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "7946:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:4"
									},
									"scope": 1923,
									"src": "7905:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "8080:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:4"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "8120:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1908,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:4"
									},
									"scope": 1923,
									"src": "8062:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:4",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 1922,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "8620:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "8649:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "8668:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "8690:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:4"
									},
									"src": "8594:116:4"
								}
							],
							"scope": 1924,
							"src": "147:8565:4",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759
							]
						}
					],
					"src": "84:8629:4"
				},
				"id": 4
			},
			"IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							1923
						],
						"IERC721ABurnable": [
							1936
						]
					},
					"id": 1937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:5"
						},
						{
							"absolutePath": "IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 1926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1937,
							"sourceUnit": 1924,
							"src": "109:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1928,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "212:8:5"
									},
									"id": 1929,
									"nodeType": "InheritanceSpecifier",
									"src": "212:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1927,
								"nodeType": "StructuredDocumentation",
								"src": "136:45:5",
								"text": " @dev Interface of ERC721ABurnable."
							},
							"fullyImplemented": false,
							"id": 1936,
							"linearizedBaseContracts": [
								1936,
								1923
							],
							"name": "IERC721ABurnable",
							"nameLocation": "192:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "227:163:5",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "404:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "417:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "409:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:17:5"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:0:5"
									},
									"scope": 1936,
									"src": "395:40:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1937,
							"src": "182:255:5",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759
							]
						}
					],
					"src": "84:354:5"
				},
				"id": 5
			},
			"IERC721ASoulbound.sol": {
				"ast": {
					"absolutePath": "IERC721ASoulbound.sol",
					"exportedSymbols": {
						"IERC721A": [
							1923
						],
						"IERC721ABurnable": [
							1936
						],
						"IERC721ASoulbound": [
							1946
						]
					},
					"id": 1947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:6"
						},
						{
							"absolutePath": "IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 1939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1947,
							"sourceUnit": 1937,
							"src": "109:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1941,
										"name": "IERC721ABurnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1936,
										"src": "221:16:6"
									},
									"id": 1942,
									"nodeType": "InheritanceSpecifier",
									"src": "221:16:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1940,
								"nodeType": "StructuredDocumentation",
								"src": "143:46:6",
								"text": " @dev Interface of ERC721ASoulbound."
							},
							"fullyImplemented": false,
							"id": 1946,
							"linearizedBaseContracts": [
								1946,
								1936,
								1923
							],
							"name": "IERC721ASoulbound",
							"nameLocation": "200:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "244:59:6",
										"text": " A Soulbound token cannot be transferred."
									},
									"id": 1945,
									"name": "SoulboundTokenCannotBeTransferred",
									"nameLocation": "314:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:2:6"
									},
									"src": "308:42:6"
								}
							],
							"scope": 1947,
							"src": "190:162:6",
							"usedErrors": [
								1723,
								1726,
								1729,
								1732,
								1735,
								1738,
								1741,
								1744,
								1747,
								1750,
								1753,
								1756,
								1759,
								1945
							]
						}
					],
					"src": "84:269:6"
				},
				"id": 6
			}
		}
	}
}